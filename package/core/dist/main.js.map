{"mappings":"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","sources":["src/index.ts","src/test/package-platform-test.ts","src/platform/package.ts","src/test/test-chunk-data-allocator.ts","src/world/chunk-data-allocator.ts","src/net/data/types/list-data-type.ts","src/net/data/types/object-data-type.ts","src/world/chunk-data-referencer.ts","src/test/test-chunk-data.ts","src/world/world.ts","src/world/chunk.ts","src/world/chunk-data-bits.ts","src/world/chunk-data-buffer.ts","src/world/chunk-data-field.ts","src/world/chunk-data-map.ts","src/package/core/net/player-interaction-interface.ts","src/platform/identifier.ts","src/package/core/net/remote-interaction-interface.ts","src/net/server-interface.ts","src/poly/websocket.js","src/net/socket-interface.ts","src/utils/rotation.ts","src/platform/container.ts","src/platform/platform.ts","src/platform/virtual-package-list.ts","src/platform/registry.ts","src/view/component.ts","src/poly/fs.js","src/world/chunk-data-options.ts","src/world/entity.ts","src/utils/vector2d/handleable-vector2d.ts","src/utils/vector2d/mutable-vector2d.ts","src/utils/vector2d/vector2d.ts","src/utils/vector2d/immutable-vector2d.ts","src/utils/vector3d/handleable-vector3d.ts","src/utils/vector3d/mutable-vector3d.ts","src/utils/vector3d/vector3d.ts","src/utils/vector3d/immutable-vector3d.ts","src/view/common/button-component.ts","src/view/launcher/launcher-component.ts","src/net/storage/world-storage-interface.ts","src/view/layout/centered-flex-component.ts","src/view/layout/flex-component.ts","src/view/layout/column-component.ts","src/view/layout/flexbox-component.ts","src/view/layout/row-component.ts","src/net/data/types/data-type.ts","src/net/data/types/identifier-data-type.ts","src/net/data/types/map-data-type.ts","src/net/data/types/number-data-type.ts","src/net/data/types/string-data-type.ts"],"sourcesContent":["// Generated file using util/build-index.js\nexport * from './test/package-platform-test.js';\nexport * from './test/test-chunk-data-allocator.js';\nexport * from './test/test-chunk-data.js';\nexport * from './package/core/net/player-interaction-interface.js';\nexport * from './package/core/net/remote-interaction-interface.js';\nexport * from './net/server-interface.js';\nexport * from './net/socket-interface.js';\nexport * from './utils/rotation.js';\nexport * from './platform/container.js';\nexport * from './platform/identifier.js';\nexport * from './platform/package.js';\nexport * from './platform/platform.js';\nexport * from './platform/registry.js';\nexport * from './platform/virtual-package-list.js';\nexport * from './view/component.js';\nexport * from './poly/fs.js';\nexport * from './poly/websocket.js';\nexport * from './world/chunk-data-allocator.js';\nexport * from './world/chunk-data-bits.js';\nexport * from './world/chunk-data-buffer.js';\nexport * from './world/chunk-data-field.js';\nexport * from './world/chunk-data-map.js';\nexport * from './world/chunk-data-options.js';\nexport * from './world/chunk-data-referencer.js';\nexport * from './world/chunk.js';\nexport * from './world/entity.js';\nexport * from './world/world.js';\nexport * from './utils/vector2d/handleable-vector2d.js';\nexport * from './utils/vector2d/immutable-vector2d.js';\nexport * from './utils/vector2d/mutable-vector2d.js';\nexport * from './utils/vector2d/vector2d.js';\nexport * from './utils/vector3d/handleable-vector3d.js';\nexport * from './utils/vector3d/immutable-vector3d.js';\nexport * from './utils/vector3d/mutable-vector3d.js';\nexport * from './utils/vector3d/vector3d.js';\nexport * from './view/common/button-component.js';\nexport * from './view/launcher/launcher-component.js';\nexport * from './net/storage/world-storage-interface.js';\nexport * from './view/layout/centered-flex-component.js';\nexport * from './view/layout/column-component.js';\nexport * from './view/layout/flex-component.js';\nexport * from './view/layout/flexbox-component.js';\nexport * from './view/layout/row-component.js';\nexport * from './net/data/types/data-type.js';\nexport * from './net/data/types/identifier-data-type.js';\nexport * from './net/data/types/list-data-type.js';\nexport * from './net/data/types/map-data-type.js';\nexport * from './net/data/types/number-data-type.js';\nexport * from './net/data/types/object-data-type.js';\nexport * from './net/data/types/string-data-type.js';\n","import { Platform } from \"../index.js\";\nimport { Package } from \"../platform/package.js\";\n\nconst platform = new Platform();\n\nclass Package1 extends Package {\n    id = \"package1\";\n\n    async setup(platform: Platform) {\n        console.log(\"setup package1\");\n    }\n}\n\nclass Package2 extends Package {\n    id = \"package2\";\n\n    async setup(platform: Platform) {\n        console.log(\"setup package2\");\n\n        const package1 = await platform.require('package1');\n\n        console.log(\"package1\", package1);\n    }\n}\n\nplatform.packages.add(new Package2());\nplatform.packages.add(new Package1());\n\nawait platform.setup();","import { Platform } from \"./platform.js\";\n\nexport abstract class Package {\n    abstract setup(platform: Platform): Promise<void>;\n    abstract get id(): string;\n}","import { ChunkDataAllocator } from \"../world/chunk-data-allocator.js\";\nimport { ChunkDataReferencer } from \"../world/chunk-data-referencer.js\";\n\nconst referencer = new ChunkDataReferencer();\n\nconst allocator = new ChunkDataAllocator({ referencer });\n\nallocator.allocate('u16', \"block_type\"); // all bits are block type\nallocator.allocate('u16', \"fluid_status\"); // bits 0-11: type, bits 12-15: level\nallocator.allocate('b', \"was_placed\");\nallocator.allocate('b', \"was_harvested\");\nallocator.allocate('b', \"was_updated\");\nallocator.allocate('a', \"inventory\");\n\nconst options = allocator.generateOptions();\n\nconsole.log(options);","import { ListDataType } from \"../net/data/types/list-data-type.js\";\nimport { ObjectDataType } from \"../net/data/types/object-data-type.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport class ChunkDataAllocator {\n    _referencer: ChunkDataReferencer;\n    _bitCount: number;\n    _attributeCount: number;\n    _buffers: { type: string, label: string }[];\n    _fields: { type: string, index: number | string, label: string }[];\n    _generatedOptions: {};\n\n    constructor({ referencer }: { referencer: ChunkDataReferencer }) {\n        this._referencer = referencer;\n        this._bitCount = 0;\n        this._attributeCount = 0;\n        this._buffers = [];\n        this._fields = [];\n        this._generatedOptions = null;\n    }\n\n    allocate(type, label = '') {\n        if (type == 'b') {\n            let index = this._bitCount++;\n\n            this._fields.push({ type: 'b', index, label });\n\n            return index;\n        } else if (type == 'a') {\n            let index = this._attributeCount++;\n\n            this._fields.push({ type: 'a', index: label || index, label: label || index });\n\n            return label || index;\n        } else {\n            const index = this._buffers.length;\n\n            this._buffers.push({ type, label });\n            this._fields.push({ type, index, label });\n\n            return index;\n        }\n    }\n\n    generateOptions() {\n        if (this._generatedOptions) return this._generatedOptions;\n\n        this._generatedOptions = {};\n\n        if (this._bitCount > 0) {\n            this._generatedOptions.bits = {\n                count: this._bitCount,\n                referencer: this._referencer\n            };\n        }\n\n        if (this._attributeCount > 0) {\n            this._generatedOptions.map = {\n                referencer: this._referencer\n            };\n        }\n\n        this._generatedOptions.buffers = [];\n\n        for (const buffer of this._buffers) {\n            this._generatedOptions.buffers.push({\n                type: buffer.type,\n                label: buffer.label,\n                referencer: this._referencer\n            });\n        }\n\n        this._generatedOptions.fields = this._fields;\n\n        return this._generatedOptions;\n    }\n\n    generateType() {\n        const cellType = new ObjectDataType();\n        \n        return new ListDataType(ListDataType.Set, cellType, this._referencer.cellsInChunk);\n    }\n}",null,"import { DataType } from \"./data-type.js\";\n\n// `{ ${keyName}: ${valueType}, ... }`\nexport class ObjectDataType<T> implements DataType<T> {\n    properties: { [key: string]: DataType<any> };\n    keys: string[];\n\n    constructor(properties) {\n        this.properties = properties;\n        this.keys = null;\n\n        this.sortProperties();\n    }\n\n    sortProperties() {\n        this.keys = Object.keys(this.properties).sort();\n    }\n\n    *encode(data) {\n        for (const key of this.keys) {\n            const type = this.properties[key];\n\n            yield* type.encode(data[key]);\n        }\n    }\n\n    length(data) {\n        let length = 0;\n\n        for (const key of this.keys) {\n            const value = this.properties[key];\n\n            length += value.length(data[key]);\n        }\n\n        return length;\n    }\n\n    decode(view, index) {\n        const data = {};\n\n        let length = 0;\n\n        for (const key of this.keys) {\n            const value = this.properties[key];\n\n            const [ itemData, itemLength ] = value.decode(view, index + length);\n\n            length += itemLength;\n            data[key] = itemData;\n        }\n\n        return [ data, length ];\n    }\n\n    matches(data) {\n        return typeof data == 'object' && !Array.isArray(data) &&\n               !(data instanceof Set) && !(data instanceof WeakSet);\n    }\n}","export class ChunkDataReferencer {\n    _chunkWidth: number;\n    _chunkHeight: number;\n    _chunkDepth: number;\n\n    constructor({ chunkWidth = 16, chunkHeight = 16, chunkDepth = 32 } = {}) {\n        this._chunkWidth = chunkWidth;\n        this._chunkHeight = chunkHeight;\n        this._chunkDepth = chunkDepth;\n    }\n\n    get cellsInChunk() {\n        return this._chunkWidth * this._chunkHeight * this._chunkDepth;\n    }\n\n    indexOfPosition(x: number, y: number, z: number): number {\n        if (x < 0 || x >= this._chunkWidth) throw new Error(`Coordinate X in chunk is out of bounds: 0 ≤ ${x} < ${this._chunkWidth}`);\n        if (y < 0 || y >= this._chunkHeight) throw new Error(`Coordinate Y in chunk is out of bounds: 0 ≤ ${y} < ${this._chunkHeight}`);\n        if (z < 0 || z >= this._chunkDepth) throw new Error(`Coordinate Z in chunk is out of bounds: 0 ≤ ${z} < ${this._chunkDepth}`);\n\n        return x + y * this._chunkWidth + z * this._chunkWidth * this._chunkHeight;\n    }\n\n    xOfIndex(index: number): number {\n        return index % this._chunkWidth;\n    }\n\n    yOfIndex(index: number): number {\n        return Math.floor(index / this._chunkWidth) % this._chunkHeight;\n    }\n\n    zOfIndex(index: number): number {\n        return Math.floor(index / (this._chunkWidth * this._chunkHeight));\n    }\n}","import { ChunkDataAllocator } from \"../world/chunk-data-allocator.js\";\nimport { ChunkDataReferencer } from \"../world/chunk-data-referencer.js\";\nimport { World } from \"../world/world.js\";\n\nconst referencer = new ChunkDataReferencer();\n\nconst allocator = new ChunkDataAllocator({ referencer });\n\nallocator.allocate('u16', \"block_type\"); // all bits are block type\nallocator.allocate('u16', \"fluid_status\"); // bits 0-11: type, bits 12-15: level\nallocator.allocate('b', \"was_placed\");\nallocator.allocate('b', \"was_harvested\");\nallocator.allocate('b', \"was_updated\");\nallocator.allocate('a', \"inventory\");\n\nconst options = allocator.generateOptions();\n\nconst world = new World();\n\nworld.chunkDataOptions = options;\n\nconst chunk = world.createChunk(0, 0);\n\nconsole.log(chunk);\n\nconsole.log(\"Test: Buffer Field\");\n\nchunk.field('block_type').set(0, 0, 0, 309);\nif (chunk.field('block_type').get(0, 0, 0) != 309) throw new Error(\"Test failed\");\n\nconsole.log(\"Test: Map Field\");\n\nchunk.field('inventory').set(0, 0, 0, \"Hello\");\nif (chunk.field('inventory').get(0, 0, 0) != \"Hello\") throw new Error(\"Test failed\");\n\nconsole.log(\"Test: Bit Field\");\n\nchunk.field('was_placed').set(0, 0, 0, true);\nif (!chunk.field('was_placed').get(0, 0, 0)) throw new Error(\"Test failed\");","import { ImmutableVector2D, Vector2D } from \"../index.js\";\nimport { Chunk } from \"./chunk.js\";\n\nexport class World {\n    _entityIdMapping: Map<string, number>;\n    _chunks: Map<string, Chunk>;\n\n    constructor() {\n        this._entityIdMapping = new Map();\n        this._chunks = new Map();\n    }\n\n    createChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n\n        const chunk = new Chunk();\n\n        chunk.world = this;\n        chunk.position = new ImmutableVector2D(x, z);\n\n        chunk._setup();\n\n        return chunk;\n    }\n\n    getChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n        \n        return this._chunks.get(x + '.' + z) || null;\n    }\n\n    addEntity(entity) {\n        this._entityIdMapping.add(entity.id);\n\n        entity.world = this;\n\n        entity._joinWorld();\n\n\n\n        return entity;\n    }\n}","import { ImmutableVector2D } from \"../index.js\";\nimport { ChunkDataBits } from \"./chunk-data-bits.js\";\nimport { ChunkDataBuffer } from \"./chunk-data-buffer.js\";\nimport { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataMap } from \"./chunk-data-map.js\";\nimport { World } from \"./world.js\";\n\nexport class Chunk {\n    world: World;\n    position: ImmutableVector2D;\n    _entities: Set<Entity>;\n    _bits: ChunkDataBits;\n    _buffers: ChunkDataBuffer[];\n    _map: ChunkDataMap;\n    _fields: Map<string, ChunkDataField>;\n\n    constructor() {\n        this.world = null;\n        this.position = null;\n\n        this._entities = new Set();\n\n        this._bits = null;\n        this._buffers = [];\n        this._map = null;\n        this._fields = new Map();\n    }\n\n    _unload() {\n        for (const entity of this._entities) {\n            this.world._entityIdMapping.delete(entity.id);\n        }\n    }\n\n    _setup() {\n        const { bits, buffers, map, fields } = this.world._chunkDataOptions;\n\n        if (bits) {\n            this._bits = new ChunkDataBits(bits);\n        }\n\n        if (map) {\n            this._map = new ChunkDataMap(map);\n        }\n\n        for (const buffer of buffers) {\n            this._buffers.push(new ChunkDataBuffer(buffer));\n        }\n\n        for (const field of fields) {\n            this._fields.set(field.label, new ChunkDataField(field.index, field.label, field.type, this));\n        }\n    }\n\n    field(name) {\n        return this._fields.get(name);\n    }\n}","import { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport class ChunkDataBits {\n    _count: number;\n    _referencer: ChunkDataReferencer;\n    _label: string;\n    _arrays: Uint8Array[];\n\n    constructor({ label = '', count, referencer, _arrays = null }: { label?: string, count: number, referencer: any, _arrays?: any }) {\n        this._count = count;\n        this._referencer = referencer;\n        this._label = label;\n        this._arrays = _arrays;\n\n        if (!this._arrays) this._makeArrays();\n    }\n\n    _makeArrays() {\n        this._arrays = [];\n\n        for (let i = 0; i < this._count / 8; i++) {\n            this._arrays.push(new Uint8Array(this._referencer.cellsInChunk));\n        }\n    }\n\n    _labelString() {\n        if (this._label) {\n            return `'${this._label}'`;\n        } else {\n            return '[ChunkDataBits]';\n        }\n    }\n\n    _array(index: number) {\n        return this._arrays[Math.floor(index / 8)];\n    }\n\n    get(bitIndex: number, x: number, y: number, z: number) {\n        if (typeof y == 'undefined') {\n            if (x < 0 || x >= this._referencer._chunkWidth) throw new Error(`Index in ${this._labelString()} is out of bounds: ${x}`);\n\n            return this._array(bitIndex)[x] & (1 << (bitIndex % 8));\n        } else {\n            return this._array(bitIndex)[this._referencer.indexOfPosition(x, y, z)] & (1 << (bitIndex % 8));\n        }\n    }\n\n    set(bitIndex: number, x: number, y: number, z: number, value: boolean) {\n        if (typeof y == 'undefined') {\n            if (x < 0 || x >= this._referencer._chunkWidth) throw new Error(`Index in ${this._labelString()} is out of bounds: ${x}`);\n\n            if (value) {\n                this._array(bitIndex)[x] |= (1 << bitIndex);\n            } else {\n                this._array(bitIndex)[x] &= ~(1 << bitIndex);\n            }\n        } else {\n            if (value) {\n                this._array(bitIndex)[this._referencer.indexOfPosition(x, y, z)] |= (1 << (bitIndex % 8));\n            } else {\n                this._array(bitIndex)[this._referencer.indexOfPosition(x, y, z)] &= ~(1 << (bitIndex % 8));\n            }\n        }\n    }\n}","import { BaseVector2D } from \"../index.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport type TypedArrayConstructor = Uint8ArrayConstructor | Int8ArrayConstructor | Uint16ArrayConstructor | Int16ArrayConstructor | Uint32ArrayConstructor | Int32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor;\nexport type TypedArray = Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\nexport class ChunkDataBuffer {\n    _arrayType: TypedArrayConstructor;\n    _referencer: ChunkDataReferencer;\n    _label: string;\n    _data: TypedArray;\n\n    constructor({ label = '', type, referencer } : { label: string, type: 'u8' | 'i8' | 'u16' | 'i16' | 'u32' | 'i32' | 'f32' | 'f64', referencer: ChunkDataReferencer }) {\n        this._arrayType = ChunkDataBuffer._typeToTypedArrayConstructor(type);\n        this._referencer = referencer;\n        this._label = label;\n\n        this._data = new (this._arrayType)(referencer.cellsInChunk);\n    }\n\n    _labelString() {\n        if (this._label) {\n            return `'${this._label}'`;\n        } else {\n            return `ChunkDataBuffer<${this._data.constructor.name}>`;\n        }\n    }\n\n    get(index: number): number;\n    get(x: number, y: number, z: number): number;\n    get(x: number, y?: number, z?: number) {\n        if (typeof y == 'undefined') {\n            if (x < 0 || x >= this._referencer._chunkWidth) throw new Error(`Index in ${this._labelString()} is out of bounds: ${x}`);\n\n            return this._data[x];\n        } else {\n            return this._data[this._referencer.indexOfPosition(x, y, z)];\n        }\n    }\n\n    set(x: number, y: number, z?: number, value?: number) {\n        if (typeof z === 'undefined') {\n            if (x < 0 || x >= this._referencer._chunkWidth) throw new Error(`Index in ${this._labelString()} is out of bounds: ${x}`);\n\n            this._data[x] = z;\n        } else {\n            this._data[this._referencer.indexOfPosition(x, y, z)] = value;\n        }\n    }\n\n    static _typeToTypedArrayConstructor(type: string): TypedArrayConstructor {\n        if (type == 'i8') return Int8Array;\n        if (type == 'i16') return Int16Array;\n        if (type == 'i32') return Int32Array;\n        if (type == 'u8') return Uint8Array;\n        if (type == 'u16') return Uint16Array;\n        if (type == 'u32') return Uint32Array;\n        if (type == 'f32') return Float32Array;\n        if (type == 'f64') return Float64Array;\n\n        throw new Error(`Unknown array type: ${type}`);\n    }\n}","import { Vector2D } from \"../index.js\";\nimport { Chunk } from \"./chunk.js\";\n\nexport class ChunkDataField {\n    index: number;\n    chunk: Chunk;\n    type: string;\n    label: string;\n\n    constructor(index, label, type, chunk) {\n        this.index = index;\n        this.label = label;\n        this.type = type;\n        this.chunk = chunk;\n    }\n\n    get(x: number | Vector3D, y?: number, z?: number) {\n        if (x instanceof Vector3D) {\n            x = x.x;\n            y = x.y;\n            z = x.z;\n        }\n\n        if (this.type == 'b') {\n            return this.chunk._bits.get(this.index, x, y, z);\n        } else if (this.type == 'a') {\n            return this.chunk._map.get(this.index, x, y, z);\n        } else {\n            return this.chunk._buffers[this.index].get(x, y, z);\n        }\n    }\n\n    set(x: number | Vector3D, y: number | any, z?: number, value?: any) {\n        if (x instanceof Vector3D) {\n            x = x.x;\n            y = x.y;\n            z = x.z;\n            value = y;\n        }\n\n        if (this.type == 'b') {\n            return this.chunk._bits.set(this.index, x, y, z, value);\n        } else if (this.type == 'a') {\n            return this.chunk._map.set(this.index, x, y, z, value);\n        } else {\n            return this.chunk._buffers[this.index].set(x, y, z, value);\n        }\n    }\n}","import { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport class ChunkDataMap {\n    _referencer: ChunkDataReferencer;\n    _map: Map<string, any>;\n\n    constructor({ referencer }: { referencer: ChunkDataReferencer }) {\n        this._referencer = referencer;\n        this._map = new Map();\n    }\n\n    get(attribute, x, y, z) {\n        let index = typeof y == 'undefined' ? x : this._referencer.indexOfPosition(x, y, z);\n\n        return this._map.get(attribute + '.' + index);\n    }\n\n    set(attribute, x, y, z, value) {\n        let index = typeof y == 'undefined' ? x : this._referencer.indexOfPosition(x, y, z);\n\n        this._map.set(attribute + '.' + index, value);\n    }\n}","import { Identifier } from \"../../../platform/identifier.js\";\nimport { SocketInterface } from \"../../../net/socket-interface.js\";\n\nexport class PlayerInteractionInterface {\n    static PlayerMoveEvent = new Identifier('cubular', 'player_move');\n    static PlayerPlaceBlockEvent = new Identifier('cubular', 'player_place_block');\n\n    _socket: SocketInterface;\n\n    constructor(socket: SocketInterface) {\n        this._socket = socket;\n    }\n\n    movePlayer(location, rotation) {\n        this._socket.emit(PlayerInteractionInterface.PlayerMoveEvent.toString(), location.x, location.y, location.z, rotation.yaw, rotation.pitch, rotation.roll);\n    }\n\n    placeBlock(location) {\n        this._socket.emit(PlayerInteractionInterface.PlayerPlaceBlockEvent.toString(), location.x, location.y, location.z);\n    }\n}","export class Identifier {\n    namespace: string;\n    id: string;\n\n    constructor(namespace: string, id: string) {\n        this.namespace = namespace;\n        this.id = id;\n    }\n\n    is(identifier) {\n        return this.namespace === identifier.namespace && this.id === identifier.id;\n    }\n\n    toString() {\n        return `${this.namespace}:${this.id}`;\n    }\n\n    fromString(string) {\n        const [ namespace, id ] = string.split(':');\n\n        return new Identifier(namespace, id);\n    }\n}","import { Identifier } from \"../../../platform/identifier.js\";\nimport { PlayerInteractionInterface } from \"./player-interaction-interface.js\";\nimport { SocketInterface } from \"../../../net/socket-interface.js\";\n\nexport class RemoteInteractionInterface {\n    _socket: SocketInterface;\n    _moveListeners: Set<(event: PlayerMoveEvent) => void>;\n    _placeBlockListeners: Set<(event: PlayerPlaceBlockEvent) => void>;\n\n    constructor(socket: SocketInterface) {\n        this._socket = socket;\n        this._moveListeners = new Set();\n        this._placeBlockListeners = new Set();\n\n        this._socket.on(PlayerInteractionInterface.PlayerMoveEvent.toString(), (event: PlayerMoveEvent) => {\n            for (const listener of this._moveListeners) {\n                listener(event);\n            }\n        });\n\n        this._socket.on(PlayerInteractionInterface.PlayerPlaceBlockEvent.toString(), (event: PlayerPlaceBlockEvent) => {\n            for (const listener of this._placeBlockListeners) {\n                listener(event);\n            }\n        });\n    }\n\n    onPlayerMove(listener) {\n        this._moveListeners.add(listener);\n    }\n\n    onPlayerPlaceBlock(listener) {\n        this._placeBlockListeners.add(listener);\n    }\n}","import { error } from 'console';\nimport ws from '../poly/websocket.js';\nimport http from '../poly/http.js';\nimport https from '../poly/https.js';\nimport { SocketInterface } from './socket-interface.js';\nimport { DataType, Registry } from '../index.js';\n\nexport class ServerInterface {\n    server: ws.WebSocketServer;\n    sockets: Set<SocketInterface>;\n    _connectListeners: Set<(socket: SocketInterface) => void>;\n\n    constructor(server: http.Server | https.Server, messageRegistry: Registry<DataType<any>>) {\n        if (!ws.WebSocketServer) {\n            throw new Error(\"Cannot create ServerInterface: WebSocketServer is not available\");\n        }\n\n        this.server = new ws.WebSocketServer({ server });\n        this.sockets = new Set();\n        this._connectListeners = new Set();\n\n        this.server.on('connection', webSocket => {\n            webSocket.on('error', error => {\n                error.message = `WebSocket error: ${error.message}`;\n\n                console.warn(error.stack);\n            });\n\n            const socket = new SocketInterface(webSocket, messageRegistry);\n\n            this.sockets.add(socket);\n\n            for (const listener of this._connectListeners) {\n                listener(socket);\n            }\n\n            socket.on('disconnect', () => {\n                this.sockets.delete(socket);\n            });\n        });\n    }\n\n    on(type: string, listener: (socket: SocketInterface) => void) {\n        if (type == 'connection') {\n            this._connectListeners.add(listener);\n        }\n    }\n}","var ws = null\n\nif (typeof WebSocket !== 'undefined') {\n    ws = WebSocket;\n} else {\n    ws = await import('ws');\n}\n\nexport default ws;","import { DataType, Registry } from '../index.js';\nimport ws from '../poly/websocket.js';\n\nexport class SocketInterface {\n    socket: ws.WebSocket;\n    _nameToId: Map<string, number>;\n    _messagesById: Map<number, any>;\n    _messageRegistry: Registry<DataType<any>>;\n    _messageListeners: Set<(data: any) => void>[];\n    _disconnectListeners: Set<() => void>;\n\n    constructor(urlOrWebsocket: string | ws.WebSocket, messageRegistry: Registry<DataType<any>>) {\n        this.socket = urlOrWebsocket instanceof ws.WebSocket ? urlOrWebsocket : new ws.WebSocket(urlOrWebsocket);\n        this.socket.binaryType = \"arraybuffer\";\n\n        this._nameToId = new Map();\n        this._messagesById = new Map();\n        this._messageRegistry = messageRegistry;\n        this._messageListeners = [];\n        this._disconnectListeners = new Set();\n\n        this.socket.addEventListener('message', event => {\n            const view = new DataView(event.data as ArrayBuffer);\n            const id = view.getUint16(0);\n            const transcoder = this._messagesById.get(id);\n\n            if (!transcoder) {\n                console.warn(new Error(`Unknown message id ${id}`).stack);\n\n                return;\n            }\n\n            let data;\n\n            try {\n                data = transcoder.decodeFrom(view, 2);\n            } catch (error) {\n                error.message = `Failed to decode message '${name}': ${error.message}`;\n\n                console.warn(error.stack);\n            }\n\n            const listeners = this._messageListeners[id];\n\n            for (const listener of listeners) {\n                listener(data);\n            }\n        });\n\n        this.socket.addEventListener('close', () => {\n            for (const listener of this._disconnectListeners) {\n                listener();\n            }\n        });\n    }\n\n    setup() {\n        [ ...this._messageRegistry.entries() ].sort()\n            .forEach(([ name, transcoder ], index) => {\n                this._nameToId.set(name, index);\n                this._messageListeners[index] = new Set();\n                this._messagesById.set(index, transcoder);\n            });\n    }\n\n    emit(name: string, data: any) {\n        const id = this._nameToId.get(name);\n        const transcoder = this._messagesById.get(id);\n\n        const buffer = new ArrayBuffer(2 + transcoder.lengthOf(data));\n        const view = new DataView(buffer);\n        view.setUint16(0, id);\n        \n        try {\n            transcoder.encodeTo(data, view, 2);\n        } catch (error) {\n            error.message = `Failed to encode message '${name}': ${error.message}`;\n\n            throw error;\n        }\n\n        this.socket.send(buffer);\n    }\n\n    on(name: 'disconnect', callback: () => unknown): void;\n    on(name: string, callback: (data: any) => unknown): void;\n    on(name: string, callback: ((data: any) => unknown) | (() => unknown)): void {\n        if (name == 'disconnect') {\n            this._disconnectListeners.add(callback as () => unknown);\n        } else {\n            const id = this._nameToId.get(name);\n\n            if (!this._messageListeners[id]) {\n                throw new Error(`Unknown message name '${name}'`);\n            }\n\n            this._messageListeners[id].add(callback);\n        }\n    }\n\n    disconnect() {\n        this.socket.close();\n    }\n}","export class Rotation {\n    yaw: number;\n    pitch: number;\n    roll: number;\n\n    constructor(yaw = 0, pitch = 0, roll = 0) {\n        if (typeof yaw !== 'number') throw new TypeError('yaw must be a number');\n        if (typeof pitch !== 'number') throw new TypeError('pitch must be a number');\n        if (typeof roll !== 'number') throw new TypeError('roll must be a number');\n        if (isNaN(yaw)) throw new TypeError('yaw must not be NaN');\n        if (isNaN(pitch)) throw new TypeError('pitch must not be NaN');\n        if (isNaN(roll)) throw new TypeError('roll must not be NaN');\n\n        this.yaw = yaw;\n        this.pitch = pitch;\n        this.roll = roll;\n    }\n}","import { Package } from \"./package.js\";\n\nexport class Container {\n    package: Package;\n    dependencies: Set<string>;\n    loaded: boolean = false;\n\n    constructor(pkg: Package) {\n        this.package = pkg;\n    }\n\n    get id() {\n        return this.package.id;\n    }\n}","import { Container } from \"./container.js\";\nimport { VirtualPackageList } from \"./virtual-package-list.js\";\n\nexport class Platform {\n    _containers: Set<Container>;\n    packages: VirtualPackageList;\n\n    constructor() {\n        this._containers = new Set();\n        this.packages = new VirtualPackageList(this);\n    }\n\n    async require(id: string) {\n        for (const container of this._containers) {\n            if (container.package.id == id) {\n                if (!container.loaded) {\n                    await container.package.setup(this);\n\n                    container.loaded = true;\n                }\n            }\n        }\n    }\n\n    async setup() {\n        for (const container of this._containers) {\n            container.package.setup(this);\n            \n            container.loaded = true;\n        }\n    }\n}","import { Container } from \"./container.js\";\nimport { Package } from \"./package.js\";\nimport { Platform } from \"./platform.js\";\n\nexport class VirtualPackageList {\n    _platform: Platform;\n\n    constructor(platform: Platform) {\n        this._platform = platform;\n    }\n\n    *[Symbol.iterator]() {\n        for (const container of this._platform._containers) {\n            yield container.package;\n        }\n    }\n\n    add(pkg: Package) {\n        this._platform._containers.add(new Container(pkg));\n    }\n}","import { Identifier } from \"./identifier.js\";\n\nexport class Registry<T> {\n    static Factory = Symbol(\"Factory\");\n\n    _data: Map<string, new () => T>;\n\n    constructor() {\n        this._data = new Map();\n    }\n\n    entries() {\n        return this._data.entries();\n    }\n\n    get(identifier: Identifier | string) {\n        return this._data.get(identifier.toString());\n    }\n\n    register(identifier: Identifier | string, object: new () => T) {\n        this._data.set(identifier.toString(), object);\n    }\n}","export class Component {\n    constructor() {\n        this.parent = null;\n        this._element = null;\n    }\n\n    bind(child) {\n        child.parent = this;\n    }\n\n    get element() {\n        if (this._element) return this._element;\n\n        this._element = this.render();\n\n        return this._element;\n    }\n}","let fs;\n\nif (typeof window == 'undefined') {\n    fs = await import('fs/promises');\n} else {\n    fs = null;\n}\n\nexport default fs;","export interface ChunkDataOptions {\n    bits: { label?: string, count: number, referencer: any, _arrays?: any }[],\n    \n}","export class Entity {\n    id: string;\n    position: Vector3D;\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { MutableVector2D } from \"./mutable-vector2d.js\";\nimport { Vector2D } from \"./vector2d.js\";\n\nexport class HandleableVector2D extends MutableVector2D {\n    _listeners: Set<() => unknown>;\n\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n\n        this._listeners = new Set();\n    }\n\n    on(type: 'change', handler: () => unknown) {\n        if (type == 'change') {\n            this._listeners.add(handler);\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    cause(type: 'change') {\n        if (type == 'change') {\n            for (const listener of this._listeners) {\n                listener();\n            }\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    _set(x: number, y: number): this {\n        this.cause('change');\n\n        return super._set(x, y);\n    }\n\n    clone() {\n        throw new Error(\"Cannot clone handleable vector. Instead use immutable() or mutable() to output a non-handlable vector.\");\n    }\n\n    static from(vector: Vector3D, format: string) {\n        return new HandleableVector2D(...Vector2D._from(vector, format));\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { Vector2D } from \"./vector2d.js\";\n\nexport class MutableVector2D extends Vector2D {\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n    }\n\n    _set(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    set(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.set(x, y);\n            } else {\n                return this.set(x, x);\n            }\n        } else {\n            return this.set(x.x, x.y);\n        }\n    }\n\n    static from(vector: Vector3D, format: string) {\n        return new MutableVector2D(...Vector2D._from(vector, format));\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { HandleableVector2D } from \"./handleable-vector2d.js\";\nimport { ImmutableVector2D } from \"./immutable-vector2d.js\";\nimport { MutableVector2D } from \"./mutable-vector2d.js\";\n\nexport abstract class Vector2D {\n    x: number;\n    y: number;\n\n    constructor(x = 0, y = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n\n        this.x = x;\n        this.y = y;\n    }\n\n    abstract _set(x: number, y: number): Vector2D;\n\n    add(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x + x, this.y + y);\n            } else {\n                return this._set(this.x + x, this.y + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y);\n        }\n    }\n\n    subtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x - x, this.y - y);\n            } else {\n                return this._set(this.x - x, this.y - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y);\n        }\n    }\n\n    reverseSubtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x - this.x, y - this.y);\n            } else {\n                return this._set(x - this.x, x - this.y);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y);\n        }\n    }\n\n    complexMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x);\n        }\n    }\n\n    scalarMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x, this.y * y);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y);\n        }\n    }\n\n    scalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x / x, this.y / y);\n            } else {\n                return this._set(this.x / x, this.y / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x / this.x, y / this.y);\n            } else {\n                return this._set(x / this.x, x / this.y);\n            }\n        } else {\n            return this._set(x.x / this.x, x.y / this.y);\n        }\n    }\n\n    dot(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.x * x + this.y * y;\n            } else {\n                return this.x * x + this.y * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return (this.x - x) * (this.x - x) + (this.y - y) * (this.y - y);\n            } else {\n                return (this.x - x) * (this.x - x) + (this.y - x) * (this.y - x);\n            }\n        } else {\n            return (this.x - x.x) * (this.x - x.x) + (this.y - x.y) * (this.y - x.y);\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    immutable() {\n        return new ImmutableVector2D(this.x, this.y);\n    }\n\n    mutable() {\n        return new MutableVector2D(this.x, this.y);\n    }\n\n    clone() {\n        if (this instanceof MutableVector2D) return new MutableVector2D(this.x, this.y);\n        if (this instanceof ImmutableVector2D) return new ImmutableVector2D(this.x, this.y);\n        if (this instanceof HandleableVector2D) return new HandleableVector2D(this.x, this.y);\n        throw new Error(`Unknown vector type: ${this}`);\n    }\n\n    handle() {\n        return new HandleableVector2D(this.x, this.y);\n    }\n\n    static *_from(vector: Vector3D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == 'z' ? vector.z : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == 'z' ? vector.z : format[1] == '1' ? 1 : 0;\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { Vector2D } from \"./vector2d.js\";\n\nexport class ImmutableVector2D extends Vector2D {\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n    }\n\n    _set(x: number, y: number): ImmutableVector2D {\n        return new ImmutableVector2D(x, y);\n    }\n\n    private set(x: number | Vector2D, y?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector3D, format: string) {\n        return new ImmutableVector2D(...Vector2D._from(vector, format));\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { MutableVector3D } from \"./mutable-vector3d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class HandleableVector3D extends MutableVector3D {\n    _listeners: Set<() => unknown>;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n\n        this._listeners = new Set();\n    }\n\n    on(type: 'change', handler: () => unknown) {\n        if (type == 'change') {\n            this._listeners.add(handler);\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    cause(type: 'change') {\n        if (type == 'change') {\n            for (const listener of this._listeners) {\n                listener();\n            }\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    _set(x: number, y: number, z: number): this {\n        this.cause('change');\n\n        return super._set(x, y, z);\n    }\n\n    clone() {\n        throw new Error(\"Cannot clone handleable vector. Instead use immutable() or mutable() to output a non-handlable vector.\");\n    }\n\n    static from(vector: Vector2D, format: string) {\n        return new HandleableVector3D(...Vector3D._from(vector, format));\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class MutableVector3D extends Vector3D {\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n    }\n\n    _set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    static from(vector: Vector2D, format: string) {\n        return new MutableVector3D(...Vector3D._from(vector, format));\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { HandleableVector3D } from \"./handleable-vector3d.js\";\nimport { ImmutableVector3D } from \"./immutable-vector3d.js\";\nimport { MutableVector3D } from \"./mutable-vector3d.js\";\n\nexport abstract class Vector3D {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x = 0, y = 0, z = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (typeof z !== 'number') throw new TypeError('z must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n        if (isNaN(z)) throw new TypeError('z must not be NaN');\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    abstract _set(x: number, y: number, z: number): Vector3D;\n\n    add(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x + x, this.y + y, this.z + z);\n            } else {\n                return this._set(this.x + x, this.y + x, this.z + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y, this.z + x.z);\n        }\n    }\n\n    subtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x - x, this.y - y, this.z - z);\n            } else {\n                return this._set(this.x - x, this.y - x, this.z - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y, this.z - x.z);\n        }\n    }\n\n    reverseSubtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x - this.x, y - this.y, z - this.z);\n            } else {\n                return this._set(x - this.x, x - this.y, x - this.z);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y, x.z - this.z);\n        }\n    }\n\n    complexMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x, this.z * x.z);\n        }\n    }\n\n    scalarMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x, this.y * y, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y, this.z * x.z);\n        }\n    }\n\n    scalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x / x, this.y / y, this.z / z);\n            } else {\n                return this._set(this.x / x, this.y / x, this.z / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y, this.z / x.z);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x / this.x, y / this.y, this.z / z);\n            } else {\n                return this._set(x / this.x, x / this.y, this.z / z);\n            }\n        } else {\n            return this._set(x.x / this.x, x.y / this.y, this.z / z);\n        }\n    }\n\n    dot(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.x * x + this.y * y + this.z * z;\n            } else {\n                return this.x * x + this.y * x + this.z * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y + this.z * x.z;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y, z));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y, x.z));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return (this.x - x) ** 2 + (this.y - y) ** 2 + (this.z - z) ** 2;\n            } else {\n                return (this.x - x) ** 2 + (this.y - x) ** 2 + (this.z - x) ** 2;\n            }\n        } else {\n            return (this.x - x.x) ** 2 + (this.y - x.y) ** 2 + (this.z - x.z) ** 2;\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    immutable() {\n        return new ImmutableVector3D(this.x, this.y, this.z);\n    }\n\n    mutable() {\n        return new MutableVector3D(this.x, this.y, this.z);\n    }\n\n    clone() {\n        if (this instanceof MutableVector3D) return new MutableVector3D(this.x, this.y, this.z);\n        if (this instanceof ImmutableVector3D) return new ImmutableVector3D(this.x, this.y, this.z);\n        if (this instanceof HandleableVector3D) return new HandleableVector3D(this.x, this.y, this.z);\n        throw new Error(`Unknown vector type: ${this.constructor.name}`);\n    }\n\n    handle() {\n        return new HandleableVector3D(this.x, this.y, this.z);\n    }\n\n    static *_from(vector: Vector2D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == '1' ? 1 : 0;\n        yield format[2] == 'x' ? vector.x : format[2] == 'y' ? vector.y : format[2] == '1' ? 1 : 0;\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class ImmutableVector3D extends Vector3D {\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n    }\n\n    _set(x: number, y: number, z: number): ImmutableVector3D {\n        return new ImmutableVector3D(x, y, z);\n    }\n\n    private set(x: number | Vector3D, y?: number, z?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector2D, format: string) {\n        return new ImmutableVector3D(...Vector3D._from(vector, format));\n    }\n}","import { Component } from \"../component.js\";\n\nexport class ButtonComponent extends Component {\n    constructor(text) {\n        super();\n\n        this.text = text;\n        this.listeners = new Set();\n    }\n\n    onClick(listener) {\n        if (this._element) {\n            this._element.addEventListener(\"click\", listener);\n        }\n    }\n\n    render() {\n        const element = document.createElement(\"button\");\n\n        element.classList.add(\"cubecraft-button\");\n        element.innerText = this.text;\n\n        for (const listener of this.listeners) {\n            element.addEventListener(\"click\", listener);\n        }\n\n        return element;\n    }\n}","import { Component } from \"../component.js\";\n\nexport class LauncherComponent extends Component {\n    \n}","export class WorldStorageInterface {\n    setup() {\n        throw new Error('Not implemented');\n    }\n    \n    loadChunk(chunk) {\n        throw new Error('Not implemented');\n    }\n\n    unloadChunk(chunk) {\n        throw new Error('Not implemented');\n    }\n}","import { FlexComponent } from \"./flex-component.js\";\n\nexport class CenteredFlexComponent extends FlexComponent {\n    render() {\n        const element = super.render();\n\n        element.classList.add(\"cubecraft-centered-flex\");\n\n        return element;\n    }\n}","export class FlexComponent extends Component {\n    constructor(size) {\n        super();\n\n        this._size = size;\n    }\n\n    render() {\n        const element = document.createElement(\"div\");\n\n        if (typeof this.size == 'number') element.style.flex = this._size;\n        element.classList.add(\"cubecraft-flex\");\n\n        return element;\n    }\n}","import { FlexboxComponent } from \"./flexbox-component.js\";\n\nexport class ColumnComponent extends FlexboxComponent {\n    constuctor() {\n        super(\"column\");\n    }\n}","import { Component } from \"../component.js\";\n\nexport class FlexboxComponent extends Component {\n    constructor(direction) {\n        super();\n\n        this.direction = direction;\n        this.children = new Set();\n    }\n\n    add(child) {\n        this.bind(child);\n\n        this.children.add(child);\n    }\n\n    render() {\n        const element = document.createElement(\"div\");\n\n        element.classList.add(\"cubecraft-flexbox-\" + this.direction);\n\n        for (const child of this.children) {\n            element.appendChild(child.element);\n        }\n\n        return element;\n    }\n}","import { FlexboxComponent } from \"./flexbox-component.js\";\n\nexport class RowComponent extends FlexboxComponent {\n    constuctor() {\n        super(\"row\");\n    }\n}","export interface DataType<T> {\n    encode(): Generator<ArrayBuffer>;\n    decode(): T;\n}",null,null,null,null],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}