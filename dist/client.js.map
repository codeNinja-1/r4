{"version":3,"file":"client.js","sources":["../src/game/game-runtime-type.ts","../src/game/registry/registry.ts","../src/game/registry/indexed-registry.ts","../src/game/registry/registries.ts","../src/game/registry/indexed-registry-item.ts","../src/render/utils/texture.ts","../src/utils/data-utils.ts","../src/utils/vector3d/vector3d.ts","../src/utils/vector3d/immutable-vector3d.ts","../src/render/world/model/static/block-model.ts","../src/utils/vector3d/mutable-vector3d.ts","../src/utils/matrix/matrix3.ts","../src/utils/rotation/rotation.ts","../src/utils/rotation/orientation.ts","../src/utils/vector2d/vector2d.ts","../src/utils/vector2d/immutable-vector2d.ts","../src/render/world/model/static/component/positioned-model-component.ts","../src/render/world/model/static/component/group-model-component.ts","../src/render/world/model/static/component/plane-model-component.ts","../src/render/world/model/static/component/box-model-component.ts","../src/world/prototype/block-prototype.ts","../src/world/prototype/base-block-prototype.ts","../src/content/block/stone/stone-prototype.ts","../src/world/prototype/base-entity-prototype.ts","../src/utils/vector3d/handleable-vector3d.ts","../src/world/chunk-data/chunk-data-referencer.ts","../src/world/entity/base-entity.ts","../src/content/entity/player/player-entity.ts","../src/content/entity/player/player-prototype.ts","../src/content/content.ts","../src/world/prototype/chunk-data-fields.ts","../src/world/chunk-data/chunk-data.ts","../src/world/chunk-interface.ts","../src/world/chunk.ts","../src/world/placeholder-chunk.ts","../src/world/world.ts","../src/world/prototype/block-position.ts","../src/world/chunk-data/chunk-data-field.ts","../src/world/chunk-data/chunk-data-number-field.ts","../src/world/chunk-data/chunk-data-number-allocation.ts","../src/game/event-clock.ts","../src/game/init-dispatcher.ts","../src/game/game.ts","../src/render/utils/color.ts","../src/utils/matrix/matrix4.ts","../src/render/world/pespective/projector.ts","../src/render/world/implementation/webgpu/bindings/bind-group-manager.ts","../src/render/world/implementation/webgpu/bindings.ts","../src/render/world/implementation/webgpu/bindings/bind-group.ts","../src/render/world/implementation/webgpu/bindings/buffer-bind-group-entry.ts","../src/render/world/implementation/webgpu/camera.ts","../src/render/world/implementation/webgpu/graphics-device.ts","../src/render/world/implementation/webgpu/pass/clear-render-pass.ts","../src/render/world/implementation/webgpu/bindings/texture-sampler.ts","../src/render/world/implementation/webgpu/bindings/webgpu-texture.ts","../src/render/world/implementation/webgpu/shader-module.ts","../src/render/world/implementation/webgpu/bindings/pipeline-bind-group-manager.ts","../src/render/world/implementation/webgpu/pass/base-render-pass.ts","../src/render/world/implementation/webgpu/pass/terrain-render-pass.ts","../src/render/world/mirror/render-world-mirror.ts","../src/render/world/terrain/assembled-mesh.ts","../src/render/world/terrain/mesh-assembler.ts","../src/render/world/instancing/instanced-data-segment.ts","../src/render/world/instancing/instanced-data.ts","../.old/render/webgpu-instanced-data.ts","../src/render/world/implementation/webgpu/webgpu-chunk-mirror.ts","../src/render/world/implementation/webgpu/webgpu-world-mirror.ts","../src/render/world/implementation/webgpu/webgpu-renderer.ts","../src/render/renderer.ts","../src/render/world/pespective/entity-perspective.ts","../src/world/world-generation/simple-world-generator.ts","../src/client/singleplayer-world-loader.ts","../src/client/client.ts","../src/client/main.ts"],"sourcesContent":["export enum GameRuntimeType { Singleplayer, MultiplayerClient, MultiplayerServer }","export class Registry<T> {\n    private data: Map<string, T>;\n\n    constructor() {\n        this.data = new Map();\n    }\n\n    entries() {\n        return this.data.entries();\n    }\n\n    get(identifier: string) {\n        return this.data.get(identifier);\n    }\n\n    register(identifier: string, object: T) {\n        this.data.set(identifier, object);\n    }\n\n    keys() {\n        return this.data.keys();\n    }\n\n    values() {\n        return this.data.values();\n    }\n}","import { IndexedRegistryItem } from \"./indexed-registry-item.js\";\nimport { Registry } from \"./registry.js\";\n\nexport class IndexedRegistry<T extends IndexedRegistryItem> extends Registry<T> {\n    private idsToItems: Map<number, T> = new Map();\n\n    get(id: string | number) {\n        if (typeof id == 'string') return super.get(id);\n\n        return this.idsToItems.get(id);\n    }\n\n    async allocate() {\n        this.idsToItems = new Map();\n\n        let id = 0;\n\n        for (const [ name, item ] of this.entries()) {\n            item.bindRegistryKeys(id, name);\n            this.idsToItems.set(id, item);\n\n            id++;\n        }\n    }\n}","import { Texture } from \"../../render/utils/texture.js\";\nimport { BlockModel } from \"../../render/world/model/static/block-model.js\";\nimport { ChunkDataFieldAllocation } from \"../../world/chunk-data/chunk-data-field-allocation.js\";\nimport { BlockPrototype } from \"../../world/prototype/block-prototype.js\";\nimport { EntityPrototype } from \"../../world/prototype/entity-prototype.js\";\nimport { IndexedRegistry } from \"./indexed-registry.js\";\nimport { Registry } from \"./registry.js\";\n\nexport namespace Registries {\n    export const blocks = new IndexedRegistry<BlockPrototype>();\n    export const entities = new Registry<EntityPrototype<any>>();\n    export const fields = new Registry<ChunkDataFieldAllocation<any>>();\n    export const textures = new IndexedRegistry<Texture>();\n    export const blockModels = new IndexedRegistry<BlockModel>();\n}","export abstract class IndexedRegistryItem {\n    private registeredId: number;\n    private registeredName: string;\n\n    bindRegistryKeys(id: number, name: string) {\n        this.registeredId = id;\n        this.registeredName = name;\n    }\n    \n    getRegisteredId() {\n        return this.registeredId;\n    }\n\n    getRegisteredName() {\n        return this.registeredName;\n    }\n}","import { IndexedRegistryItem } from \"../../game/registry/indexed-registry-item.js\";\nimport { Registries } from \"../../game/registry/registries.js\";\n\nexport class Texture extends IndexedRegistryItem {\n    private data: Uint8ClampedArray;\n    private width: number;\n    private height: number;\n\n    private constructor(data: Uint8ClampedArray, width: number, height: number) {\n        super();\n        \n        this.data = data;\n        this.width = width;\n        this.height = height;\n    }\n\n    getTextureWidth() {\n        return this.width;\n    }\n\n    getTextureHeight() {\n        return this.height;\n    }\n\n    toDataArray() {\n        return this.data;\n    }\n\n    toImageData() {\n        return new ImageData(this.data, this.width, this.height);\n    }\n\n    static fromImage(source: HTMLImageElement) {\n        const canvas = new OffscreenCanvas(source.width, source.height);\n        const context = canvas.getContext('2d')!;\n\n        context.drawImage(source, 0, 0);\n\n        const imageData = context.getImageData(0, 0, source.width, source.height);\n\n        return Texture.fromImageData(imageData);\n    }\n\n    static fromImageData(imageData: ImageData) {\n        return new Texture(imageData.data, imageData.width, imageData.height);\n    }\n\n    static fromDataArray(data: Uint8ClampedArray, width: number, height: number) {\n        return new Texture(data, width, height);\n    }\n\n    static load(name: string): Promise<Texture> {\n        const url = '/assets/textures/' + name.replace(/\\./g, '/') + '.png';\n        \n        return new Promise((resolve, reject) => {\n            const image = new Image();\n\n            image.onload = () => {\n                const texture = Texture.fromImage(image);\n\n                Registries.textures.register(name, texture);\n\n                resolve(texture);\n            };\n\n            image.onerror = () => {\n                reject(new Error(`Failed to load image from ${url}`));\n            };\n\n            image.src = url;\n        });\n    }\n}","export namespace DataUtils {\n    export function concat(buffers: ArrayBuffer[]): ArrayBuffer {\n        const totalLength = buffers.reduce((total, buffer) => total + buffer.byteLength, 0);\n        const result = new Uint8Array(totalLength);\n\n        let offset = 0;\n        for (const buffer of buffers) {\n            result.set(new Uint8Array(buffer), offset);\n            offset += buffer.byteLength;\n        }\n        \n        return result.buffer;\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { HandleableVector3D } from \"./handleable-vector3d.js\";\nimport { ImmutableVector3D } from \"./immutable-vector3d.js\";\nimport { MutableVector3D } from \"./mutable-vector3d.js\";\n\nexport abstract class Vector3D {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x = 0, y = 0, z = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (typeof z !== 'number') throw new TypeError('z must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n        if (isNaN(z)) throw new TypeError('z must not be NaN');\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    abstract _set(x: number, y: number, z: number): Vector3D;\n\n    set(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(x, y, z);\n            } else {\n                return this._set(x, x, x);\n            }\n        } else {\n            return this._set(x.x, x.y, x.z);\n        }\n    }\n\n    add(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x + x, this.y + y, this.z + z);\n            } else {\n                return this._set(this.x + x, this.y + x, this.z + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y, this.z + x.z);\n        }\n    }\n\n    subtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x - x, this.y - y, this.z - z);\n            } else {\n                return this._set(this.x - x, this.y - x, this.z - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y, this.z - x.z);\n        }\n    }\n\n    reverseSubtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(x - this.x, y - this.y, z - this.z);\n            } else {\n                return this._set(x - this.x, x - this.y, x - this.z);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y, x.z - this.z);\n        }\n    }\n\n    complexMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x, this.z * x.z);\n        }\n    }\n\n    scalarMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x * x, this.y * y, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y, this.z * x.z);\n        }\n    }\n\n    scalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x / x, this.y / y, this.z / z);\n            } else {\n                return this._set(this.x / x, this.y / x, this.z / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y, this.z / x.z);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(x / this.x, y / this.y, this.z / z);\n            } else if (typeof z == 'number') {\n                return this._set(x / this.x, x / this.y, this.z / z);\n            } else {\n                throw new Error(\"Invalid syntax\");\n            }\n        } else if (typeof z == 'number') {\n            return this._set(x.x / this.x, x.y / this.y, x.z / this.z);\n        }\n    }\n\n    dot(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this.x * x + this.y * y + this.z * z;\n            } else {\n                return this.x * x + this.y * x + this.z * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y + this.z * x.z;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y, z));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y, x.z));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return (this.x - x) ** 2 + (this.y - y) ** 2 + (this.z - z) ** 2;\n            } else {\n                return (this.x - x) ** 2 + (this.y - x) ** 2 + (this.z - x) ** 2;\n            }\n        } else {\n            return (this.x - x.x) ** 2 + (this.y - x.y) ** 2 + (this.z - x.z) ** 2;\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    clone() {\n        return new (this.constructor as new (x: number, y: number, z: number) => Vector3D)(this.x, this.y, this.z);\n    }\n\n    static *_from(vector: Vector2D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == '1' ? 1 : 0;\n        yield format[2] == 'x' ? vector.x : format[2] == 'y' ? vector.y : format[2] == '1' ? 1 : 0;\n    }\n\n    equals(other: Vector3D) {\n        return this.x == other.x && this.y == other.y && this.z == other.z;\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class ImmutableVector3D extends Vector3D {\n    constructor(vector: Vector3D);\n    constructor(x: number, y: number, z: number);\n    constructor();\n    constructor(x?: number | Vector3D, y?: number, z?: number) {\n        if (x instanceof Vector3D) super(x.x, x.y, x.z);\n        else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') super(x, y, z);\n        else super(0, 0, 0);\n    }\n\n    _set(x: number, y: number, z: number): Vector3D {\n        return new ImmutableVector3D(x, y, z);\n    }\n\n    set(x: number | Vector3D, y?: number, z?: number): Vector3D {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector2D, format: string) {\n        const values = [...Vector3D._from(vector, format)];\n\n        return new ImmutableVector3D(values[0], values[1], values[2]);\n    }\n}","import { IndexedRegistryItem } from \"../../../../game/registry/indexed-registry-item.js\";\nimport { DataUtils } from \"../../../../utils/data-utils.js\";\nimport { ImmutableVector3D } from \"../../../../utils/vector3d/immutable-vector3d.js\";\nimport { ModelComponent } from \"./model-component.js\";\nimport { StaticModel } from \"./static-model.js\";\n\nexport class BlockModel extends IndexedRegistryItem implements StaticModel {\n    components: Set<ModelComponent> = new Set();\n\n    getVertexPositions(): Float32Array {\n        const components = Array.from(this.components);\n        const positions = components.map(component => component.getVertexPositions(new ImmutableVector3D()));\n        const buffer = DataUtils.concat(positions);\n\n        return new Float32Array(buffer);\n    }\n\n    getTextureMappings(): Uint32Array {\n        const components = Array.from(this.components);\n        const textureMappings = components.map(component => component.getTextureMappings());\n        const buffer = DataUtils.concat(textureMappings);\n\n        return new Uint32Array(buffer);\n    }\n\n    getTextureIds(): Uint32Array {\n        const components = Array.from(this.components);\n        const textureIds = components.map(component => component.getTextureIds());\n        const buffer = DataUtils.concat(textureIds);\n\n        return new Uint32Array(buffer);\n    }\n\n    add(...components: ModelComponent[]): void {\n        for (const component of components) {\n            this.components.add(component);\n        }\n    }\n\n    remove(...components: ModelComponent[]): void {\n        for (const component of components) {\n            this.components.delete(component);\n        }\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class MutableVector3D extends Vector3D {\n    constructor(vector: Vector3D);\n    constructor(x: number, y: number, z: number);\n    constructor();\n    constructor(x?: number | Vector3D, y?: number, z?: number) {\n        if (x instanceof Vector3D) super(x.x, x.y, x.z);\n        else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') super(x, y, z);\n        else super(0, 0, 0);\n    }\n\n    _set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    static from(vector: Vector2D, format: string) {\n        const values = [...Vector3D._from(vector, format)];\n\n        return new MutableVector3D(values[0], values[1], values[2]);\n    }\n}","import { Rotation } from \"../rotation/rotation.js\";\nimport { MutableVector3D } from \"../vector3d/mutable-vector3d.js\";\nimport { Vector3D } from \"../vector3d/vector3d.js\";\n\nexport class Matrix3 {\n    constructor(public data: number[] = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]) {\n    }\n\n    multiply(vector: Vector3D): Vector3D;\n    multiply(matrix: Matrix3): ThisType<Matrix3>;\n    multiply(value: Vector3D | Matrix3): Vector3D | ThisType<Matrix3> {\n        if (value instanceof Vector3D) {\n            return Matrix3.multiplyVector(this, value);\n        } else if (value instanceof Matrix3) {\n            return Matrix3.multiply(this, value, this);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    static multiply(matrix1: Matrix3, matrix2: Matrix3, target: Matrix3 = new Matrix3()) {\n        const a = matrix1.data;\n        const b = matrix2.data;\n        const c = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2];\n        const a10 = a[3], a11 = a[4], a12 = a[5];\n        const a20 = a[6], a21 = a[7], a22 = a[8];\n        const b00 = b[0], b01 = b[1], b02 = b[2];\n        const b10 = b[3], b11 = b[4], b12 = b[5];\n        const b20 = b[6], b21 = b[7], b22 = b[8];\n    \n        c[0] = b00 * a00 + b01 * a10 + b02 * a20;\n        c[1] = b00 * a01 + b01 * a11 + b02 * a21;\n        c[2] = b00 * a02 + b01 * a12 + b02 * a22;\n        c[3] = b10 * a00 + b11 * a10 + b12 * a20;\n        c[4] = b10 * a01 + b11 * a11 + b12 * a21;\n        c[5] = b10 * a02 + b11 * a12 + b12 * a22;\n        c[6] = b20 * a00 + b21 * a10 + b22 * a20;\n        c[7] = b20 * a01 + b21 * a11 + b22 * a21;\n        c[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n\n        return target;\n    }\n\n    static multiplyVector(matrix: Matrix3, vector: Vector3D, target: Vector3D = new MutableVector3D()) {\n        const a = matrix.data;\n        const b = vector;\n        const c = target;\n\n        const x = b.x, y = b.y, z = b.z;\n\n        c.x = a[0] * x + a[4] * y + a[8] * z;\n        c.y = a[1] * x + a[5] * y + a[9] * z;\n        c.z = a[2] * x + a[6] * y + a[10] * z;\n\n        return target;\n    }\n\n    static createRotation(rotation: Rotation, target: Matrix3 = new Matrix3()) {\n        let matrix = target || new Matrix3();\n\n        matrix.multiply(Matrix3.createRotationY(rotation.yaw));\n        matrix.multiply(Matrix3.createRotationX(rotation.pitch));\n        matrix.multiply(Matrix3.createRotationZ(rotation.roll));\n\n        return matrix;\n    }\n\n    static createRotationX(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = cos;\n        target.data[6] = sin;\n\n        target.data[8] = 0;\n        target.data[9] = -sin;\n        target.data[10] = cos;\n\n        return target;\n    }\n\n    static createRotationY(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = 0;\n        target.data[2] = -sin;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n\n        target.data[8] = sin;\n        target.data[9] = 0;\n        target.data[10] = cos;\n\n        return target;\n    }\n\n    static createRotationZ(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = sin;\n        target.data[2] = 0;\n\n        target.data[4] = -sin;\n        target.data[5] = cos;\n        target.data[6] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n\n        return target;\n    }\n}","export class Rotation {\n    yaw: number;\n    pitch: number;\n    roll: number;\n\n    constructor(yaw = 0, pitch = 0, roll = 0) {\n        if (typeof yaw !== 'number') throw new TypeError('yaw must be a number');\n        if (typeof pitch !== 'number') throw new TypeError('pitch must be a number');\n        if (typeof roll !== 'number') throw new TypeError('roll must be a number');\n        if (isNaN(yaw)) throw new TypeError('yaw must not be NaN');\n        if (isNaN(pitch)) throw new TypeError('pitch must not be NaN');\n        if (isNaN(roll)) throw new TypeError('roll must not be NaN');\n\n        this.yaw = yaw;\n        this.pitch = pitch;\n        this.roll = roll;\n    }\n\n    set(yaw: number | Rotation, pitch?: number, roll?: number) {\n        if (typeof yaw == 'number' && typeof pitch === 'number' && typeof roll === 'number') {\n            this.yaw = yaw;\n            this.pitch = pitch;\n            this.roll = roll;\n        } else if (yaw instanceof Rotation && pitch === undefined && roll === undefined) {\n            this.yaw = yaw.yaw;\n            this.pitch = yaw.pitch;\n            this.roll = yaw.roll;\n        } else {\n            throw new Error('Invalid arguments to Rotation.set(), expected number, number, number or Rotation');\n        }\n    }\n\n    clone() {\n        return new Rotation(this.yaw, this.pitch, this.roll);\n    }\n}","import { Matrix3 } from \"../matrix/matrix3.js\";\nimport { Rotation } from \"./rotation.js\";\n\nexport enum Orientation { North, East, South, West, Up, Down }\n\nexport namespace Orientation {\n    const rotations: Map<Orientation, Rotation> = new Map();\n\n    export function getRotation(orientation: Orientation): Rotation {\n        if (!rotations.has(orientation)) {\n            rotations.set(orientation, calculateRotation(orientation));\n        }\n\n        return rotations.get(orientation)!;\n    }\n\n    function calculateRotation(orientation: Orientation): Rotation {\n        switch (orientation) {\n            case Orientation.North: return new Rotation(0, 0, 0);\n            case Orientation.East: return new Rotation(0, 90, 0);\n            case Orientation.South: return new Rotation(0, 180, 0);\n            case Orientation.West: return new Rotation(0, 270, 0);\n            case Orientation.Up: return new Rotation(-90, 0, 0);\n            case Orientation.Down: return new Rotation(90, 0, 0);\n        }\n    }\n\n    const matrices = new Map<Orientation, Matrix3>();\n\n    export function getMatrix(orientation: Orientation): Matrix3 {\n        if (!matrices.has(orientation)) {\n            matrices.set(orientation, Matrix3.createRotation(getRotation(orientation)));\n        }\n\n        return matrices.get(orientation)!;\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\n\nexport abstract class Vector2D {\n    x: number;\n    y: number;\n\n    constructor(x = 0, y = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n\n        this.x = x;\n        this.y = y;\n    }\n\n    abstract _set(x: number, y: number): Vector2D;\n\n    add(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x + x, this.y + y);\n            } else {\n                return this._set(this.x + x, this.y + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y);\n        }\n    }\n\n    subtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x - x, this.y - y);\n            } else {\n                return this._set(this.x - x, this.y - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y);\n        }\n    }\n\n    reverseSubtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x - this.x, y - this.y);\n            } else {\n                return this._set(x - this.x, x - this.y);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y);\n        }\n    }\n\n    complexMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x);\n        }\n    }\n\n    scalarMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x, this.y * y);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y);\n        }\n    }\n\n    scalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x / x, this.y / y);\n            } else {\n                return this._set(this.x / x, this.y / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x / this.x, y / this.y);\n            } else {\n                return this._set(x / this.x, x / this.y);\n            }\n        } else {\n            return this._set(x.x / this.x, x.y / this.y);\n        }\n    }\n\n    dot(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.x * x + this.y * y;\n            } else {\n                return this.x * x + this.y * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return (this.x - x) * (this.x - x) + (this.y - y) * (this.y - y);\n            } else {\n                return (this.x - x) * (this.x - x) + (this.y - x) * (this.y - x);\n            }\n        } else {\n            return (this.x - x.x) * (this.x - x.x) + (this.y - x.y) * (this.y - x.y);\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    clone() {\n        return new (this.constructor as (new (x: number, y: number) => typeof this))(this.x, this.y);\n    }\n\n    static *_from(vector: Vector3D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == 'z' ? vector.z : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == 'z' ? vector.z : format[1] == '1' ? 1 : 0;\n    }\n\n    equals(other: Vector2D) {\n        return this.x === other.x && this.y === other.y;\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { Vector2D } from \"./vector2d.js\";\n\nexport class ImmutableVector2D extends Vector2D {\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n    }\n\n    _set(x: number, y: number): ImmutableVector2D {\n        return new ImmutableVector2D(x, y);\n    }\n\n    private set(x: number | Vector2D, y?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector3D, format: string) {\n        return new ImmutableVector2D(...Vector2D._from(vector, format));\n    }\n}","import { MutableVector3D } from \"../../../../../utils/vector3d/mutable-vector3d.js\";\nimport { Vector3D } from \"../../../../../utils/vector3d/vector3d.js\";\nimport { ModelComponent } from \"../model-component.js\";\n\nexport abstract class PositionedModelComponent implements ModelComponent {\n    private position: Vector3D = new MutableVector3D();\n\n    getPosition(): Vector3D {\n        return this.position.clone();\n    }\n\n    setPosition(position: Vector3D): void {\n        this.position.set(position);\n    }\n\n    abstract getVertexPositions(parentPosition: Vector3D): Float32Array;\n    abstract getTextureMappings(): Uint32Array;\n    abstract getTextureIds(): Uint32Array;\n}","import { DataUtils } from \"../../../../../utils/data-utils.js\";\nimport { Vector3D } from \"../../../../../utils/vector3d/vector3d.js\";\nimport { PositionedModelComponent } from \"./positioned-model-component.js\";\n\nexport class GroupModelComponent extends PositionedModelComponent {\n    private components: Set<PositionedModelComponent> = new Set();\n\n    getVertexPositions(parentPosition: Vector3D): Float32Array {\n        const components = Array.from(this.components);\n        const positions = components.map(component => component.getVertexPositions(parentPosition));\n        const buffer = DataUtils.concat(positions);\n\n        return new Float32Array(buffer);\n    }\n\n    getTextureMappings(): Uint32Array {\n        const components = Array.from(this.components);\n        const textureMappings = components.map(component => component.getTextureMappings());\n        const buffer = DataUtils.concat(textureMappings);\n\n        return new Uint32Array(buffer);\n    }\n\n    getTextureIds(): Uint32Array {\n        const components = Array.from(this.components);\n        const textureIds = components.map(component => component.getTextureIds());\n        const buffer = DataUtils.concat(textureIds);\n\n        return new Uint32Array(buffer);\n    }\n\n    add(...components: PositionedModelComponent[]): void {\n        for (const component of components) {\n            this.components.add(component);\n        }\n    }\n\n    remove(...components: PositionedModelComponent[]): void {\n        for (const component of components) {\n            this.components.delete(component);\n        }\n    }\n}","import { Orientation } from \"../../../../../utils/rotation/orientation.js\";\nimport { Vector2D } from \"../../../../../utils/vector2d/vector2d.js\";\nimport { ImmutableVector3D } from \"../../../../../utils/vector3d/immutable-vector3d.js\";\nimport { Texture } from \"../../../../utils/texture.js\";\nimport { PositionedModelComponent } from \"./positioned-model-component.js\";\n\nexport class PlaneModelComponent extends PositionedModelComponent {\n    private width: number;\n    private height: number;\n    private orientation: Orientation = Orientation.North;\n    private texture: Texture;\n\n    constructor(texture: Texture, size: Vector2D, orientation: Orientation) {\n        super();\n        \n        this.width = size.x;\n        this.height = size.y;\n        this.texture = texture;\n        this.orientation = orientation;\n    }\n\n    getVertexPositions(): Float32Array {\n        return PlaneModelComponent.makePlaneVertices(this.orientation, this.width, this.height);\n    }\n\n    getTextureMappings(): Uint32Array {\n        const data = new Uint32Array(PlaneModelComponent.baseTextureMapping.length);\n        const width = this.texture.getTextureWidth();\n        const height = this.texture.getTextureHeight();\n\n        for (let i = 0; i < data.length / 2; i++) {\n            data[i * 2] = PlaneModelComponent.baseTextureMapping[i * 2] * width;\n            data[i * 2 + 1] = PlaneModelComponent.baseTextureMapping[i * 2 + 1] * height;\n        }\n\n        return data;\n    }\n    \n    getTextureIds(): Uint32Array {\n        const textureId = this.texture.getRegisteredId();\n\n        return new Uint32Array([\n            textureId,\n            textureId\n        ]);\n    }\n\n    private static makePlaneVertices(orientation: Orientation, width: number, height: number) {\n        const vertices = PlaneModelComponent.baseGeometry.map(x => x);\n\n        for (let i = 0; i < vertices.length / 3; i++) {\n            const vector = new ImmutableVector3D(\n                vertices[i * 3] * width,\n                vertices[i * 3 + 1] * height,\n                vertices[i * 3 + 2]\n            );\n\n            const matrix = Orientation.getMatrix(orientation);\n\n            const result = matrix.multiply(vector);\n\n            vertices[i * 3] = result.x;\n            vertices[i * 3 + 1] = result.y;\n            vertices[i * 3 + 2] = result.z;\n        }\n\n        return vertices;\n    }\n\n    private static baseTextureMapping = new Uint8Array([\n        0, 0,\n        1, 0,\n        1, 1,\n        1, 0,\n        0, 1,\n        0, 0\n    ]);\n\n    private static baseGeometry: Float32Array = PlaneModelComponent.getBaseGeometry();\n\n    private static getBaseGeometry() {\n        const data = new Float32Array(PlaneModelComponent.baseTextureMapping.length);\n\n        for (let i = 0; i < PlaneModelComponent.baseTextureMapping.length / 2; i++) {\n            data[i] = PlaneModelComponent.baseTextureMapping[i * 2] - 0.5;\n            data[i + 1] = PlaneModelComponent.baseTextureMapping[i * 2 + 1] - 0.5;\n        }\n\n        return data;\n    }\n}","import { Orientation } from \"../../../../../utils/rotation/orientation.js\";\nimport { ImmutableVector2D } from \"../../../../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector3D } from \"../../../../../utils/vector3d/vector3d.js\";\nimport { Texture } from \"../../../../utils/texture.js\";\nimport { GroupModelComponent } from \"./group-model-component.js\";\nimport { PlaneModelComponent } from \"./plane-model-component.js\";\n\nexport class BoxModelComponent extends GroupModelComponent {\n    constructor(dimensions: Vector3D, textures: Texture[]) {\n        super();\n\n        const north = new PlaneModelComponent(textures[0], new ImmutableVector2D(dimensions.x, dimensions.y), Orientation.North);\n        const south = new PlaneModelComponent(textures[1], new ImmutableVector2D(dimensions.x, dimensions.y), Orientation.South);\n        const east = new PlaneModelComponent(textures[2], new ImmutableVector2D(dimensions.z, dimensions.y), Orientation.East);\n        const west = new PlaneModelComponent(textures[3], new ImmutableVector2D(dimensions.z, dimensions.y), Orientation.West);\n        const up = new PlaneModelComponent(textures[4], new ImmutableVector2D(dimensions.x, dimensions.z), Orientation.Up);\n        const down = new PlaneModelComponent(textures[5], new ImmutableVector2D(dimensions.x, dimensions.z), Orientation.Down);\n\n        this.add(north, south, east, west, up, down);\n    }\n}","import { IndexedRegistryItem } from \"../../game/registry/indexed-registry-item.js\";\nimport { BlockModel } from \"../../render/world/model/static/block-model.js\";\nimport { BlockPosition } from \"./block-position.js\";\n\nexport abstract class BlockPrototype extends IndexedRegistryItem {\n    abstract instantiate(position: BlockPosition): void;\n\n    abstract whenDestroyed(position: BlockPosition): void;\n    abstract whenUsed(position: BlockPosition): void;\n    abstract whenPlaced(position: BlockPosition): void;\n    abstract whenTicked(position: BlockPosition): void;\n\n    abstract getBlockModel(position: BlockPosition): BlockModel | null;\n\n    abstract setup(): Promise<void>;\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { BlockPosition } from \"./block-position.js\";\nimport { BlockPrototype } from \"./block-prototype.js\";\n\nexport abstract class BaseBlockPrototype extends BlockPrototype {\n    instantiate(position: BlockPosition): void {\n        position.getChunkData().getField('blockId').set(position, this.getRegisteredId());\n    }\n\n    whenDestroyed(position: BlockPosition): void {\n        const empty = Registries.blocks.get('empty');\n\n        if (!empty) {\n            throw new Error(\"Empty block not found in registry\");\n        }\n\n        position.getChunkData().setBlock(position, empty);\n    }\n\n    whenUsed(position: BlockPosition): void {\n    }\n\n    whenPlaced(position: BlockPosition): void {\n    }\n\n    whenTicked(position: BlockPosition): void {\n    }\n\n    isRendered() {\n        return true;\n    }\n\n    async setup(): Promise<void> {\n    }\n}","import { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { ImmutableVector3D } from \"../../../utils/vector3d/immutable-vector3d.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class StonePrototype extends BaseBlockPrototype {\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Stone placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return StonePrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static texture: Texture;\n\n    static async setup() {\n        this.texture = await Texture.load(\"blocks.stone\");\n\n        this.model = new BlockModel();\n\n        const box = new BoxModelComponent(\n            new ImmutableVector3D(1, 1, 1),\n            new Array(6).fill(this.texture)\n        );\n\n        this.model.add(box);\n    }\n\n    static getBlockModel() {\n        return StonePrototype.model;\n    }\n}","import { Entity } from \"../entity/entity.js\";\nimport { EntityPrototype } from \"./entity-prototype.js\";\n\nexport abstract class BaseEntityPrototype<E extends Entity> implements EntityPrototype<E> {\n    abstract createEntity(): E;\n\n    async setup(): Promise<void> {\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { MutableVector3D } from \"./mutable-vector3d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class HandleableVector3D extends MutableVector3D {\n    _listeners: Set<() => unknown>;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n\n        this._listeners = new Set();\n    }\n\n    on(type: 'change', handler: () => unknown) {\n        if (type == 'change') {\n            this._listeners.add(handler);\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    cause(type: 'change') {\n        if (type == 'change') {\n            for (const listener of this._listeners) {\n                listener();\n            }\n        } else {\n            throw new Error('Unknown event type');\n        }\n    }\n\n    _set(x: number, y: number, z: number): this {\n        this.cause('change');\n\n        return super._set(x, y, z);\n    }\n\n    clone(): Vector3D {\n        throw new Error(\"Cannot clone handleable vector. Instead use immutable() or mutable() to output a non-handlable vector.\");\n    }\n\n    static from(vector: Vector2D, format: string) {\n        const values = [...Vector3D._from(vector, format)];\n\n        return new HandleableVector3D(values[0], values[1], values[2]);\n    }\n}","import { ImmutableVector3D } from \"../../utils/vector3d/immutable-vector3d.js\";\nimport { MutableVector3D } from \"../../utils/vector3d/mutable-vector3d.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\n\n/**\n * A `ChunkDataReferencer` converts between indexes and\n * positions in chunk data for given chunk dimensions.\n * \n * * The `index()` method converts a position to an\n * index in chunk data.\n * * The `position()` method converts an index in chunk\n * data to a position, based on the underlying `x()`,\n * `y()`, and `z()` methods.\n * * The `dimensions` property is a 3D vector containing\n * the dimensions of the chunk.\n * * The `cells` property is the total number of cells\n * in a chunk, equal to `dimensions.x * dimensions.y *\n * dimensions.z`.\n */\nexport namespace ChunkDataReferencer {\n    /**\n     * The dimensions of the chunk as a 3D vector.\n     */\n    export const dimensions: Vector3D = new ImmutableVector3D(16, 32, 16);\n    \n    const shiftY: number = 8;\n    const shiftZ: number = 4;\n    const xBlock: number = 0b1111;\n    const zBlock: number = 0b1111;\n\n    /**\n     * Returns the total number of cells in a chunk.\n     */\n    export const cells = dimensions.x * dimensions.y * dimensions.z;\n\n    /**\n     * Computes the chunk data index for a given\n     * position, where any block position will have a\n     * different index from 0 to the total number of\n     * cells in a chunk minus 1.\n     * \n     * The method is the opposite of `position()`.\n     */\n    export function index(x: number, y: number, z: number): number;\n    export function index(x: Vector3D): number;\n    export function index(x: number | Vector3D, y?: number, z?: number): number {\n        if (x instanceof Vector3D) {\n            y = x.y;\n            z = x.z;\n            x = x.x;\n        } else {\n            if (y === undefined || z === undefined) throw new Error(`Invalid arguments`);\n        }\n\n        if (x < 0 || x >= this.dimensions.x || y < 0 || y >= this.dimensions.y || z < 0 || z >= this.dimensions.z) throw new Error(`Coordinates are out of bounds`);\n\n        return x + (z << this.shiftZ) + (y << this.shiftY);\n    }\n\n    /**\n     * Computes the x position of a specified chunk\n     * data index. This can be used with the `y()` and\n     * `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function x(index: number): number {\n        return index & xBlock;\n    }\n\n    /**\n     * Computes the y position of a specified chunk\n     * data index. This can be used with the `x()`\n     * and `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function y(index: number): number {\n        return index >> shiftY;\n    }\n\n    /**\n     * Computes the z position of a specified chunk\n     * data index. This can be used with the `x()` and\n     * `y()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function z(index: number): number {\n        return index >> shiftZ & zBlock;\n    }\n\n    /**\n     * Computes the position of a specified chunk data\n     * index. Equivalent to calling `x()`, `y()`, and\n     * `z()`, then assembling a `Vector3D` from the\n     * components.\n     * \n     * The method is the opposite of `index()`.\n     */\n    export function position(index: number): Vector3D {\n        return new MutableVector3D(this.x(index), this.y(index), this.z(index));\n    }\n}\n\nwindow['cdr'] = ChunkDataReferencer;","import { PhysicalEntityProperties } from \"../../physics/entity/physical-entity-properties.js\";\nimport { PhysicalEntityState } from \"../../physics/entity/physical-entity-state.js\";\nimport { Rotation } from \"../../utils/rotation/rotation.js\";\nimport { HandleableVector3D } from \"../../utils/vector3d/handleable-vector3d.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { EntityPrototype } from \"../prototype/entity-prototype.js\";\nimport { World } from \"../world.js\";\nimport { Entity } from \"./entity.js\";\n\nexport abstract class BaseEntity implements Entity {\n    private id: string;\n    \n    private chunk: ChunkInterface | null;\n    private world: World | null;\n\n    private position: HandleableVector3D = new HandleableVector3D();\n    private rotation: Rotation = new Rotation();\n\n    constructor() {\n        this.position.on('change', () => {\n            // If the entity is not in a world or chunk, it doesn't need to update it's chunk\n            if (this.world && this.chunk) {\n                // Compute the location of the chunk the entity should be moved to.\n                const targetChunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n                const targetChunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n                // Get the location of the chunk object that currently contains the entity.\n                const currentChunkPosition = this.chunk.getPosition();\n                const currentChunkX = currentChunkPosition.x;\n                const currentChunkZ = currentChunkPosition.y;\n\n                // Check if the entity should move to a different chunk.\n                if (currentChunkX != targetChunkX || currentChunkZ != targetChunkZ) {\n                    // Get the chunk that the entity should be in.\n                    let chunk = this.world.getChunk(targetChunkX, targetChunkZ);\n\n                    if (!chunk) {\n                        chunk = this.world.loadChunk(targetChunkX, targetChunkZ);;\n                    }\n\n                    // Update the chunk the entity is in.\n                    this.setParentChunk(chunk);\n                }\n            }\n        });\n\n        this.id = BaseEntity.generateUniqueId();\n    }\n\n    setWorld(world: World): void {\n        if (world == null) {\n            this.world = null;\n            this.chunk = null;\n\n            return;\n        }\n\n        // Set the entity's properties to be in the world.\n        this.world = world;\n        this.chunk = null;\n\n        // Compute the location of the chunk the entity should be placed in.\n        const targetChunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n        const targetChunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n        // Get the chunk object that the entity should be placed in.\n        let targetChunk = this.world.getChunk(targetChunkX, targetChunkZ);\n\n        // If the chunk object doesn't exist and the entity can load new chunks, load the chunk.\n        if (!targetChunk && this.canLoadChunks()) {\n            this.world.loadChunk(targetChunkX, targetChunkZ);\n            \n            targetChunk = this.world.getChunk(targetChunkX, targetChunkZ);\n        }\n\n        // Update the chunk the entity is in.\n        this.setParentChunk(targetChunk);\n    }\n\n    getWorld(): World | null {\n        return this.world;\n    }\n\n    setParentChunk(chunk: ChunkInterface | null): void {\n        if (this.chunk && !this.chunk.isPlaceholder()) this.chunk.getChunkData().removeEntity(this);\n        this.chunk = chunk;\n        if (this.chunk && !this.chunk.isPlaceholder()) this.chunk.getChunkData().addEntity(this);\n    }\n\n    getParentChunk(): ChunkInterface | null {\n        return this.chunk;\n    }\n\n    tickEntity(delta: number): void {\n    }\n\n    getPosition(): Vector3D {\n        return this.position;\n    }\n\n    setPosition(x: number, y: number, z: number): void;\n    setPosition(position: Vector3D): void;\n    setPosition(x: Vector3D | number, y?: number, z?: number): void {\n        if (x instanceof Vector3D) {\n            this.position.set(x.x, x.y, x.z);\n        } else if (typeof y == 'number' && typeof z == 'number') {\n            this.position.set(x, y, z);\n        } else {\n            throw new Error(\"Invalid arguments to BaseEntity.setPosition()\");\n        }\n    }\n\n    getRotation(): Rotation {\n        return this.rotation;\n    }\n\n    setRotation(rotation: Rotation): void {\n        this.rotation = rotation;\n    }\n\n    getUniqueId(): string {\n        return this.id;\n    }\n\n    abstract getPrototype(): EntityPrototype<BaseEntity>;\n    abstract canLoadChunks(): boolean;\n\n    getEntityModel() {\n        return null;\n    }\n\n    getPhysicalEntity() {\n        return null;\n    }\n\n    whenJoinWorld() {\n    }\n\n    getPhysicalState(): PhysicalEntityState | null {\n        return null;\n    }\n\n    getPhysicalProperties(): PhysicalEntityProperties | null {\n        return null;\n    }\n\n    static generateUniqueId(): string {\n        return crypto.randomUUID();\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { BaseEntity } from \"../../../world/entity/base-entity.js\";\nimport { EntityPrototype } from \"../../../world/prototype/entity-prototype.js\";\n\nexport class PlayerEntity extends BaseEntity {\n    getPrototype(): EntityPrototype<BaseEntity> {\n        return Registries.entities.get('player')!;\n    }\n\n    canLoadChunks(): boolean {\n        return true;\n    }\n}","import { BaseEntityPrototype } from \"../../../world/prototype/base-entity-prototype.js\";\nimport { PlayerEntity } from \"./player-entity.js\";\n\nexport class PlayerPrototype extends BaseEntityPrototype<PlayerEntity> {\n    createEntity(): PlayerEntity {\n        return new PlayerEntity();\n    }\n}","import { Registries } from \"../game/registry/registries.js\";\nimport { StonePrototype } from \"./block/stone/stone-prototype.js\";\nimport { PlayerPrototype } from \"./entity/player/player-prototype.js\";\n\nexport async function loadGameContent(): Promise<void> {\n    Registries.entities.register('player', new PlayerPrototype());\n\n    await StonePrototype.setup();\n    Registries.blocks.register('stone', new StonePrototype());\n    Registries.blockModels.register('stone', StonePrototype.getBlockModel());\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { Registry } from \"../../game/registry/registry.js\";\nimport { ChunkDataField } from \"../chunk-data/chunk-data-field.js\";\n\n/**\n * The ChunkDataFields allows multiple fields to be allocated\n * before creating chunks.\n * \n * * Fields may be allocated in the `Registry.Fields` map.\n * * A map of `ChunkDataField` objects can be instantiated\n * using the `initialize()` method.\n */\nexport namespace ChunkDataFields {\n    export function initialize(): Map<string, ChunkDataField<any>> {\n        const fields = new Map<string, ChunkDataField<any>>();\n\n        for (const [ id, field ] of Registries.fields.entries()) {\n            fields.set(id, field.instantiate());\n        }\n\n        return fields;\n    }\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { Entity } from \"../entity/entity.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { BlockPrototype } from \"../prototype/block-prototype.js\";\nimport { ChunkDataFields } from \"../prototype/chunk-data-fields.js\";\nimport { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport class ChunkData {\n    private chunk: ChunkInterface.NonPlaceholder | null = null;\n    private fields: Map<string, ChunkDataField<any>>;\n    private entities: Set<Entity> = new Set();\n    private updates: Set<number> = new Set();\n\n    constructor() {\n        this.fields = ChunkDataFields.initialize();\n    }\n\n    setParentChunk(chunk: ChunkInterface.NonPlaceholder): void {\n        this.chunk = chunk;\n    }\n\n    getEntities(): Set<Entity> {\n        return new Set(...this.entities.entries());\n    }\n\n    getChunk(): ChunkInterface.NonPlaceholder | null {\n        return this.chunk;\n    }\n\n    addEntity(entity: Entity): void {\n        this.entities.add(entity);\n    }\n\n    removeEntity(entity: Entity): void {\n        this.entities.delete(entity);\n    }\n\n    getField(id: string): ChunkDataField<any> {\n        if (!this.fields.has(id)) {\n            throw new Error(`Field id '${id}' is not allocated`);\n        }\n\n        return this.fields.get(id) as ChunkDataField<any>;\n    }\n\n    getBlockId(position: BlockPosition): number;\n    getBlockId(position: Vector3D): number;\n    getBlockId(x: number, y: number, z: number): number;\n    getBlockId(index: number): number;\n    getBlockId(x: BlockPosition | Vector3D | number, y?: number, z?: number): number {\n        if (x instanceof BlockPosition) {\n            return this.getField('blockId').get(x.getGlobalPosition());\n        } else if (x instanceof Vector3D) {\n            return this.getField('blockId').get(x);\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number') {\n            return this.getField('blockId').get(x, y, z);\n        } else if (typeof x === 'number') {\n            return this.getField('blockId').get(x); \n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getBlock(position: BlockPosition): BlockPrototype;\n    getBlock(position: Vector3D): BlockPrototype;\n    getBlock(x: number, y: number, z: number): BlockPrototype;\n    getBlock(index: number): BlockPrototype;\n    getBlock(x: BlockPosition | Vector3D | number, y?: number, z?: number): BlockPrototype {\n        if (x instanceof BlockPosition) {\n            return Registries.blocks.get(this.getBlockId(x)) as BlockPrototype;\n        } else if (x instanceof Vector3D) {\n            return Registries.blocks.get(this.getBlockId(x)) as BlockPrototype;\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number') {\n            return Registries.blocks.get(this.getBlockId(x, y, z)) as BlockPrototype;\n        } else if (typeof x === 'number') {\n            return Registries.blocks.get(this.getBlockId(x)) as BlockPrototype; \n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    setBlockId(position: BlockPosition, blockId: number): void;\n    setBlockId(position: Vector3D, blockId: number): void;\n    setBlockId(x: number, y: number, z: number, blockId: number): void;\n    setBlockId(index: number, blockId: number): void;\n    setBlockId(x: BlockPosition | Vector3D | number, y: number, z?: number, block?: number): void {\n        if (x instanceof BlockPosition && typeof y == 'number') {\n            const localPostion = x.getLocalPosition();\n\n            this.setBlockId(localPostion, y);\n        } else if (x instanceof Vector3D && typeof y === 'number') {\n            this.getField('blockId').set(x, y);\n\n            this.updates.add(ChunkDataReferencer.index(x));\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && typeof block == 'number') {\n            this.getField('blockId').set(x, y, z, block);\n\n            this.updates.add(ChunkDataReferencer.index(x, y, z));\n        } else if (typeof x == 'number' && typeof y == 'number') {\n            this.getField('blockId').set(x, y);\n\n            this.updates.add(x);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    setBlock(position: BlockPosition, block: BlockPrototype): void;\n    setBlock(position: Vector3D, block: BlockPrototype): void;\n    setBlock(x: number, y: number, z: number, block: BlockPrototype): void;\n    setBlock(x: BlockPosition | Vector3D | number, y: BlockPrototype | number, z?: number, block?: BlockPrototype): void {\n        if (x instanceof BlockPosition && y instanceof BlockPrototype) {\n            this.setBlockId(x, y.getRegisteredId());\n        } else if (x instanceof Vector3D && y instanceof BlockPrototype) {\n            this.setBlockId(x, y.getRegisteredId());\n        } else if (typeof x === 'number' && typeof y == 'number' && typeof z == 'number' && block instanceof BlockPrototype) {\n            this.setBlockId(x, y, z, block.getRegisteredId());\n        } else if (typeof x == 'number' && typeof y == 'number') {\n            this.setBlockId(x, y);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getBlockUpdates(): Iterable<number> {\n        return this.updates;\n    }\n\n    tickChunkData(): void {\n        for (const update of this.updates) {\n            const position = ChunkDataReferencer.position(update);\n            const blockPrototype = this.getBlock(position);\n\n            blockPrototype.whenTicked(new BlockPosition(position, this));\n        }\n\n        this.updates.clear();\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { World } from \"./world.js\";\n\nexport abstract class ChunkInterface {\n    abstract getPosition(): Vector2D;\n\n    abstract isPlaceholder(): boolean;\n\n    abstract getWorld(): World ;\n    abstract bindWorld(world: World, position: Vector2D): void;\n    \n    abstract getChunkData(): ChunkData;\n\n    unloadChunk() {}\n    setupChunk() {}\n    tickChunk() {}\n}\n\nexport namespace ChunkInterface {\n    export abstract class NonPlaceholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        abstract getChunkData(): ChunkData;\n        isPlaceholder(): false { return false; }\n    }\n\n    export abstract class Placeholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        isPlaceholder(): true { return true; }\n    }\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { World } from \"./world.js\";\n\nexport class Chunk extends ChunkInterface.NonPlaceholder {\n    private position: ImmutableVector2D;\n    private world: World | null = null;\n    private chunkData: ChunkData;\n\n    constructor() {\n        super();\n    }\n\n    setChunkData(chunkData: ChunkData): void {\n        this.chunkData = chunkData;\n        this.chunkData.setParentChunk(this);\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World {\n        if (!this.world) throw new Error(\"Cannot get world of unbound chunk\");\n\n        return this.world;\n    }\n\n    getChunkData(): ChunkData {\n        return this.chunkData;\n    }\n\n    bindWorld(world: World, position: Vector2D) {\n        this.world = world;\n        this.position = new ImmutableVector2D(position.x, position.y);\n    }\n\n    unloadChunk() {\n        if (!this.world) throw new Error(\"Cannot unload unbound chunk\");\n\n        for (const entity of this.chunkData.getEntities()) {\n            this.world.entityIdMapping.delete(entity.getUniqueId());\n        }\n    }\n\n    setupChunk() {\n        if (!this.world) throw new Error(\"Cannot setup unbound chunk\");\n\n        this.chunkData = new ChunkData();\n    }\n\n    tickChunk() {\n        this.chunkData.tickChunkData();\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { World } from \"./world.js\";\n\nexport class PlaceholderChunk extends ChunkInterface.Placeholder {\n    private position: Vector2D;\n    private world: World | null = null;\n\n    constructor() {\n        super();\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World {\n        if (!this.world) throw new Error(\"Cannot get world of unbound chunk\");\n\n        return this.world;\n    }\n\n    getChunkData(): ChunkData {\n        throw new Error(\"Chunk data does not exist on placeholder\");\n    }\n\n    bindWorld(world: World, position: Vector2D): void {\n        this.world = world;\n        this.position = position;\n    }\n\n    unloadChunk(): void {}\n    setupChunk(): void {}\n    tickChunk(): void {}\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkDataReferencer } from \"./chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { Chunk } from \"./chunk.js\";\nimport { Entity } from \"./entity/entity.js\";\nimport { PlaceholderChunk } from \"./placeholder-chunk.js\";\nimport { WorldLoader } from \"./world-loader.js\";\n\nexport class World {\n    entityIdMapping: Map<string, Entity>;\n    private chunks: Map<string, ChunkInterface>;\n    private loader: WorldLoader;\n\n    constructor() {\n        this.entityIdMapping = new Map();\n        this.chunks = new Map();\n    }\n\n    bindWorldLoader(loader: WorldLoader) {\n        this.loader = loader;\n    }\n\n    createChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n\n        const chunk = new Chunk();\n\n        chunk.bindWorld(this, new ImmutableVector2D(x, z));\n        chunk.setupChunk();\n\n        return chunk;\n    }\n\n    getChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n        \n        return this.chunks.get(x + '.' + z) || null;\n    }\n\n    addEntity(entity: Entity) {\n        this.entityIdMapping.set(entity.getUniqueId(), entity);\n\n        const entityPosition = entity.getPosition();\n\n        const chunkX = Math.floor(entityPosition.x / ChunkDataReferencer.dimensions.x);\n        const chunkZ = Math.floor(entityPosition.z / ChunkDataReferencer.dimensions.z);\n\n        const chunk = this.getChunk(chunkX, chunkZ) || this.loadChunk(chunkX, chunkZ);\n\n        entity.setWorld(this);\n\n        if (!chunk.isPlaceholder()) {\n            chunk.getChunkData().addEntity(entity);\n            entity.setParentChunk(null);\n        } else {\n            entity.setParentChunk(chunk as ChunkInterface.NonPlaceholder);\n        }\n\n        return entity;\n    }\n\n    removeEntity(entity: Entity) {\n        entity.setWorld(null);\n\n        this.entityIdMapping.delete(entity.getUniqueId());\n    }\n\n    _validateDisconnectedEntities() {\n        for (const entity of this.entityIdMapping.values()) {\n            if (!entity.getParentChunk()) {\n                console.warn(\"Entity is not in a chunk\\n\", entity);\n            }\n        }\n    }\n\n    tick(delta: number) {\n        for (const entity of this.entityIdMapping.values()) {\n            entity.tickEntity(delta);\n        }\n\n        for (const [ _id, chunk ] of this.chunks) {\n            chunk.tickChunk();\n        }\n\n        this._validateDisconnectedEntities();\n    }\n\n    loadChunk(x: number, z: number): ChunkInterface.Placeholder;\n    loadChunk(position: Vector2D): ChunkInterface.Placeholder;\n    loadChunk(x: Vector2D | number, z?: number): ChunkInterface.Placeholder {\n        let position: Vector2D;\n\n        if (typeof x === 'number') {\n            if (typeof z !== 'number') {\n                throw new Error(\"Invalid arguments\");\n            } else {\n                position = new ImmutableVector2D(x, z);\n            }\n        } else {\n            position = new ImmutableVector2D(x.x, x.y);\n        }\n\n        if (this.getChunk(position)) {\n            throw new Error(\"Cannot load chunk where another chunk already exists\");\n        }\n\n        if (!this.loader) {\n            throw new Error(\"Cannot load chunk: World has no loader\");\n        }\n\n        const placeholder = new PlaceholderChunk();\n\n        this.chunks.set(position.x + '.' + position.y, placeholder);\n\n        placeholder.bindWorld(this, position);\n\n        this.loader.loadChunk(position).then(chunkData => {\n            const chunk = new Chunk();\n\n            chunk.bindWorld(this, position);\n            chunk.setChunkData(chunkData);\n\n            this.chunks.set(position.x + '.' + position.y, chunk);\n\n            for (const entity of this.entityIdMapping.values()) {\n                const parentChunk = entity.getParentChunk();\n\n                if (!parentChunk) continue;\n\n                if (parentChunk.getPosition().equals(position)) {\n                    entity.setParentChunk(chunk);\n                    chunk.getChunkData().addEntity(entity);\n                }\n            }\n        });\n\n        return placeholder;\n    }\n}","import { ImmutableVector2D } from \"../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { ImmutableVector3D } from \"../../utils/vector3d/immutable-vector3d.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { World } from \"../world.js\";\n\nexport class BlockPosition {\n    private position: Vector3D;\n    private reference: World | ChunkData;\n\n    constructor(position: Vector3D, reference: World);\n    constructor(position: Vector3D, reference: ChunkData);\n    constructor(x: number, y: number, z: number, reference: World);\n    constructor(x: number, y: number, z: number, reference: ChunkData);\n    constructor(x: Vector3D | number, y: World | ChunkData | number, z?: number, reference?: World | ChunkData) {\n        if (x instanceof Vector3D) {\n            if (y instanceof World || y instanceof ChunkData) {\n                this.position = x;\n                this.reference = y;\n            } else {\n                throw new Error(\"Invalid arguments\");\n            }\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof World) {\n            this.position = new ImmutableVector3D(x, y, z);\n            this.reference = reference;\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof ChunkData) {\n            this.position = new ImmutableVector3D(x, y, z);\n            this.reference = reference;\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getGlobalPosition(): Vector3D {\n        if (this.reference instanceof World) {\n            return this.position.clone();\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            const position = chunk.getPosition();\n\n            return this.position.clone().add(ImmutableVector3D.from(position, \"x0y\"));\n        }\n    }\n\n    getLocalPosition(): Vector3D {\n        if (this.reference instanceof ChunkData) {\n            return this.position.clone();\n        } else {\n            return this.position.clone().subtract(ImmutableVector3D.from(this.getChunkPosition(), 'x0y'));\n        }\n    }\n\n    getChunkPosition(): Vector2D {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            return chunk.getPosition();\n        } else {\n            const chunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n            const chunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n            return new ImmutableVector2D(chunkX, chunkZ);\n        }\n    }\n\n    getWorld(): World {\n        if (this.reference instanceof World) {\n            return this.reference;\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get world of disconnected ChunkData\");\n            }\n            \n            return chunk.getWorld();\n        }\n    }\n\n    getChunkData(): ChunkData {\n        if (this.reference instanceof ChunkData) {\n            return this.reference;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk data of disconnected world\");\n            }\n\n            return chunk.getChunkData();\n        }\n    }\n\n    getChunk(): ChunkInterface {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk of disconnected ChunkData\");\n            }\n\n            return chunk;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk not in world\");\n            }\n\n            return chunk;\n        }\n    }\n}","import { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\nimport { ChunkData } from \"./chunk-data.js\";\n\n/**\n * A ChunkDataField is an object where data for each\n * block in a chunk can be contained.\n */\nexport abstract class ChunkDataField<RepresentedType> {\n    /**\n     * Gets the value of the field at a given position.\n     */\n    get(position: BlockPosition): RepresentedType;\n    get(position: Vector3D): RepresentedType;\n    get(index: number): RepresentedType;\n    get(x: number, y: number, z: number): RepresentedType;\n    get(x: number | Vector3D | BlockPosition, y?: number, z?: number): RepresentedType {\n        if (typeof x == 'number' && typeof y == 'undefined') {\n            return this._get(x);\n        } else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            return this._get(ChunkDataReferencer.index(x, y, z));\n        } else if (x instanceof Vector3D) {\n            return this._get(ChunkDataReferencer.index(x));\n        } else if (x instanceof BlockPosition) {\n            return this.get(x.getLocalPosition());\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    /**\n     * Sets the value of the field at a given position.\n     */\n    set(position: BlockPosition, value: RepresentedType): void;\n    set(position: Vector3D, value: RepresentedType): void;\n    set(index: number, value: RepresentedType): void;\n    set(x: number, y: number, z: number, value: RepresentedType): void;\n    set(x: Vector3D | BlockPosition | number, y: RepresentedType | number, z?: number, value?: RepresentedType): void {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number' && typeof value != 'undefined') {\n            return this._set(ChunkDataReferencer.index(x, y, z), value);\n        } else if (x instanceof Vector3D && typeof y != 'number') {\n            return this._set(ChunkDataReferencer.index(x), y);\n        } else if (x instanceof BlockPosition && typeof y != 'number') {\n            return this._set(ChunkDataReferencer.index(x.getLocalPosition()), y);\n        } else if (typeof x == 'number') {\n            return this._set(x, y as RepresentedType);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    abstract _get(index: number): RepresentedType;\n    abstract _set(index: number, value: RepresentedType): void;\n}","import { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\nimport { TypedArray } from \"./typed-array.js\";\n\n/**\n * Represents a field for any size of `number`.\n */\nexport class ChunkDataNumberField extends ChunkDataField<number> {\n    array: TypedArray;\n\n    constructor(public type: ChunkDataNumberType) {\n        super();\n\n        this.array = ChunkDataNumberField.typedArray(type, ChunkDataReferencer.cells);\n    }\n\n    _get(index: number): number {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const item = this.array[Math.floor(index / 2)] as number;\n\n            if (index % 2 == 0) {\n                return item & 0x0F;\n            } else {\n                return item >> 4;\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            return Number(this.array[index] as bigint);\n        } else {\n            return this.array[index] as number;\n        }\n    }\n\n    _set(index: number, value: number) {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const itemIndex = Math.floor(index / 2);\n            const item = this.array[itemIndex] as number;\n\n            if (index % 2 == 0) {\n                this.array[itemIndex] = (item & 0xF0) | value;\n            } else {\n                this.array[itemIndex] = (item & 0x0F) | (value << 4);\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            this.array[index] = BigInt(value);\n        \n        } else {\n            this.array[index] = value;\n        }\n    }\n\n    /**\n     * Create a typed array of a given `ChunkDataNumberType` and length.\n     */\n    static typedArray(type: ChunkDataNumberType, length: number): TypedArray {\n        if (type == \"u4\") return new Uint8Array(length / 2);\n        if (type == \"u8\") return new Uint8Array(length);\n        if (type == \"u16\") return new Uint16Array(length);\n        if (type == \"u32\") return new Uint32Array(length);\n        if (type == \"u64\") return new BigUint64Array(length);\n        if (type == \"i8\") return new Int8Array(length);\n        if (type == \"i16\") return new Int16Array(length);\n        if (type == \"i32\") return new Int32Array(length);\n        if (type == \"i64\") return new BigInt64Array(length);\n        if (type == \"f32\") return new Float32Array(length);\n        if (type == \"f64\") return new Float64Array(length);\n\n        throw new Error(`Unknown array type: ${type}`);\n    }\n}","import { ChunkDataFieldAllocation } from \"./chunk-data-field-allocation.js\";\nimport { ChunkDataNumberField } from \"./chunk-data-number-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\n\n/**\n * Represents an allocation of a field for any size of `number`.\n */\nexport class ChunkDataNumberAllocation implements ChunkDataFieldAllocation<number> {\n    /**\n     * Constructs a new `ChunkDataNumberAllocation`\n     * object with a given number type, represented\n     * as a `ChunkDataNumberType`.\n     */\n    constructor(public type: ChunkDataNumberType) {\n    }\n\n    instantiate() {\n        return new ChunkDataNumberField(this.type);\n    }\n}","export class EventClock {\n    private tasks: Set<() => unknown> = new Set();\n    private delta: number = 0;\n    private time: number = 0;\n\n    constructor() {\n    }\n\n    runOnce(task: () => unknown) {\n        const wrapper = () => {\n            task();\n\n            this.unschedule(wrapper);\n        };\n\n        this.schedule(wrapper);\n    }\n\n    schedule(task: () => unknown) {\n        this.tasks.add(task);\n    }\n\n    unschedule(task: () => unknown) {\n        this.tasks.delete(task);\n    }\n\n    getDelta() {\n        return this.delta;\n    }\n\n    getCurrentTime() {\n        return this.time;\n    }\n\n    async start() {\n        let start = Date.now();\n\n        for (const task of this.tasks) {\n            await task();\n        }\n\n        this.delta = Date.now() - start;\n\n        this.time++;\n    }\n}","export class InitDispatcher {\n    private tasks: Set<InitTask>;\n\n    constructor() {\n        this.tasks = new Set();\n    }\n\n    schedule(name: string, timing: InitDispatcher.Timing, func: () => Promise<unknown>): void;\n    schedule(name: string, timing: InitDispatcher.Timing): (f: () => Promise<unknown>, _context: any) => void;\n    schedule(name: string, timing: InitDispatcher.Timing, func?: () => Promise<unknown>): void | ((f: () => Promise<unknown>, _context: any) => void) {\n        if (func instanceof Function && typeof timing == 'number') {\n            this.tasks.add(new InitTask(name, func, timing));\n        } else if (typeof func == 'number') {\n            return (f: () => Promise<unknown>, _context: any) => this.schedule(name, timing, f);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    unschedule(func: () => Promise<unknown>) {\n        for (const task of this.tasks) {\n            if (task.func == func) {\n                this.tasks.delete(task);\n\n                break;\n            }\n        }\n    }\n\n    async run(): Promise<void> {\n        let start = Date.now();\n        let timings: InitTask[][] = [];\n\n        for (const task of this.tasks) {\n            timings[task.timing] = timings[task.timing] || [];\n\n            timings[task.timing].push(task);\n        }\n\n        for (const timing of timings) {\n            console.log(\"InitDispatcher: Beginning tasks of Timing.\" + timing[0].timing + \" in parallel.\");\n\n            await new Promise<void>((resolve) => {\n                let resolved = 0;\n\n                for (const task of timing) {\n                    task.func().then(() => {\n                        resolved++;\n\n                        if (resolved == timing.length) {\n                            resolve();\n                        }\n                    });\n                }\n            });\n        }\n\n        let end = Date.now();\n\n        console.log(\"Game started in \" + (end - start) + \"ms.\");\n    }\n}\n\nclass InitTask {\n    constructor(\n        public name: string,\n        public func: () => Promise<unknown>,\n        public timing: InitDispatcher.Timing\n    ) {}\n}\n\nexport namespace InitDispatcher {\n    export enum Timing {\n        Cache = \"Cache\",\n        Instantiate = \"Instantiate\",\n        Register = \"Register\",\n        Build = \"Build\"\n    }\n}","import { loadGameContent } from \"../content/content.js\";\nimport { ChunkDataNumberAllocation } from \"../world/chunk-data/chunk-data-number-allocation.js\";\nimport { World } from \"../world/world.js\";\nimport { EventClock } from \"./event-clock.js\";\nimport { GameRuntimeType } from \"./game-runtime-type.js\";\nimport { InitDispatcher } from \"./init-dispatcher.js\";\nimport { Registries } from \"./registry/registries.js\";\n\nexport abstract class Game {\n    static init = new InitDispatcher();\n\n    private world: World;\n    private clock: EventClock = new EventClock();\n\n    constructor() {\n        this.world = new World();\n    }\n\n    async start() {\n        await Game.init.run();\n\n        Registries.fields.register('blockId', new ChunkDataNumberAllocation('u16'));\n\n        await loadGameContent();\n\n        Registries.blocks.allocate();\n        Registries.textures.allocate();\n        Registries.blocks.allocate();\n    }\n    \n    abstract getRuntimeType(): GameRuntimeType;\n\n    isGameClient(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerClient;\n    }\n\n    isGameServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isSingleplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer;\n    }\n\n    isMultiplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerClient || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isMultiplayerServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    getClock(): EventClock {\n        return this.clock;\n    }\n}","export class Color {\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\n    }\n\n    static fromHex(hex: string): Color {\n        const red = parseInt(hex.substring(1, 3), 16);\n        const green = parseInt(hex.substring(3, 5), 16);\n        const blue = parseInt(hex.substring(5, 7), 16);\n\n        return new Color(red / 255, green / 255, blue / 255, 1);\n    }\n\n    static fromRGB(red: number, green: number, blue: number): Color {\n        return new Color(red / 255, green / 255, blue / 255, 1);\n    }\n\n    static fromRGBA(red: number, green: number, blue: number, alpha: number): Color {\n        return new Color(red / 255, green / 255, blue / 255, alpha);\n    }\n\n    static toHex(color: Color): string {\n        const red = Math.round(color.red * 255).toString(16).padStart(2, \"0\");\n        const green = Math.round(color.green * 255).toString(16).padStart(2, \"0\");\n        const blue = Math.round(color.blue * 255).toString(16).padStart(2, \"0\");\n\n        return `#${red}${green}${blue}`;\n    }\n\n    static toRGB(color: Color): string {\n        const red = Math.round(color.red * 255);\n        const green = Math.round(color.green * 255);\n        const blue = Math.round(color.blue * 255);\n\n        return `rgb(${red}, ${green}, ${blue})`;\n    }\n\n    static toRGBA(color: Color): string {\n        const red = Math.round(color.red * 255);\n        const green = Math.round(color.green * 255);\n        const blue = Math.round(color.blue * 255);\n\n        return `rgba(${red}, ${green}, ${blue}, ${color.alpha})`;\n    }\n\n    static toGPUColor(color: Color): GPUColor {\n        return {\n            r: color.red,\n            g: color.green,\n            b: color.blue,\n            a: color.alpha\n        };\n    }\n\n    static blend(color1: Color, color2: Color, factor: number): Color {\n        const inverseFactor = 1 - factor;\n\n        const red = color1.red * factor + color2.red * inverseFactor;\n        const green = color1.green * factor + color2.green * inverseFactor;\n        const blue = color1.blue * factor + color2.blue * inverseFactor;\n        const alpha = color1.alpha * factor + color2.alpha * inverseFactor;\n\n        return new Color(red, green, blue, alpha);\n    }\n}","import { Rotation } from \"../rotation/rotation.js\";\nimport { ImmutableVector3D } from \"../vector3d/immutable-vector3d.js\";\nimport { MutableVector3D } from \"../vector3d/mutable-vector3d.js\";\nimport { Vector3D } from \"../vector3d/vector3d.js\";\nimport { Matrix3 } from \"./matrix3.js\";\n\nexport class Matrix4 {\n    public data: number[];\n\n    constructor(source?: number[] | Matrix3 | Matrix4) {\n        if (source instanceof Matrix3) {\n            this.data = [\n                source.data[0], source.data[1], source.data[2], 0,\n                source.data[3], source.data[4], source.data[5], 0,\n                source.data[6], source.data[7], source.data[8], 0,\n                0, 0, 0, 1\n            ];\n        } else if (source instanceof Matrix4) {\n            this.data = source.data.map(item => item);\n        } else if (source) {\n            this.data = source.map(item => item);\n        } else {\n            this.data = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n        }\n    }\n\n    multiply(vector: Vector3D): Vector3D;\n    multiply(matrix: Matrix4): ThisType<Matrix4>;\n    multiply(value: Vector3D | Matrix4): Vector3D | ThisType<Matrix4> {\n        if (value instanceof Vector3D) {\n            return Matrix4.multiplyVector(this, value);\n        } else if (value instanceof Matrix4) {\n            return Matrix4.multiply(this, value, this);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    get translation(): Vector3D {\n        return new ImmutableVector3D(this.data[12], this.data[13], this.data[14]);\n    }\n\n    set translation(value: Vector3D) {\n        this.data[12] = value.x;\n        this.data[13] = value.y;\n        this.data[14] = value.z;\n    }\n\n    static multiply(matrix1: Matrix4, matrix2: Matrix4, target: Matrix4 = new Matrix4()) {\n        const a = matrix1.data;\n        const b = matrix2.data;\n        const c = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n        const b00 = b[0], b01 = b[1], b02 = b[2], b03 = b[3];\n        const b10 = b[4], b11 = b[5], b12 = b[6], b13 = b[7];\n        const b20 = b[8], b21 = b[9], b22 = b[10], b23 = b[11];\n        const b30 = b[12], b31 = b[13], b32 = b[14], b33 = b[15];\n\n        c[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n        c[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n        c[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n        c[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n        c[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n        c[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n        c[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n        c[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n        c[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n        c[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n        c[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n        c[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n        c[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n        c[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n        c[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n        c[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n\n        return target;\n    }\n\n    static multiplyVector(matrix: Matrix4, vector: Vector3D, target: Vector3D = new MutableVector3D()) {\n        const a = matrix.data;\n        const b = vector;\n        const c = target;\n\n        const x = b.x, y = b.y, z = b.z;\n\n        c.x = a[0] * x + a[4] * y + a[8] * z + a[12];\n        c.y = a[1] * x + a[5] * y + a[9] * z + a[13];\n        c.z = a[2] * x + a[6] * y + a[10] * z + a[14];\n\n        return target;\n    }\n\n    static inverse(matrix: Matrix4, target: Matrix4 = new Matrix4()) {\n        const a = matrix.data;\n        const b = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n\n        const det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if (!det) return null;\n\n        const invDet = 1 / det;\n\n        b[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n        b[1] = (a02 * b10 - a01 * b11 - a03 * b09) * invDet;\n        b[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n        b[3] = (a22 * b04 - a21 * b05 - a23 * b03) * invDet;\n        b[4] = (a12 * b08 - a10 * b11 - a13 * b07) * invDet;\n        b[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n        b[6] = (a32 * b02 - a30 * b05 - a33 * b01) * invDet;\n        b[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n        b[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n        b[9] = (a01 * b08 - a00 * b10 - a03 * b06) * invDet;\n        b[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n        b[11] = (a21 * b02 - a20 * b04 - a23 * b00) * invDet;\n        b[12] = (a11 * b07 - a10 * b09 - a12 * b06) * invDet;\n        b[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n        b[14] = (a31 * b01 - a30 * b03 - a32 * b00) * invDet;\n        b[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n\n        return target;\n    }\n\n    static createTranslation(vector: Vector3D, target: Matrix4 = new Matrix4()) {\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n        target.data[11] = 0;\n\n        target.data[12] = vector.x;\n        target.data[13] = vector.y;\n        target.data[14] = vector.z;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createScale(vector: Vector3D, target: Matrix4 = new Matrix4()) {\n        target.data[0] = vector.x;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = vector.y;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = vector.z;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createRotation(rotation: Rotation, target: Matrix4 = new Matrix4()) {\n        let matrix = target || new Matrix4();\n\n        matrix.multiply(Matrix4.createRotationY(rotation.yaw));\n        matrix.multiply(Matrix4.createRotationX(rotation.pitch));\n        matrix.multiply(Matrix4.createRotationZ(rotation.roll));\n\n        return matrix;\n    }\n\n    static createRotationX(angle: number, target: Matrix4 = new Matrix4()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = cos;\n        target.data[6] = sin;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = -sin;\n        target.data[10] = cos;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createRotationY(angle: number, target: Matrix4 = new Matrix4()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = 0;\n        target.data[2] = -sin;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = sin;\n        target.data[9] = 0;\n        target.data[10] = cos;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createRotationZ(angle: number, target: Matrix4 = new Matrix4()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = sin;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = -sin;\n        target.data[5] = cos;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createPerspective(fov: number, aspect: number, near: number, far: number, target: Matrix4 = new Matrix4()) {\n        const f = 1 / Math.tan(fov / 2);\n        const nf = 1 / (near - far);\n\n        target.data[0] = f / aspect;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = f;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = (far + near) * nf;\n        target.data[11] = -1;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 2 * far * near * nf;\n        target.data[15] = 0;\n\n        return target;\n    }\n}","import { Matrix4 } from \"../../../utils/matrix/matrix4.js\";\n\nexport class Projector {\n    private projectionMatrix: Matrix4 | null = null;\n\n    constructor(private fieldOfView = 45, private aspect = 1, private near = 0.1, private far = 1000) {\n    }\n\n    getFieldOfView(): number {\n        return this.fieldOfView;\n    }\n\n    setFieldOfView(fieldOfView: number): void {\n        this.fieldOfView = fieldOfView;\n        this.projectionMatrix = null;\n    }\n\n    getAspectRatio(): number {\n        return this.aspect;\n    }\n\n    setAspectRatio(aspect: number): void {\n        this.aspect = aspect;\n        this.projectionMatrix = null;\n    }\n\n    getNear(): number {\n        return this.near;\n    }\n\n    setNear(near: number): void {\n        this.near = near;\n        this.projectionMatrix = null;\n    }\n\n    getFar(): number {\n        return this.far;\n    }\n\n    setFar(far: number): void {\n        this.far = far;\n        this.projectionMatrix = null;\n    }\n\n    getProjectionMatrix() {\n        if (!this.projectionMatrix) {\n            this.projectionMatrix = this.computeProjectionMatrix();\n        }\n\n        return this.projectionMatrix;\n    }\n\n    computeProjectionMatrix(): Matrix4 {\n        return Matrix4.createPerspective(this.fieldOfView, this.aspect, this.near, this.far);\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroup } from \"./bind-group.js\";\n\nexport class BindGroupManager {\n    private bindGroups: Set<BindGroup> = new Set();\n\n    async setup(device: GraphicsDevice) {\n        for (const bindGroup of this.bindGroups) {\n            await bindGroup.setup(device);\n        }\n\n        console.log(\"BindGroupManager setup\");\n        console.log(this.bindGroups);\n    }\n\n    addBindGroup(bindGroup: BindGroup) {\n        this.bindGroups.add(bindGroup);\n    }\n}","export namespace Bindings {\n    export const CameraBindGroup = 0;\n    export const CameraDataBinding = 0;\n\n    export const BlockModelBindGroup = 1;\n    export const BlockModelGeometryBinding = 0;\n    export const BlockModelTextureMappingBinding = 1;\n    export const BlockModelTextureBinding = 2;\n    export const BlockModelTextureSamplerBinding = 3;\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class BindGroup {\n    private entries: Set<BindGroupEntry> = new Set();\n    private layout: GPUBindGroupLayout;\n    private group: GPUBindGroup;\n\n    constructor(private index: number) {\n    }\n\n    async setup(device: GraphicsDevice) {\n        for (const entry of this.entries) {\n            await entry.setup(device);\n        }\n\n        const layoutEntries: GPUBindGroupLayoutEntry[] = [];\n\n        for (const entry of this.entries) {\n            layoutEntries.push(entry.getLayoutEntry());\n        }\n\n        this.layout = device.getDevice().createBindGroupLayout({\n            entries: layoutEntries\n        });\n\n        const bindGroupEntries: GPUBindGroupEntry[] = [];\n\n        for (const entry of this.entries) {\n            console.log(entry.getBindGroupEntry());\n            bindGroupEntries.push(entry.getBindGroupEntry());\n        }\n\n        this.group = device.getDevice().createBindGroup({\n            label: `Bind Group ${this.index}`,\n            layout: this.layout,\n            entries: bindGroupEntries\n        });\n    }\n\n    addEntry(binding: number, entry: BindGroupEntry) {\n        this.entries.add(entry);\n        entry.setBinding(binding);\n    }\n\n    getBindGroupLayout(): GPUBindGroupLayout {\n        return this.layout;\n    }\n\n    getBindGroupIndex(): number {\n        return this.index;\n    }\n\n    getBindGroup(): GPUBindGroup {\n        return this.group;\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class BufferBindGroupEntry implements BindGroupEntry {\n    private binding: number;\n\n    constructor(private buffer: GPUBuffer, private visibility: GPUShaderStageFlags, private type: \"uniform\" | \"storage\" | \"read-only-storage\") {\n    }\n\n    setBinding(index: number): void {\n        this.binding = index;\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n    }\n\n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: this.visibility,\n            buffer: {\n                type: this.type\n            }\n        };\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        return {\n            binding: this.binding,\n            resource: {\n                buffer: this.buffer\n            }\n        };\n    }\n}","import { Perspective } from \"../../pespective/perspective.js\";\nimport { Bindings } from \"./bindings.js\";\nimport { BindGroup } from \"./bindings/bind-group.js\";\nimport { BufferBindGroupEntry } from \"./bindings/buffer-bind-group-entry.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class Camera {\n    private bindGroup: BindGroup;\n    private bindGroupEntry: BufferBindGroupEntry;\n    private buffer: GPUBuffer;\n    private perspective: Perspective;\n\n    async setup(device: GraphicsDevice) {\n        this.buffer = device.getDevice().createBuffer({\n            size: 4 * 4 * 32 * 2,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n        });\n\n        this.bindGroup = new BindGroup(Bindings.CameraBindGroup);\n        this.bindGroupEntry = new BufferBindGroupEntry(this.buffer, GPUShaderStage.VERTEX, \"uniform\");\n        this.bindGroup.addEntry(Bindings.CameraDataBinding, this.bindGroupEntry);\n\n        await this.bindGroup.setup(device);\n    }\n\n    setPerspective(perspective: Perspective) {\n        this.perspective = perspective;\n    }\n\n    getCameraBindGroup(): BindGroup {\n        return this.bindGroup;\n    }\n}","import { WebGPURenderer } from \"./webgpu-renderer.js\";\n\nexport class GraphicsDevice {\n    private device: GPUDevice;\n    private adapter: GPUAdapter;\n    private context: GPUCanvasContext;\n\n    constructor(private canvas: HTMLCanvasElement, private renderer: WebGPURenderer) {\n    }\n\n    async setup() {\n        console.log(\"Initializing WebGPU\");\n\n        if (!navigator.gpu) {\n            throw new Error('WebGPU is not supported');\n        }\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) {\n            throw new Error('No useable adapter found');\n        }\n\n        this.adapter = adapter;\n\n        this.device = await adapter.requestDevice();\n\n        this.context = this.canvas.getContext('webgpu') as GPUCanvasContext;\n\n        this.context.configure({\n            device: this.device,\n            format: navigator.gpu.getPreferredCanvasFormat()\n        });\n    }\n\n    getDevice(): GPUDevice {\n        return this.device;\n    }\n\n    getContext(): GPUCanvasContext {\n        return this.context;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    getAdapter(): GPUAdapter {\n        return this.adapter;\n    }\n\n    getRenderer(): WebGPURenderer {\n        return this.renderer;\n    }\n}","import { Color } from \"../../../../utils/color.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { RenderPass } from \"./render-pass.js\";\n\nexport class ClearRenderPass implements RenderPass {\n    private device: GraphicsDevice;\n\n    constructor(private color: Color) {\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        this.device = device;\n    }\n\n    async setupBindings(device: GraphicsDevice): Promise<void> {\n    }\n\n    render(commandEncoder: GPUCommandEncoder): void {\n        const renderPassDescriptor: GPURenderPassDescriptor = {\n            colorAttachments: [\n                {\n                    clearValue: Color.toGPUColor(this.color),\n                    loadOp: \"clear\",\n                    storeOp: \"store\",\n                    view: this.device.getContext().getCurrentTexture().createView()\n                }\n            ]\n        };\n\n        const renderPass = commandEncoder.beginRenderPass(renderPassDescriptor);\n\n        renderPass.end();\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class TextureSampler implements BindGroupEntry {\n    private sampler: GPUSampler;\n    private binding: number;\n\n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: GPUShaderStage.FRAGMENT,\n            sampler: {}\n        };\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        return {\n            binding: this.binding,\n            resource: this.sampler\n        };\n    }\n\n    setBinding(index: number): void {\n        this.binding = index;\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        this.sampler = device.getDevice().createSampler({\n            magFilter: 'nearest',\n            minFilter: 'nearest',\n            mipmapFilter: 'nearest',\n            lodMinClamp: 0,\n            lodMaxClamp: 0\n        });\n    }\n}","import { Texture } from \"../../../../utils/texture.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\n\nexport class WebGPUTexture implements BindGroupEntry {\n    private texture: GPUTexture | null;\n    private device: GraphicsDevice;\n    private binding: number;\n\n    constructor(private source: Texture) {\n    }\n\n    setBinding(index: number): void {\n        this.binding = index;\n    }\n    \n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: GPUShaderStage.FRAGMENT,\n            texture: {\n                sampleType: 'float',\n                viewDimension: '2d'\n            }\n        };\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        if (!this.texture) {\n            throw new Error('Texture not initialized');\n        }\n\n        return {\n            binding: this.binding,\n            resource: this.texture.createView()\n        };\n    }\n\n    getTexture(): GPUTexture {\n        if (!this.texture) {\n            throw new Error('Texture not initialized');\n        }\n\n        return this.texture;\n    }\n\n    async setup(device: GraphicsDevice) {\n        this.device = device;\n        \n        this.texture = device.getDevice().createTexture({\n            size: [\n                this.source.getTextureWidth(),\n                this.source.getTextureHeight()\n            ],\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING\n        });\n\n        device.getDevice().queue.writeTexture(\n            { texture: this.texture },\n            this.source.toDataArray(),\n            { bytesPerRow: this.source.getTextureWidth() * 4, rowsPerImage: this.source.getTextureHeight() },\n            [ this.source.getTextureWidth(), this.source.getTextureHeight() ]\n        );\n    }\n}","import { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class ShaderModule {\n    private shaderModule: GPUShaderModule;\n\n    constructor(private label: string, private code: string) {\n    }\n\n    setup(graphicsDevice: GraphicsDevice): void {\n        this.shaderModule = graphicsDevice.getDevice().createShaderModule({\n            label: this.label,\n            code: this.code\n        });\n    }\n\n    getShaderModule(): GPUShaderModule {\n        return this.shaderModule;\n    }\n\n    static async import(path: string, label: string = path): Promise<ShaderModule> {\n        const response = await fetch(path);\n        const code = await response.text();\n\n        return new ShaderModule(label, code);\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupManager } from \"./bind-group-manager.js\";\nimport { BindGroup } from \"./bind-group.js\";\n\nexport class PipelineBindGroupManager {\n    private parent: BindGroupManager;\n    private usedGroups: Set<BindGroup> = new Set();\n\n    constructor(parent: BindGroupManager) {\n        this.parent = parent;\n    }\n\n    useBindGroup(bindGroup: BindGroup): void {\n        this.parent.addBindGroup(bindGroup);\n        this.usedGroups.add(bindGroup);\n    }\n\n    addBindGroupsToPipelineLayout(pipelineLayout: Partial<GPUPipelineLayoutDescriptor>) {\n        const bindGroupLayouts: GPUBindGroupLayout[] = [];\n\n        for (const bindGroup of this.usedGroups) {\n            bindGroupLayouts.push(bindGroup.getBindGroupLayout());\n        }\n\n        pipelineLayout.bindGroupLayouts = bindGroupLayouts;\n    }\n\n    setBindGroupsOnRenderPassEncoder(encoder: GPURenderPassEncoder) {\n        for (const bindGroup of this.usedGroups) {\n            encoder.setBindGroup(bindGroup.getBindGroupIndex(), bindGroup.getBindGroup());\n        }\n    }\n}","import { PipelineBindGroupManager } from \"../bindings/pipeline-bind-group-manager.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { RenderPass } from \"./render-pass.js\";\nimport { ShaderModule } from \"../shader-module.js\";\nimport { BindGroupManager } from \"../bindings/bind-group-manager.js\";\n\nexport abstract class BaseRenderPass implements RenderPass {\n    private pipeline: GPURenderPipeline;\n    private descriptor: Partial<GPURenderPipelineDescriptor> = {};\n    private pipelineLayout: GPUPipelineLayout;\n    private bindGroupManager: PipelineBindGroupManager;\n    private device: GraphicsDevice;\n\n    setBindGroupManager(bindGroupManager: BindGroupManager) {\n        this.bindGroupManager = new PipelineBindGroupManager(bindGroupManager);\n    }\n\n    async setup(device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const layoutDescriptor: Partial<GPUPipelineLayoutDescriptor> = {};\n        this.bindGroupManager.addBindGroupsToPipelineLayout(layoutDescriptor);\n        this.pipelineLayout = gpuDevice.createPipelineLayout(layoutDescriptor as GPUPipelineLayoutDescriptor);\n\n        this.descriptor.layout = this.pipelineLayout;\n\n        this.pipeline = gpuDevice.createRenderPipeline(this.descriptor as GPURenderPipelineDescriptor);\n\n        this.device = device;\n    }\n\n    async setupBindings(device: GraphicsDevice) {\n    }\n\n    protected addLabel(label: string) {\n        this.descriptor.label = label;\n    }\n\n    protected addVertexStage(module: ShaderModule, entryPoint: string) {\n        this.descriptor.vertex = {\n            module: module.getShaderModule(),\n            entryPoint\n        };\n    }\n\n    protected addFragmentStage(module: ShaderModule, entryPoint: string) {\n        this.descriptor.fragment = {\n            module: module.getShaderModule(),\n            entryPoint,\n            targets: [\n                { format: navigator.gpu.getPreferredCanvasFormat() }\n            ]   \n        };\n    }\n\n    protected addPrimitiveTopology(topology: GPUPrimitiveTopology, cullMode: GPUCullMode = \"none\") {\n        this.descriptor.primitive = {\n            topology,\n            cullMode\n        };\n    }\n\n    protected getBindGroupManager(): PipelineBindGroupManager {\n        return this.bindGroupManager;\n    }\n\n    protected getPipelineLayout(): GPUPipelineLayout {\n        return this.pipelineLayout;\n    }\n\n    render(commandEncoder: GPUCommandEncoder): void {\n        const renderPass = commandEncoder.beginRenderPass({\n            colorAttachments: [\n                {\n                    view: this.device.getContext().getCurrentTexture().createView(),\n                    loadOp: \"load\",\n                    storeOp: \"store\"\n                }\n            ]\n        });\n\n        this.bindGroupManager.setBindGroupsOnRenderPassEncoder(renderPass);\n        renderPass.setPipeline(this.pipeline);\n\n        this.draw(renderPass, commandEncoder);\n\n        renderPass.end();\n    }\n\n    protected getGraphicsDevice(): GraphicsDevice {\n        return this.device;\n    }\n\n    protected abstract draw(renderPass: GPURenderPassEncoder, commandEncoder: GPUCommandEncoder): void;\n}","import { ChunkDataReferencer } from \"../../../../../world/chunk-data/chunk-data-referencer.js\";\nimport { Bindings } from \"../bindings.js\";\nimport { BindGroup } from \"../bindings/bind-group.js\";\nimport { BufferBindGroupEntry } from \"../bindings/buffer-bind-group-entry.js\";\nimport { TextureSampler } from \"../bindings/texture-sampler.js\";\nimport { WebGPUTexture } from \"../bindings/webgpu-texture.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { ShaderModule } from \"../shader-module.js\";\nimport { WebGPUWorldMirror } from \"../webgpu-world-mirror.js\";\nimport { BaseRenderPass } from \"./base-render-pass.js\";\n\nexport class TerrainRenderPass extends BaseRenderPass {\n    private indirectDrawBuffer: GPUBuffer;\n    \n    constructor(private worldMirror: WebGPUWorldMirror) {\n        super();\n    }\n\n    async setupBindings(device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        this.indirectDrawBuffer = gpuDevice.createBuffer({\n            label: \"Terrain Indirect Draw Buffer\",\n            usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.STORAGE,\n            size: ChunkDataReferencer.cells * 16\n        });\n\n        const shader = await ShaderModule.import(\"/assets/shaders/terrain.wgsl\", \"Terrain Shader\");\n\n        shader.setup(device);\n\n        this.addPrimitiveTopology(\"triangle-list\", \"back\");\n        this.addLabel(\"Terrain Render Pass\");\n        this.addVertexStage(shader, \"vertex_main\");\n        this.addFragmentStage(shader, \"fragment_main\");\n\n        this.getBindGroupManager().useBindGroup(device.getRenderer().getCamera().getCameraBindGroup());\n\n        await this.setupBlockModelBindings(device);\n    }\n\n    private async setupBlockModelBindings(device: GraphicsDevice) {\n        const blockModelBindGroup = new BindGroup(Bindings.BlockModelBindGroup);\n\n        await this.setupGeometryBindings(blockModelBindGroup, device);\n        await this.setupTextureMappingBindings(blockModelBindGroup, device);\n        await this.setupTextureBindings(blockModelBindGroup, device);\n        await this.setupTextureSamplerBindings(blockModelBindGroup, device);\n\n        this.getBindGroupManager().useBindGroup(blockModelBindGroup);\n    }\n\n    private async setupGeometryBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const geometryData = this.worldMirror.getTerrainMesh().getVertexPositions();\n        const geometryBuffer = gpuDevice.createBuffer({\n            label: \"Terrain Geometry Buffer\",\n            size: geometryData.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST\n        });\n\n        gpuDevice.queue.writeBuffer(geometryBuffer, 0, geometryData);\n\n        const geometryBindGroupEntry = new BufferBindGroupEntry(geometryBuffer, GPUShaderStage.VERTEX, \"read-only-storage\");\n\n        bindGroup.addEntry(Bindings.BlockModelGeometryBinding, geometryBindGroupEntry);\n    }\n\n    private async setupTextureMappingBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const textureMappingData = this.worldMirror.getTerrainMesh().getTextureMappings();\n        const textureMappingBuffer = gpuDevice.createBuffer({\n            label: \"Terrain Texture Mapping Buffer\",\n            size: textureMappingData.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST\n        });\n\n        gpuDevice.queue.writeBuffer(textureMappingBuffer, 0, textureMappingData);\n\n        const textureMappingBindGroupEntry = new BufferBindGroupEntry(textureMappingBuffer, GPUShaderStage.VERTEX, \"read-only-storage\");\n\n        bindGroup.addEntry(Bindings.BlockModelTextureMappingBinding, textureMappingBindGroupEntry);\n    }\n\n    private async setupTextureBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const texture = this.worldMirror.getTerrainMesh().getTexture();\n        const gpuTexture = new WebGPUTexture(texture);\n\n        bindGroup.addEntry(Bindings.BlockModelTextureBinding, gpuTexture);\n    }\n\n    private async setupTextureSamplerBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const textureSampler = new TextureSampler();\n\n        bindGroup.addEntry(Bindings.BlockModelTextureSamplerBinding, textureSampler);\n    }\n\n    protected draw(renderPass: GPURenderPassEncoder, commandEncoder: GPUCommandEncoder): void {\n        const gpuDevice = this.getGraphicsDevice().getDevice();\n\n        for (const chunk of this.worldMirror.getVisibleChunks()) {\n            gpuDevice.queue.writeBuffer(this.indirectDrawBuffer, 0, chunk.getIndirectDrawCalls());\n\n            renderPass.drawIndirect(this.indirectDrawBuffer, 0);\n        }\n    }\n}","import { ImmutableVector2D } from \"../../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { World } from \"../../../world/world.js\";\nimport { Perspective } from \"../pespective/perspective.js\";\nimport { RenderChunkMirror } from \"./render-chunk-mirror.js\";\n\nexport abstract class RenderWorldMirror<M extends RenderChunkMirror> {\n    private chunks: Map<string, M> = new Map();\n\n    protected getChunks(): Iterable<M> {\n        return this.chunks.values();\n    }\n\n    updateRenderedWorld() {\n        const perspective = this.getPerspective();\n\n        if (!perspective) {\n            throw new Error(\"Cannot update rendered world without perspective\");\n        }\n\n        const world = this.getWorld();\n        const perspectiveLocation = perspective.getChunkLocation();\n        const renderDistance = perspective.getRenderDistance();\n        const renderDistanceSquared = renderDistance ** 2;\n\n        for (const [ key, mirror ] of this.chunks) {\n            const chunk = world.getChunk(mirror.getPosition());\n\n            if (!chunk) continue;\n            if (chunk.isPlaceholder()) continue;\n\n            const chunkPosition = chunk.getPosition();\n\n            if (chunkPosition.distanceSquaredTo(perspectiveLocation) > renderDistanceSquared) {\n                this.chunks.delete(key);\n            }\n        }\n\n        for (let x = perspectiveLocation.x - renderDistance; x <= perspectiveLocation.x + renderDistance; x++) {\n            for (let z = perspectiveLocation.y - renderDistance; z <= perspectiveLocation.y + renderDistance; z++) {\n                const chunk = world.getChunk(x, z);\n\n                if (!chunk || chunk.isPlaceholder()) {\n                    continue;\n                }\n\n                const key = x + '.' + z;\n                const position = new ImmutableVector2D(x, z);\n\n                if (!this.chunks.has(key)) {\n                    this.chunks.set(key, this.createRenderChunkMirror(position));\n                }\n            }\n        }\n    }\n\n    protected abstract createRenderChunkMirror(position: Vector2D): M;\n    \n    abstract getWorld(): World;\n    abstract getPerspective(): Perspective;\n    abstract getVisibleChunks(): Iterable<M>;\n}","import { Texture } from \"../../utils/texture.js\";\nimport { StaticModel } from \"../model/static/static-model.js\";\n\nexport class AssembledMesh {\n    constructor(\n        private vertexPositions: Float32Array,\n        private textureMappings: Uint32Array,\n        private texture: Texture,\n        private startIndex: Map<StaticModel, number>,\n        private endIndex: Map<StaticModel, number>\n    ) {\n    }\n\n    getVertexPositions(): Float32Array {\n        return this.vertexPositions;\n    }\n\n    getTextureMappings(): Uint32Array {\n        return this.textureMappings;\n    }\n\n    getTexture(): Texture {\n        return this.texture;\n    }\n\n    getModelStartIndex(model: StaticModel): number {\n        if (!this.startIndex.has(model)) throw new Error('Model not found in mesh assembler');\n\n        return this.startIndex.get(model)!;\n    }\n\n    getModelEndIndex(model: StaticModel): number {\n        if (!this.endIndex.has(model)) throw new Error('Model not found in mesh assembler');\n\n        return this.endIndex.get(model)!;\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { DataUtils } from \"../../../utils/data-utils.js\";\nimport { ImmutableVector2D } from \"../../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { Texture } from \"../../utils/texture.js\";\nimport { AssembledMesh } from \"./assembled-mesh.js\";\nimport { StaticModel } from \"../model/static/static-model.js\";\n\nexport class MeshAssembler {\n    private models: StaticModel[];\n    private vertexPositions: Float32Array;\n    private textureMappings: Uint32Array;\n    private texture: Texture;\n    private startIndex: Map<StaticModel, number>;\n    private endIndex: Map<StaticModel, number>;\n\n    constructor(models: Iterable<StaticModel>) {\n        this.models = Array.from(models);\n    }\n\n    assembleMeshes(): AssembledMesh {\n        if (this.texture) {\n            return this.createAssembledMesh();\n        }\n\n        this.startIndex = new Map();\n        this.endIndex = new Map();\n\n        const modelVertexPositions: Float32Array[] = [];\n        const modelTextureMappings: Uint32Array[] = [];\n        const modelTextureIds: Uint32Array[] = [];\n\n        let modelIndex = 0;\n        let vertexIndex = 0;\n\n        for (const model of this.models) {\n            const vertexPositions = model.getVertexPositions();\n            const textureMappings = model.getTextureMappings();\n            const textureIds = model.getTextureIds();\n\n            this.startIndex.set(model, vertexIndex);\n\n            modelVertexPositions.push(vertexPositions);\n            modelTextureMappings.push(textureMappings);\n            modelTextureIds.push(textureIds);\n\n            vertexIndex += vertexPositions.length / 3;\n\n            this.endIndex.set(model, vertexIndex);\n\n            modelIndex++;\n        }\n\n        this.vertexPositions = new Float32Array(DataUtils.concat(modelVertexPositions));\n        \n        const textureArray = this.getTextureArrayFromModelTextureIds(modelTextureIds);\n        const combinedSize = this.getCombinedTextureSize(textureArray);\n\n        const { texturePositions, texture } = this.renderCombinedTextures(combinedSize, textureArray);\n        this.texture = texture;\n\n        this.textureMappings = new Uint32Array(vertexIndex * 2);\n\n        for (let modelIndex = 0; modelIndex < modelTextureIds.length; modelIndex++) {\n            const textureIds = modelTextureIds[modelIndex];\n            const textureMappings = modelTextureMappings[modelIndex];\n            const vertexStart = this.startIndex[modelIndex];\n            \n            for (let triangleIndex = 0; triangleIndex < textureIds.length; triangleIndex++) {\n                const textureId = textureIds[triangleIndex];\n                const textureIndex = textureArray.indexOf(Registries.textures.get(textureId)!);\n                const texturePosition = texturePositions[textureIndex];\n\n                for (let vertexIndex = 0; vertexIndex < 3; vertexIndex++) {\n                    const vertexPosition = vertexStart + triangleIndex * 3 + vertexIndex;\n\n                    this.textureMappings[vertexPosition * 2] = textureMappings[triangleIndex * 2] + texturePosition;\n                    this.textureMappings[vertexPosition * 2 + 1] = textureMappings[triangleIndex * 2 + 1];\n                }\n            }\n        }\n\n        return this.createAssembledMesh();\n    }\n\n    private createAssembledMesh(): AssembledMesh {\n        return new AssembledMesh(this.vertexPositions, this.textureMappings, this.texture, this.startIndex, this.endIndex);\n    }\n\n    private getTextureArrayFromModelTextureIds(modelTextureIds: Uint32Array[]): Texture[] {\n        let textures: Set<Texture> = new Set();\n\n        for (const ids of modelTextureIds) {\n            for (const id of ids) {\n                const texture = Registries.textures.get(id);\n\n                if (!texture) throw new Error(`Texture with id ${id} not found in registry`);\n\n                textures.add(texture);\n            }\n        }\n\n        return Array.from(textures);\n    }\n\n    private getCombinedTextureSize(textures: Iterable<Texture>): Vector2D {\n        let combinedWidth = 0;\n        let combinedHeight = 0;\n\n        for (const texture of textures) {\n            combinedWidth += texture.getTextureWidth();\n            combinedHeight = Math.max(combinedHeight, texture.getTextureHeight());\n        }\n\n        return new ImmutableVector2D(combinedWidth, combinedHeight);\n    }\n\n    private renderCombinedTextures(size: Vector2D, textures: Texture[]): { texturePositions: Uint32Array, texture: Texture } {\n        if (textures.length == 0) {\n            return {\n                texturePositions: new Uint32Array(0),\n                texture: Texture.fromDataArray(new Uint8ClampedArray(0), 0, 0)\n            };\n        }\n\n        const canvas = new OffscreenCanvas(size.x, size.y);\n        const context = canvas.getContext('2d')!;\n\n        const texturePositions = new Uint32Array(textures.length);\n        let xOffset = 0;\n\n        let textureIndex = 0;\n\n        for (const texture of textures) {\n            context.putImageData(texture.toImageData(), xOffset, 0);\n\n            texturePositions[textureIndex] = xOffset;\n\n            xOffset += texture.getTextureWidth();\n            textureIndex++;\n        }\n\n        canvas.convertToBlob().then(blob => {\n            const url = URL.createObjectURL(blob);\n\n            const img = new Image();\n            img.onload = () => {\n                URL.revokeObjectURL(url);\n            };\n\n            img.src = url;\n            document.body.appendChild(img);\n        });\n\n        const texture = Texture.fromImageData(context.getImageData(0, 0, size.x, size.y));\n\n        return { texturePositions, texture };\n    }\n}","import { BlockModel } from \"../model/static/block-model.js\";\n\nexport class InstancedDataSegment {\n    constructor(\n        private model: BlockModel | null,\n        private size: number,\n        private startIndex: number = 0\n    ) {\n    }\n\n    getSize(): number {\n        return this.size;\n    }\n\n    setSize(value: number): void {\n        this.size = value;\n    }\n\n    getModel(): BlockModel | null {\n        return this.model;\n    }\n\n    getStartIndex(): number {\n        return this.startIndex;\n    }\n\n    setStartIndex(index: number) {\n        this.startIndex = index;\n    }\n}","import { ChunkDataReferencer } from \"../../../world/chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../../../world/chunk-data/chunk-data.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\nimport { BlockModel } from \"../model/static/block-model.js\";\nimport { InstancedDataSegment } from \"./instanced-data-segment.js\";\n\nexport class InstancedData {\n    protected segments: InstancedDataSegment[];\n\n    constructor(protected chunkData: ChunkData) {\n        this.update();\n    }\n\n    // Not very efficient right now\n    update() {\n        this.segments = [];\n\n        let lastType: BlockModel | null = null;\n        let lastSegment: InstancedDataSegment | null = null;\n\n        for (let i = 0; i < ChunkDataReferencer.cells; i++) {\n            const position = ChunkDataReferencer.position(i);\n\n            const blockPrototype = this.chunkData.getBlock(position);\n            const blockPosition = new BlockPosition(position, this.chunkData);\n            const model = blockPrototype.getBlockModel(blockPosition);\n\n            if (model != lastType) {\n                lastSegment = new InstancedDataSegment(model, 0, i);\n\n                this.segments.push(lastSegment);\n                lastType = model;\n            }\n\n            const segment = lastSegment!;\n\n            segment.setSize(segment.getSize() + 1);\n        }\n    }\n}","import { ChunkDataReferencer } from \"../../src/world/chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../../src/world/chunk-data/chunk-data.js\";\nimport { InstancedData } from \"../../src/render/world/instancing/instanced-data.js\";\nimport { AssembledMesh } from \"../../src/render/world/terrain/assembled-mesh.js\";\n\nexport class WebGPUInstancedData extends InstancedData {\n    private indirectCalls: ArrayBuffer;\n    \n    constructor(private assembledMesh: AssembledMesh, chunkData: ChunkData) {\n        super(chunkData);\n\n        this.indirectCalls = new ArrayBuffer(ChunkDataReferencer.cells * 16);\n    }\n\n    update() {\n        super.update();\n\n        const indirectCalls = new Uint32Array(this.indirectCalls);\n\n        for (let i = 0; i < this.indirectCalls.byteLength / 16; i++) {\n            if (i >= this.segments.length) {\n                indirectCalls[i * 4] = 0;\n                indirectCalls[i * 4 + 1] = 0;\n                indirectCalls[i * 4 + 2] = 0;\n                indirectCalls[i * 4 + 3] = 0;\n\n                continue;\n            }\n\n            const segment = this.segments[i];\n            const model = segment.getModel();\n\n            if (!model) continue;\n            \n            const vertexStartIndex = this.assembledMesh.getModelStartIndex(model);\n            const vertexEndIndex = this.assembledMesh.getModelEndIndex(model);\n            const vertexCount = vertexEndIndex - vertexStartIndex;\n            const instanceStartIndex = segment.getStartIndex();\n            const instanceCount = segment.getSize();\n\n            indirectCalls[i * 4] = vertexCount;\n            indirectCalls[i * 4 + 1] = instanceCount;\n            indirectCalls[i * 4 + 2] = vertexStartIndex;\n            indirectCalls[i * 4 + 3] = instanceStartIndex;\n        }\n    }\n\n    getIndirectCalls(): ArrayBuffer {\n        return this.indirectCalls;\n    }\n}","import { Vector2D } from \"../../../../utils/vector2d/vector2d.js\";\nimport { ChunkInterface } from \"../../../../world/chunk-interface.js\";\nimport { RenderChunkMirror } from \"../../mirror/render-chunk-mirror.js\";\nimport { WebGPUInstancedData } from \"../../../../../.old/render/webgpu-instanced-data.js\";\nimport { WebGPUWorldMirror } from \"./webgpu-world-mirror.js\";\n\nexport class WebGPUChunkMirror implements RenderChunkMirror {\n    private instancedData: WebGPUInstancedData;\n    private chunk: ChunkInterface.NonPlaceholder;\n\n    constructor(private position: Vector2D, private worldMirror: WebGPUWorldMirror) {\n        this.chunk = this.worldMirror.getWorld().getChunk(this.position) as ChunkInterface.NonPlaceholder;\n        this.instancedData = new WebGPUInstancedData(worldMirror.getTerrainMesh(), this.chunk.getChunkData());\n    }\n\n    getIndirectDrawCalls(): ArrayBuffer {\n        return this.instancedData.getIndirectCalls();\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n}","import { Registries } from \"../../../../game/registry/registries.js\";\nimport { Vector2D } from \"../../../../utils/vector2d/vector2d.js\";\nimport { World } from \"../../../../world/world.js\";\nimport { RenderWorldMirror } from \"../../mirror/render-world-mirror.js\";\nimport { Perspective } from \"../../pespective/perspective.js\";\nimport { AssembledMesh } from \"../../terrain/assembled-mesh.js\";\nimport { MeshAssembler } from \"../../terrain/mesh-assembler.js\";\nimport { WebGPUTexture } from \"./bindings/webgpu-texture.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\nimport { WebGPUChunkMirror } from \"./webgpu-chunk-mirror.js\";\nimport { WebGPURenderer } from \"./webgpu-renderer.js\";\n\nexport class WebGPUWorldMirror extends RenderWorldMirror<WebGPUChunkMirror> {\n    private terrainMesh: AssembledMesh;\n    private terrainTexture: WebGPUTexture;\n\n    constructor(private renderer: WebGPURenderer) {\n        super();\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        const meshAssembler = new MeshAssembler(Registries.blockModels.values());\n        this.terrainMesh = meshAssembler.assembleMeshes();\n\n        this.terrainTexture = new WebGPUTexture(this.terrainMesh.getTexture());\n        await this.terrainTexture.setup(device);\n    }\n\n    getWorld(): World {\n        return this.renderer.getWorld();\n    }\n\n    getPerspective(): Perspective {\n        return this.renderer.getPerspective();\n    }\n\n    protected createRenderChunkMirror(position: Vector2D): WebGPUChunkMirror {\n        return new WebGPUChunkMirror(position, this);\n    }\n\n    getTerrainMesh(): AssembledMesh {\n        return this.terrainMesh;\n    }\n\n    getWorldRenderer(): WebGPURenderer {\n        return this.renderer;\n    }\n\n    getVisibleChunks(): Iterable<WebGPUChunkMirror> {\n        return this.getChunks();\n    }\n}","import { World } from \"../../../../world/world.js\";\nimport { Renderer } from \"../../../renderer.js\";\nimport { Color } from \"../../../utils/color.js\";\nimport { Perspective } from \"../../pespective/perspective.js\";\nimport { Projector } from \"../../pespective/projector.js\";\nimport { WorldRenderer } from \"../../world-renderer.js\";\nimport { BindGroupManager } from \"./bindings/bind-group-manager.js\";\nimport { BufferBindGroupEntry } from \"./bindings/buffer-bind-group-entry.js\";\nimport { Camera } from \"./camera.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\nimport { ClearRenderPass } from \"./pass/clear-render-pass.js\";\nimport { RenderPass } from \"./pass/render-pass.js\";\nimport { TerrainRenderPass } from \"./pass/terrain-render-pass.js\";\nimport { WebGPUWorldMirror } from \"./webgpu-world-mirror.js\";\n\nexport class WebGPURenderer implements WorldRenderer {\n    private device: GraphicsDevice;\n    private world: World;\n    private renderedWorld: WebGPUWorldMirror;\n    private passes: RenderPass[];\n    private bindGroupManager: BindGroupManager;\n\n    private camera: Camera;\n    private perspective: Perspective;\n    private projector: Projector = new Projector(75, 1, 0.1, 1000);\n\n    constructor(private renderer: Renderer) {\n        this.renderedWorld = new WebGPUWorldMirror(this);\n        this.device = new GraphicsDevice(document.createElement('canvas'), this);\n        this.bindGroupManager = new BindGroupManager();\n\n        const terrainRenderPass = new TerrainRenderPass(this.renderedWorld);\n\n        terrainRenderPass.setBindGroupManager(this.bindGroupManager);\n\n        this.passes = [\n            new ClearRenderPass(new Color(0, 0.1, 0.2, 1)),\n            terrainRenderPass\n        ];\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this.device.getCanvas();\n    }\n\n    getRenderer(): Renderer {\n        return this.renderer;\n    }\n\n    setWorld(world: any): void {\n        if (this.world) throw new Error('Cannot set rendered world twice');\n\n        this.world = world;\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    async setupWorldRenderer(): Promise<void> {\n        await this.device.setup();\n\n        this.camera = new Camera();\n        await this.camera.setup(this.device);\n        this.bindGroupManager.addBindGroup(this.camera.getCameraBindGroup());\n\n        await this.renderedWorld.setup(this.device);\n\n        for (const pass of this.passes) {\n            await pass.setupBindings(this.device);\n        }\n\n        await this.bindGroupManager.setup(this.device);\n\n        for (const pass of this.passes) {\n            await pass.setup(this.device);\n        }\n    }\n\n    render(): void {\n        const canvas = this.device.getCanvas();\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.projector.setAspectRatio(canvas.width / canvas.height);\n\n        this.perspective.updatePerspective();\n        this.renderedWorld.updateRenderedWorld();\n\n        const gpuDevice = this.device.getDevice();\n\n        const commandEncoder = gpuDevice.createCommandEncoder({\n            label: \"Renderer Command Encoder\"\n        });\n        \n        for (const renderPass of this.passes) {\n            renderPass.render(commandEncoder);\n        }\n\n        this.device.getDevice().queue.submit([ commandEncoder.finish() ]);\n    }\n\n    getPerspective(): Perspective {\n        return this.perspective;\n    }\n\n    setPerspective(perspective: Perspective): void {\n        this.perspective = perspective;\n    }\n\n    getProjector(): Projector {\n        return this.projector;\n    }\n\n    setProjector(projector: Projector): void {\n        this.projector = projector;\n    }\n\n    getCamera(): Camera {\n        return this.camera;\n    }\n\n    static async isSupported() {\n        if (!navigator.gpu) return false;\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) return false;\n\n        return true;\n    }\n}","import { World } from \"../world/world.js\";\nimport { WebGPURenderer } from \"./world/implementation/webgpu/webgpu-renderer.js\";\nimport { WorldRenderer } from \"./world/world-renderer.js\";\n\nexport class Renderer {\n    private worldRenderer: WorldRenderer | null;\n\n    constructor(private world: World) {\n    }\n\n    getWorldRenderer(): WorldRenderer {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        return this.worldRenderer;\n    }\n\n    getElement(): HTMLElement {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        return this.worldRenderer.getCanvas();\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    async setupRenderer() {\n        if (await WebGPURenderer.isSupported()) {\n            this.worldRenderer = new WebGPURenderer(this);\n        } else {\n            throw new Error(\"No supported world renderer found\");\n        }\n\n        this.worldRenderer.setWorld(this.world);\n        await this.worldRenderer.setupWorldRenderer();\n    }\n\n    render(): void {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        this.worldRenderer.render();\n    }\n}","import { Matrix4 } from \"../../../utils/matrix/matrix4.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { Entity } from \"../../../world/entity/entity.js\";\nimport { Perspective } from \"./perspective.js\";\n\nexport class EntityPerspective implements Perspective {\n    private matrix: Matrix4;\n\n    constructor(private entity: Entity) {\n    }\n\n    getChunkLocation(): Vector2D {\n        if (!this.entity.getParentChunk()) {\n            throw new Error(\"Cannot get chunk location of unbound entity\");\n        }\n\n        return this.entity.getParentChunk()!.getPosition();\n    }\n\n    getTransformationMatrix(): Matrix4 {\n        return this.matrix;\n    }\n\n    getRenderDistance(): number {\n        return 10;\n    }\n\n    updatePerspective() {\n        this.matrix = this.computeTransformationMatrix();\n    }\n\n    computeTransformationMatrix(): Matrix4 {\n        let matrix = new Matrix4();\n\n        matrix.multiply(Matrix4.createTranslation(this.entity.getPosition()));\n        matrix.multiply(Matrix4.createRotation(this.entity.getRotation()));\n\n        return matrix;\n    }\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../chunk-data/chunk-data.js\";\nimport { WorldGenerator } from \"./world-generator.js\";\n\nexport class SimpleWorldGenerator implements WorldGenerator {\n    async generateChunk(location: Vector2D): Promise<ChunkData> {\n        const data = new ChunkData();\n\n        const stone = Registries.blocks.get('stone');\n\n        if (!stone) {\n            throw new Error('Stone block prototype not found');\n        }\n\n        for (let x = 0; x < ChunkDataReferencer.dimensions.x; x++) {\n            for (let z = 0; z < ChunkDataReferencer.dimensions.z; z++) {\n                data.setBlock(x, 0, z, stone);\n            }\n        }\n\n        return data;\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"../world/chunk-data/chunk-data.js\";\nimport { WorldGenerator } from \"../world/world-generation/world-generator.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\n\nexport class SingleplayerWorldLoader implements WorldLoader {\n    constructor(private worldGenerator: WorldGenerator) {\n    }\n    \n    loadChunk(location: Vector2D): Promise<ChunkData> {\n        return this.worldGenerator.generateChunk(location);\n    }\n\n    saveChunk(location: Vector2D, chunk: ChunkData): Promise<void> {\n        return Promise.resolve();\n    }\n\n    shouldUnloadChunks(): boolean {\n        return false;\n    }\n}","import { PlayerEntity } from \"../content/entity/player/player-entity.js\";\nimport { GameRuntimeType } from \"../game/game-runtime-type.js\";\nimport { Game } from \"../game/game.js\";\nimport { Registries } from \"../game/registry/registries.js\";\nimport { Renderer } from \"../render/renderer.js\";\nimport { EntityPerspective } from \"../render/world/pespective/entity-perspective.js\";\nimport { EntityPrototype } from \"../world/prototype/entity-prototype.js\";\nimport { SimpleWorldGenerator } from \"../world/world-generation/simple-world-generator.js\";\nimport { WorldGenerator } from \"../world/world-generation/world-generator.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\nimport { SingleplayerWorldLoader } from \"./singleplayer-world-loader.js\";\n\nexport class Client extends Game {\n    private renderer: Renderer;\n    private worldGenerator: WorldGenerator;\n    private worldLoader: WorldLoader;\n\n    constructor() {\n        super();\n\n        this.worldGenerator = new SimpleWorldGenerator();\n        this.worldLoader = new SingleplayerWorldLoader(this.worldGenerator);\n        this.getWorld().bindWorldLoader(this.worldLoader);\n\n        this.renderer = new Renderer(this.getWorld());\n    }\n\n    getRenderer() {\n        return this.renderer;\n    }\n\n    getRuntimeType(): GameRuntimeType {\n        return GameRuntimeType.Singleplayer;\n    }\n\n    async start() {\n        await super.start();\n        await this.renderer.setupRenderer();\n\n        const playerPrototype = Registries.entities.get('player') as EntityPrototype<PlayerEntity>;\n        const playerEntity = playerPrototype.createEntity();\n\n        this.getWorld().addEntity(playerEntity);\n\n        const playerPerspective = new EntityPerspective(playerEntity);\n\n        this.getRenderer().getWorldRenderer().setPerspective(playerPerspective);\n\n        const clock = this.getClock();\n        clock.schedule(() => this.renderer.render());\n        clock.start();\n    }\n}","import { Client } from \"./client.js\";\n\nconst client = new Client();\n\nawait client.start();\n\ndocument.body.appendChild(client.getRenderer().getElement());\n\nwindow['client'] = client;"],"names":[],"mappings":"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,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QAEzD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAEzD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,G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AG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACpD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,C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"}