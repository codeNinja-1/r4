{"version":3,"file":"client.js","sources":["../src/game/game-runtime-type.ts","../src/game/event-clock.ts","../src/game/init-dispatcher.ts","../src/utils/vector2d/vector2d.ts","../src/utils/vector2d/immutable-vector2d.ts","../src/utils/vector3d/vector3d.ts","../src/utils/vector3d/immutable-vector3d.ts","../src/utils/vector3d/mutable-vector3d.ts","../src/world/chunk-data/chunk-data-referencer.ts","../src/game/registry.ts","../src/world/prototype/block-prototype-registry.ts","../src/game/registries.ts","../src/world/prototype/chunk-data-fields.ts","../src/world/prototype/block-prototype.ts","../src/world/prototype/block-position.ts","../src/world/chunk-data/chunk-data.ts","../src/world/chunk-interface.ts","../src/world/chunk.ts","../src/world/placeholder-chunk.ts","../src/world/world.ts","../src/world/chunk-data/chunk-data-field.ts","../src/world/chunk-data/chunk-data-number-field.ts","../src/world/chunk-data/chunk-data-number-allocation.ts","../src/world/block-fields/chunk-instance-referencer.ts","../src/game/game.ts","../node_modules/tslib/tslib.es6.js","../src/render/abstract/world-renderer.ts","../src/render/webgpu/webgpu-renderer.ts","../src/render/renderer.ts","../src/world/world-generation/simple-world-generator.ts","../src/client/singleplayer-world-loader.ts","../src/client/client.ts","../src/client/main.ts"],"sourcesContent":["export enum GameRuntimeType { Singleplayer, MultiplayerClient, MultiplayerServer }","export class EventClock {\n    private tasks: Set<() => unknown> = new Set();\n    private delta: number = 0;\n    private time: number = 0;\n\n    constructor() {\n    }\n\n    runOnce(task: () => unknown) {\n        const wrapper = () => {\n            task();\n\n            this.unschedule(wrapper);\n        };\n\n        this.schedule(wrapper);\n    }\n\n    schedule(task: () => unknown) {\n        this.tasks.add(task);\n    }\n\n    unschedule(task: () => unknown) {\n        this.tasks.delete(task);\n    }\n\n    getDelta() {\n        return this.delta;\n    }\n\n    getCurrentTime() {\n        return this.time;\n    }\n\n    async start() {\n        let start = Date.now();\n\n        for (const task of this.tasks) {\n            await task();\n        }\n\n        this.delta = Date.now() - start;\n\n        this.time++;\n    }\n}","export class InitDispatcher {\n    private tasks: Set<InitTask>;\n\n    constructor() {\n        this.tasks = new Set();\n    }\n\n    schedule(name: string, timing: InitDispatcher.Timing, func: () => Promise<unknown>): void;\n    schedule(name: string, timing: InitDispatcher.Timing): (f: () => Promise<unknown>, _context: any) => void;\n    schedule(name: string, timing: InitDispatcher.Timing, func?: () => Promise<unknown>): void | ((f: () => Promise<unknown>, _context: any) => void) {\n        if (func instanceof Function && typeof timing == 'number') {\n            this.tasks.add(new InitTask(name, func, timing));\n        } else if (typeof func == 'number') {\n            return (f: () => Promise<unknown>, _context: any) => this.schedule(name, timing, f);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    unschedule(func: () => Promise<unknown>) {\n        for (const task of this.tasks) {\n            if (task.func == func) {\n                this.tasks.delete(task);\n\n                break;\n            }\n        }\n    }\n\n    async run(): Promise<void> {\n        let start = Date.now();\n        let timings: InitTask[][] = [];\n\n        for (const task of this.tasks) {\n            timings[task.timing] = timings[task.timing] || [];\n\n            timings[task.timing].push(task);\n        }\n\n        for (const timing of timings) {\n            console.log(\"InitDispatcher: Beginning tasks of Timing.\" + timing[0].timing + \" in parallel.\");\n\n            await new Promise<void>((resolve) => {\n                let resolved = 0;\n\n                for (const task of timing) {\n                    task.func().then(() => {\n                        resolved++;\n\n                        if (resolved == timing.length) {\n                            resolve();\n                        }\n                    });\n                }\n            });\n        }\n\n        let end = Date.now();\n\n        console.log(\"Game started in \" + (end - start) + \"ms.\");\n    }\n}\n\nclass InitTask {\n    constructor(\n        public name: string,\n        public func: () => Promise<unknown>,\n        public timing: InitDispatcher.Timing\n    ) {}\n}\n\nexport namespace InitDispatcher {\n    export enum Timing {\n        Cache = \"Cache\",\n        Instantiate = \"Instantiate\",\n        Register = \"Register\",\n        Build = \"Build\"\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\n\nexport abstract class Vector2D {\n    x: number;\n    y: number;\n\n    constructor(x = 0, y = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n\n        this.x = x;\n        this.y = y;\n    }\n\n    abstract _set(x: number, y: number): Vector2D;\n\n    add(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x + x, this.y + y);\n            } else {\n                return this._set(this.x + x, this.y + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y);\n        }\n    }\n\n    subtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x - x, this.y - y);\n            } else {\n                return this._set(this.x - x, this.y - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y);\n        }\n    }\n\n    reverseSubtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x - this.x, y - this.y);\n            } else {\n                return this._set(x - this.x, x - this.y);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y);\n        }\n    }\n\n    complexMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x);\n        }\n    }\n\n    scalarMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x, this.y * y);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y);\n        }\n    }\n\n    scalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x / x, this.y / y);\n            } else {\n                return this._set(this.x / x, this.y / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x / this.x, y / this.y);\n            } else {\n                return this._set(x / this.x, x / this.y);\n            }\n        } else {\n            return this._set(x.x / this.x, x.y / this.y);\n        }\n    }\n\n    dot(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.x * x + this.y * y;\n            } else {\n                return this.x * x + this.y * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return (this.x - x) * (this.x - x) + (this.y - y) * (this.y - y);\n            } else {\n                return (this.x - x) * (this.x - x) + (this.y - x) * (this.y - x);\n            }\n        } else {\n            return (this.x - x.x) * (this.x - x.x) + (this.y - x.y) * (this.y - x.y);\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    clone() {\n        return new (this.constructor as (new (x: number, y: number) => typeof this))(this.x, this.y);\n    }\n\n    static *_from(vector: Vector3D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == 'z' ? vector.z : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == 'z' ? vector.z : format[1] == '1' ? 1 : 0;\n    }\n\n    equals(other: Vector2D) {\n        return this.x === other.x && this.y === other.y;\n    }\n}","import { Vector3D } from \"../vector3d/vector3d.js\";\nimport { Vector2D } from \"./vector2d.js\";\n\nexport class ImmutableVector2D extends Vector2D {\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n    }\n\n    _set(x: number, y: number): ImmutableVector2D {\n        return new ImmutableVector2D(x, y);\n    }\n\n    private set(x: number | Vector2D, y?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector3D, format: string) {\n        return new ImmutableVector2D(...Vector2D._from(vector, format));\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { HandleableVector3D } from \"./handleable-vector3d.js\";\nimport { ImmutableVector3D } from \"./immutable-vector3d.js\";\nimport { MutableVector3D } from \"./mutable-vector3d.js\";\n\nexport abstract class Vector3D {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x = 0, y = 0, z = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (typeof z !== 'number') throw new TypeError('z must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n        if (isNaN(z)) throw new TypeError('z must not be NaN');\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    abstract _set(x: number, y: number, z: number): Vector3D;\n\n    add(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x + x, this.y + y, this.z + z);\n            } else {\n                return this._set(this.x + x, this.y + x, this.z + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y, this.z + x.z);\n        }\n    }\n\n    subtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x - x, this.y - y, this.z - z);\n            } else {\n                return this._set(this.x - x, this.y - x, this.z - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y, this.z - x.z);\n        }\n    }\n\n    reverseSubtract(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(x - this.x, y - this.y, z - this.z);\n            } else {\n                return this._set(x - this.x, x - this.y, x - this.z);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y, x.z - this.z);\n        }\n    }\n\n    complexMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x, this.z * x.z);\n        }\n    }\n\n    scalarMultiply(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x * x, this.y * y, this.z * z);\n            } else {\n                return this._set(this.x * x, this.y * x, this.z * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y, this.z * x.z);\n        }\n    }\n\n    scalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(this.x / x, this.y / y, this.z / z);\n            } else {\n                return this._set(this.x / x, this.y / x, this.z / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y, this.z / x.z);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this._set(x / this.x, y / this.y, this.z / z);\n            } else if (typeof z == 'number') {\n                return this._set(x / this.x, x / this.y, this.z / z);\n            } else {\n                throw new Error(\"Invalid syntax\");\n            }\n        } else if (typeof z == 'number') {\n            return this._set(x.x / this.x, x.y / this.y, x.z / this.z);\n        }\n    }\n\n    dot(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return this.x * x + this.y * y + this.z * z;\n            } else {\n                return this.x * x + this.y * x + this.z * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y + this.z * x.z;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y, z));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y, x.z));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector3D, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number' && typeof z === 'number') {\n                return (this.x - x) ** 2 + (this.y - y) ** 2 + (this.z - z) ** 2;\n            } else {\n                return (this.x - x) ** 2 + (this.y - x) ** 2 + (this.z - x) ** 2;\n            }\n        } else {\n            return (this.x - x.x) ** 2 + (this.y - x.y) ** 2 + (this.z - x.z) ** 2;\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    clone() {\n        return new (this.constructor as new (x: number, y: number, z: number) => Vector3D)(this.x, this.y, this.z);\n    }\n\n    static *_from(vector: Vector2D, format: string) {\n        yield format[0] == 'x' ? vector.x : format[0] == 'y' ? vector.y : format[0] == '1' ? 1 : 0;\n        yield format[1] == 'x' ? vector.x : format[1] == 'y' ? vector.y : format[1] == '1' ? 1 : 0;\n        yield format[2] == 'x' ? vector.x : format[2] == 'y' ? vector.y : format[2] == '1' ? 1 : 0;\n    }\n\n    equals(other: Vector3D) {\n        return this.x == other.x && this.y == other.y && this.z == other.z;\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class ImmutableVector3D extends Vector3D {\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n    }\n\n    _set(x: number, y: number, z: number): ImmutableVector3D {\n        return new ImmutableVector3D(x, y, z);\n    }\n\n    private set(x: number | Vector3D, y?: number, z?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n\n    static from(vector: Vector2D, format: string) {\n        return new ImmutableVector3D(...Vector3D._from(vector, format));\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\nimport { Vector3D } from \"./vector3d.js\";\n\nexport class MutableVector3D extends Vector3D {\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        super(x, y, z);\n    }\n\n    _set(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    static from(vector: Vector2D, format: string) {\n        return new MutableVector3D(...Vector3D._from(vector, format));\n    }\n}","import { ImmutableVector3D } from \"../../utils/vector3d/immutable-vector3d.js\";\nimport { MutableVector3D } from \"../../utils/vector3d/mutable-vector3d.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\n\n/**\n * A `ChunkDataReferencer` converts between indexes and\n * positions in chunk data for given chunk dimensions.\n * \n * * The `index()` method converts a position to an\n * index in chunk data.\n * * The `position()` method converts an index in chunk\n * data to a position, based on the underlying `x()`,\n * `y()`, and `z()` methods.\n * * The `dimensions` property is a 3D vector containing\n * the dimensions of the chunk.\n * * The `cells` property is the total number of cells\n * in a chunk, equal to `dimensions.x * dimensions.y *\n * dimensions.z`.\n */\nexport abstract class ChunkDataReferencer {\n    /**\n     * The dimensions of the chunk as a 3D vector.\n     */\n    static dimensions: Vector3D = new ImmutableVector3D(8, 8, 32);\n\n    /**\n     * Returns the total number of cells in a chunk.\n     */\n    static get cells() {\n        return this.dimensions.x * this.dimensions.y * this.dimensions.z;\n    }\n\n    /**\n     * Computes the chunk data index for a given\n     * position, where any block position will have a\n     * different index from 0 to the total number of\n     * cells in a chunk minus 1.\n     * \n     * The method is the opposite of `position()`.\n     */\n    static index(x: number, y: number, z: number): number;\n    static index(x: Vector3D): number;\n    static index(x: number | Vector3D, y?: number, z?: number): number {\n        if (x instanceof Vector3D) {\n            y = x.y;\n            z = x.z;\n            x = x.x;\n        } else {\n            if (y === undefined || z === undefined) throw new Error(`Invalid arguments`);\n        }\n\n        if (x < 0 || x >= this.dimensions.x || y < 0 || y >= this.dimensions.y || z < 0 || z >= this.dimensions.z) throw new Error(`Coordinates are out of bounds`);\n\n        return x + y * this.dimensions.x + z * this.dimensions.x * this.dimensions.y;\n    }\n\n    /**\n     * Computes the x position of a specified chunk\n     * data index. This can be used with the `y()` and\n     * `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    static x(index: number): number {\n        return index % this.dimensions.x;\n    }\n\n    /**\n     * Computes the y position of a specified chunk\n     * data index. This can be used with the `x()`\n     * and `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    static y(index: number): number {\n        return Math.floor(index / this.dimensions.x) % this.dimensions.y;\n    }\n\n    /**\n     * Computes the z position of a specified chunk\n     * data index. This can be used with the `x()` and\n     * `y()` methods to get the complete position\n     * without creating a vector.\n     */\n    static z(index: number): number {\n        return Math.floor(index / (this.dimensions.x * this.dimensions.y));\n    }\n\n    /**\n     * Computes the position of a specified chunk data\n     * index. Equivalent to calling `x()`, `y()`, and\n     * `z()`, then assembling a `Vector3D` from the\n     * components.\n     * \n     * The method is the opposite of `index()`.\n     */\n    static position(index: number): Vector3D {\n        return new MutableVector3D(this.x(index), this.y(index), this.z(index));\n    }\n}","import { ChunkDataFieldAllocation } from \"../world/chunk-data/chunk-data-field-allocation.js\";\nimport { BlockPrototypeRegistry } from \"../world/prototype/block-prototype-registry.js\";\nimport { EntityPrototype } from \"../world/prototype/entity-prototype.js\";\n\nexport class Registry<T> {\n    private data: Map<string, T>;\n\n    constructor() {\n        this.data = new Map();\n    }\n\n    entries() {\n        return this.data.entries();\n    }\n\n    get(identifier: string) {\n        return this.data.get(identifier);\n    }\n\n    register(identifier: string, object: T) {\n        this.data.set(identifier, object);\n    }\n}","import { Registry } from \"../../game/registry.js\";\nimport { BlockPrototype } from \"./block-prototype.js\";\n\nexport class BlockPrototypeRegistry extends Registry<BlockPrototype> {\n    private idsToPrototypes: Map<number, BlockPrototype>;\n\n    get(id: string | number) {\n        if (typeof id == 'string') return super.get(id);\n\n        return this.idsToPrototypes.get(id);\n    }\n\n    async allocateBlockIds() {\n        this.idsToPrototypes = new Map();\n\n        let id = 0;\n\n        for (const [ name, block ] of this.entries()) {\n            block.bindBlockReferences(id, name);\n            this.idsToPrototypes.set(id, block);\n\n            id++;\n        }\n    }\n}","import { ChunkDataFieldAllocation } from \"../world/chunk-data/chunk-data-field-allocation.js\";\nimport { BlockPrototypeRegistry } from \"../world/prototype/block-prototype-registry.js\";\nimport { EntityPrototype } from \"../world/prototype/entity-prototype.js\";\nimport { Registry } from \"./registry.js\";\n\nexport namespace Registries {\n    export const blocks = new BlockPrototypeRegistry();\n    export const entities = new Registry<EntityPrototype<any>>();\n    export const fields = new Registry<ChunkDataFieldAllocation<any>>();\n\n}","import { Registries } from \"../../game/registries.js\";\nimport { Registry } from \"../../game/registry.js\";\nimport { ChunkDataField } from \"../chunk-data/chunk-data-field.js\";\n\n/**\n * The ChunkDataFields allows multiple fields to be allocated\n * before creating chunks.\n * \n * * Fields may be allocated in the `Registry.Fields` map.\n * * A map of `ChunkDataField` objects can be instantiated\n * using the `initialize()` method.\n */\nexport namespace ChunkDataFields {\n    export function initialize(): Map<string, ChunkDataField<any>> {\n        const fields = new Map<string, ChunkDataField<any>>();\n\n        for (const [ id, field ] of Registries.fields.entries()) {\n            fields.set(id, field.instantiate());\n        }\n\n        return fields;\n    }\n}","import { Game } from \"../../game/game.js\";\nimport { BlockPosition } from \"./block-position.js\";\n\nexport abstract class BlockPrototype {\n    abstract bindGame(game: Game): void;\n\n    abstract getBlockId(): number;\n    abstract getBlockName(): string;\n    \n    abstract bindBlockReferences(id: number, name: string): void;\n\n    abstract instantiate(position: BlockPosition): void;\n\n    abstract whenDestroyed(position: BlockPosition): void;\n    abstract whenUsed(position: BlockPosition): void;\n    abstract whenPlaced(position: BlockPosition): void;\n    abstract whenTicked(position: BlockPosition): void;\n}","import { ImmutableVector2D } from \"../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { ImmutableVector3D } from \"../../utils/vector3d/immutable-vector3d.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { World } from \"../world.js\";\n\nexport class BlockPosition {\n    private position: Vector3D;\n    private reference: World | ChunkData;\n\n    constructor(position: Vector3D, reference: World);\n    constructor(position: Vector3D, reference: ChunkData);\n    constructor(x: number, y: number, z: number, reference: World);\n    constructor(x: number, y: number, z: number, reference: ChunkData);\n    constructor(x: Vector3D | number, y: World | ChunkData | number, z?: number, reference?: World | ChunkData) {\n        if (x instanceof Vector3D) {\n            if (y instanceof World || y instanceof ChunkData) {\n                this.position = x;\n                this.reference = y;\n            } else {\n                throw new Error(\"Invalid arguments\");\n            }\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof World) {\n            this.position = new ImmutableVector3D(x, y, z);\n            this.reference = reference;\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof ChunkData) {\n            this.position = new ImmutableVector3D(x, y, z);\n            this.reference = reference;\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getGlobalPosition(): Vector3D {\n        if (this.reference instanceof World) {\n            return this.position.clone();\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            const position = chunk.getPosition();\n\n            return this.position.clone().add(ImmutableVector3D.from(position, \"x0y\"));\n        }\n    }\n\n    getLocalPosition(): Vector3D {\n        if (this.reference instanceof ChunkData) {\n            return this.position.clone();\n        } else {\n            return this.position.clone().subtract(ImmutableVector3D.from(this.getChunkPosition(), 'x0y'));\n        }\n    }\n\n    getChunkPosition(): Vector2D {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            return chunk.getPosition();\n        } else {\n            const chunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n            const chunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n            return new ImmutableVector2D(chunkX, chunkZ);\n        }\n    }\n\n    getWorld(): World {\n        if (this.reference instanceof World) {\n            return this.reference;\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get world of disconnected ChunkData\");\n            }\n            \n            return chunk.getWorld();\n        }\n    }\n\n    getChunkData(): ChunkData {\n        if (this.reference instanceof ChunkData) {\n            return this.reference;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk data of disconnected world\");\n            }\n\n            return chunk.getChunkData();\n        }\n    }\n\n    getChunk(): ChunkInterface {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk of disconnected ChunkData\");\n            }\n\n            return chunk;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk not in world\");\n            }\n\n            return chunk;\n        }\n    }\n}","import { Chunk } from \"../chunk.js\";\nimport { Entity } from \"../entity.js\";\nimport { ChunkDataFields } from \"../prototype/chunk-data-fields.js\";\nimport { ChunkDataField } from \"./chunk-data-field.js\";\nimport { BlockPrototype } from \"../prototype/block-prototype.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { Vector3D } from \"../../utils/vector3d/vector3d.js\";\n\nexport class ChunkData {\n    private chunk: Chunk | null = null;\n    private fields: Map<string, ChunkDataField<any>>;\n    private entities: Set<Entity> = new Set();\n\n    constructor() {\n        this.fields = ChunkDataFields.initialize();\n    }\n\n    getEntities(): Set<Entity> {\n        return new Set(...this.entities.entries());\n    }\n\n    getChunk(): Chunk | null {\n        return this.chunk;\n    }\n\n    addEntity(entity: Entity): void {\n        this.entities.add(entity);\n    }\n\n    removeEntity(entity: Entity): void {\n        this.entities.delete(entity);\n    }\n\n    getField(id: string): ChunkDataField<any> {\n        if (!this.fields.has(id)) {\n            throw new Error(`Field id '${id}' is not allocated`);\n        }\n\n        return this.fields.get(id) as ChunkDataField<any>;\n    }\n\n    getBlock(position: BlockPosition): BlockPrototype;\n    getBlock(position: Vector3D): BlockPrototype;\n    getBlock(x: number, y: number, z: number): BlockPrototype;\n    getBlock(x: BlockPosition | Vector3D | number, y?: number, z?: number): BlockPrototype {\n        if (x instanceof BlockPosition) {\n            return this.getField('blockId').get(x.getGlobalPosition());\n        } else if (x instanceof Vector3D) {\n            return this.getField('blockId').get(x);\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number') {\n            return this.getField('blockId').get(x, y, z);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    setBlock(position: BlockPosition, block: BlockPrototype): void;\n    setBlock(position: Vector3D, block: BlockPrototype): void;\n    setBlock(x: number, y: number, z: number, block: BlockPrototype): void;\n    setBlock(x: BlockPosition | Vector3D | number, y: BlockPrototype | number, z?: number, block?: BlockPrototype): void {\n        if (x instanceof BlockPosition && y instanceof BlockPrototype) {\n            this.setBlock(x.getGlobalPosition(), y);\n        } else if (x instanceof Vector3D && y instanceof BlockPrototype) {\n            this.getField('blockId').set(x, y);\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && block instanceof BlockPrototype) {\n            this.getField('blockId').set(x, y, z, block);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { World } from \"./world.js\";\n\nexport abstract class ChunkInterface {\n    abstract getPosition(): Vector2D;\n\n    abstract isPlaceholder(): boolean;\n\n    abstract getWorld(): World ;\n    abstract bindWorld(world: World, position: Vector2D): void;\n    \n    abstract getChunkData(): ChunkData;\n\n    unloadChunk() {}\n    setupChunk() {}\n    tickChunk() {}\n}\n\nexport namespace ChunkInterface {\n    export abstract class NonPlaceholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        abstract getChunkData(): ChunkData;\n        isPlaceholder(): false { return false; }\n    }\n\n    export abstract class Placeholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        isPlaceholder(): true { return true; }\n    }\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { World } from \"./world.js\";\n\nexport class Chunk extends ChunkInterface.NonPlaceholder {\n    private position: ImmutableVector2D;\n    private world: World | null = null;\n    private chunkData: ChunkData;\n\n    constructor() {\n        super();\n        \n        this.position = new ImmutableVector2D();\n    }\n\n    setChunkData(chunkData: ChunkData): void {\n        this.chunkData = chunkData;\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World {\n        if (!this.world) throw new Error(\"Cannot get world of unbound chunk\");\n\n        return this.world;\n    }\n\n    getChunkData(): ChunkData {\n        return this.chunkData;\n    }\n\n    bindWorld(world: World, position: Vector2D) {\n        this.world = world;\n        this.position = new ImmutableVector2D(position.x, position.y);\n    }\n\n    unloadChunk() {\n        if (!this.world) throw new Error(\"Cannot unload unbound chunk\");\n\n        for (const entity of this.chunkData.getEntities()) {\n            this.world.entityIdMapping.delete(entity.id);\n        }\n    }\n\n    setupChunk() {\n        if (!this.world) throw new Error(\"Cannot setup unbound chunk\");\n\n        this.chunkData = new ChunkData();\n    }\n\n    tickChunk() {\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { World } from \"./world.js\";\n\nexport class PlaceholderChunk extends ChunkInterface.Placeholder {\n    private position: Vector2D;\n    private world: World | null;\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World {\n        if (!this.world) throw new Error(\"Cannot get world of unbound chunk\");\n\n        return this.world;\n    }\n\n    getChunkData(): ChunkData {\n        throw new Error(\"Chunk data does not exist on placeholder\");\n    }\n\n    bindWorld(world: World, position: Vector2D): void {\n    }\n\n    unloadChunk(): void {}\n    setupChunk(): void {}\n    tickChunk(): void {}\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkDataReferencer } from \"./chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { Chunk } from \"./chunk.js\";\nimport { Entity } from \"./entity.js\";\nimport { PlaceholderChunk } from \"./placeholder-chunk.js\";\nimport { WorldLoader } from \"./world-loader.js\";\n\nexport class World {\n    entityIdMapping: Map<string, Entity>;\n    private chunks: Map<string, ChunkInterface>;\n    private loader: WorldLoader;\n\n    constructor() {\n        this.entityIdMapping = new Map();\n        this.chunks = new Map();\n    }\n\n    bindWorldLoader(loader: WorldLoader) {\n        this.loader = loader;\n    }\n\n    createChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n\n        const chunk = new Chunk();\n\n        chunk.bindWorld(this, new ImmutableVector2D(x, z));\n        chunk.setupChunk();\n\n        return chunk;\n    }\n\n    getChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n        \n        return this.chunks.get(x + '.' + z) || null;\n    }\n\n    addEntity(entity: Entity) {\n        this.entityIdMapping.set(entity.id, entity);\n\n        const chunk = this.getChunk(\n            Math.floor(entity.position.x / ChunkDataReferencer.dimensions.x),\n            Math.floor(entity.position.z / ChunkDataReferencer.dimensions.z)\n        );\n\n        if (!chunk) {\n            throw new Error(\"Cannot add entity to world: Chunk does not exist\");\n        }\n\n        entity._joinWorld(this);\n\n        if (!chunk.isPlaceholder()) {\n            chunk.getChunkData().addEntity(entity);\n            entity._updateCurrentChunk(null);\n        } else {\n            entity._updateCurrentChunk(chunk as ChunkInterface.NonPlaceholder);\n        }\n\n        return entity;\n    }\n\n    removeEntity(entity: Entity) {\n        entity._leaveWorld();\n\n        this.entityIdMapping.delete(entity.id);\n    }\n\n    _validateDisconnectedEntities() {\n        for (const entity of this.entityIdMapping.values()) {\n            if (!entity.chunk) {\n                console.warn(\"Entity is not in a chunk\\n\", entity);\n            }\n        }\n    }\n\n    tick() {\n        for (const entity of this.entityIdMapping.values()) {\n            entity.tick();\n        }\n\n        for (const [ _id, chunk ] of this.chunks) {\n            chunk.tickChunk();\n        }\n\n        this._validateDisconnectedEntities();\n    }\n\n    loadChunk(x: number, z: number): ChunkInterface.Placeholder;\n    loadChunk(position: Vector2D): ChunkInterface.Placeholder;\n    loadChunk(x: Vector2D | number, z?: number): ChunkInterface.Placeholder {\n        let position: Vector2D;\n\n        if (typeof x === 'number') {\n            if (typeof z !== 'number') {\n                throw new Error(\"Invalid arguments\");\n            } else {\n                position = new ImmutableVector2D(x, z);\n            }\n        } else {\n            position = new ImmutableVector2D(x.x, x.y);\n        }\n\n        if (this.getChunk(position)) {\n            throw new Error(\"Cannot load chunk where another chunk already exists\");\n        }\n\n        if (!this.loader) {\n            throw new Error(\"Cannot load chunk: World has no loader\");\n        }\n\n        const placeholder = new PlaceholderChunk();\n\n        this.chunks.set(position.x + '.' + position.y, placeholder);\n\n        this.loader.loadChunk(position).then(chunkData => {\n            const chunk = new Chunk();\n\n            chunk.bindWorld(this, position);\n            chunk.setChunkData(chunkData);\n\n            this.chunks.set(position.x + '.' + position.y, chunk);\n\n            for (const entity of this.entityIdMapping.values()) {\n                if (!entity.chunk) continue;\n\n                if (entity.chunk.getPosition().equals(position)) {\n                    entity._updateCurrentChunk(chunk);\n                }\n            }\n        });\n\n        return new PlaceholderChunk();\n    }\n}","import { Vector3D } from \"../../utils/vector3d/vector3d.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\nimport { ChunkData } from \"./chunk-data.js\";\n\n/**\n * A ChunkDataField is an object where data for each\n * block in a chunk can be contained.\n */\nexport abstract class ChunkDataField<RepresentedType> {\n    /**\n     * Gets the value of the field at a given position.\n     */\n    get(position: BlockPosition): RepresentedType;\n    get(position: Vector3D): RepresentedType;\n    get(index: number): RepresentedType;\n    get(x: number, y: number, z: number): RepresentedType;\n    get(x: number | Vector3D | BlockPosition, y?: number, z?: number): RepresentedType {\n        if (typeof x == 'number' && typeof y == 'undefined') {\n            return this._get(x);\n        } else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            return this._get(ChunkDataReferencer.index(x, y, z));\n        } else if (x instanceof Vector3D) {\n            return this._get(ChunkDataReferencer.index(x));\n        } else if (x instanceof BlockPosition) {\n            return this.get(x.getLocalPosition());\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    /**\n     * Sets the value of the field at a given position.\n     */\n    set(position: BlockPosition, value: RepresentedType): void;\n    set(position: Vector3D, value: RepresentedType): void;\n    set(index: number, value: RepresentedType): void;\n    set(x: number, y: number, z: number, value: RepresentedType): void;\n    set(x: Vector3D | BlockPosition | number, y: RepresentedType | number, z?: number, value?: RepresentedType): void {\n        if (typeof x == 'number' && typeof y != 'number') {\n            return this._set(x, y);\n        } else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number' && typeof value != 'undefined') {\n            return this._set(ChunkDataReferencer.index(x, y, z), value);\n        } else if (x instanceof Vector3D && typeof y != 'number') {\n            return this._set(ChunkDataReferencer.index(x), y);\n        } else if (x instanceof BlockPosition && typeof y != 'number') {\n            return this._set(ChunkDataReferencer.index(x.getLocalPosition()), y);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    abstract _get(index: number): RepresentedType;\n    abstract _set(index: number, value: RepresentedType): void;\n}","import { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\nimport { TypedArray } from \"./typed-array.js\";\n\n/**\n * Represents a field for any size of `number`.\n */\nexport class ChunkDataNumberField extends ChunkDataField<number> {\n    array: TypedArray;\n\n    constructor(public type: ChunkDataNumberType) {\n        super();\n\n        this.array = ChunkDataNumberField.typedArray(type, ChunkDataReferencer.cells);\n    }\n\n    _get(index: number): number {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const item = this.array[Math.floor(index / 2)] as number;\n\n            if (index % 2 == 0) {\n                return item & 0x0F;\n            } else {\n                return item >> 4;\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            return Number(this.array[index] as bigint);\n        } else {\n            return this.array[index] as number;\n        }\n    }\n\n    _set(index: number, value: number) {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const itemIndex = Math.floor(index / 2);\n            const item = this.array[itemIndex] as number;\n\n            if (index % 2 == 0) {\n                this.array[itemIndex] = (item & 0xF0) | value;\n            } else {\n                this.array[itemIndex] = (item & 0x0F) | (value << 4);\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            this.array[index] = BigInt(value);\n        \n        } else {\n            this.array[index] = value;\n        }\n    }\n\n    /**\n     * Create a typed array of a given `ChunkDataNumberType` and length.\n     */\n    static typedArray(type: ChunkDataNumberType, length: number): TypedArray {\n        if (type == \"u4\") return new Uint8Array(length / 2);\n        if (type == \"u8\") return new Uint8Array(length);\n        if (type == \"u16\") return new Uint16Array(length);\n        if (type == \"u32\") return new Uint32Array(length);\n        if (type == \"u64\") return new BigUint64Array(length);\n        if (type == \"i8\") return new Int8Array(length);\n        if (type == \"i16\") return new Int16Array(length);\n        if (type == \"i32\") return new Int32Array(length);\n        if (type == \"i64\") return new BigInt64Array(length);\n        if (type == \"f32\") return new Float32Array(length);\n        if (type == \"f64\") return new Float64Array(length);\n\n        throw new Error(`Unknown array type: ${type}`);\n    }\n}","import { ChunkDataFieldAllocation } from \"./chunk-data-field-allocation.js\";\nimport { ChunkDataNumberField } from \"./chunk-data-number-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\n\n/**\n * Represents an allocation of a field for any size of `number`.\n */\nexport class ChunkDataNumberAllocation implements ChunkDataFieldAllocation<number> {\n    /**\n     * Constructs a new `ChunkDataNumberAllocation`\n     * object with a given number type, represented\n     * as a `ChunkDataNumberType`.\n     */\n    constructor(public type: ChunkDataNumberType) {\n    }\n\n    instantiate() {\n        return new ChunkDataNumberField(this.type);\n    }\n}","import { Registries } from \"../../game/registries.js\";\nimport { Registry } from \"../../game/registry.js\";\nimport { InstanceReferencer } from \"../../render/webgpu/model/instance-referencer.js\";\nimport { ChunkDataNumberAllocation } from \"../chunk-data/chunk-data-number-allocation.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\n\n/**\n * A `ChunkInstanceReferencer` stores the address in GPU memory of each represented block in a chunk.\n * It also specifies the GPU data that should be sent to the GPU for each block (for now, just the position).\n */\nexport class ChunkInstanceReferencer implements InstanceReferencer {\n    getChunkSize(): number {\n        return ChunkDataReferencer.cells;\n    }\n\n    getGPUDataSize(): number {\n        return 2;\n    }\n\n    getGPUData(chunk: ChunkInterface.NonPlaceholder, index: number): ArrayBuffer {\n        if (!chunk.getWorld()) throw new Error(\"Rendered chunks should be in a world\");\n\n        const array = new Uint16Array([ index ]);\n\n        return array.buffer;\n    }\n\n    getAddress(chunk: ChunkInterface.NonPlaceholder, index: number): number {\n        if (!chunk.getWorld()) throw new Error(\"Rendered chunks should be in a world\");\n\n        const field = chunk.getChunkData().getField('instance_address');\n\n        if (!field) {\n            throw new Error(\"Instance address field not found.\");\n        }\n\n        return field.get(\n                ChunkDataReferencer.x(index),\n                ChunkDataReferencer.y(index),\n                ChunkDataReferencer.z(index)\n            );\n    }\n\n    setAddress(chunk: ChunkInterface.NonPlaceholder, index: number, address: number): void {\n        const field = chunk.getChunkData().getField('instanceAddress');\n\n        if (!field) {\n            throw new Error(\"Instance address field not found.\");\n        }\n\n        field.set(\n            ChunkDataReferencer.x(index),\n            ChunkDataReferencer.y(index),\n            ChunkDataReferencer.z(index),\n            address\n        );\n    }\n\n    static async setup() {\n        Registries.fields.register('instanceAddress', new ChunkDataNumberAllocation('i16'));\n    }\n}","import { EventClock } from \"./event-clock.js\";\nimport { InitDispatcher } from \"./init-dispatcher.js\";\nimport { World } from \"../world/world.js\";\nimport { GameRuntimeType } from \"./game-runtime-type.js\";\nimport { Registry } from \"./registry.js\";\nimport { ChunkInstanceReferencer } from \"../world/block-fields/chunk-instance-referencer.js\";\nimport { Registries } from \"./registries.js\";\n\nexport abstract class Game {\n    static init = new InitDispatcher();\n    private static instance: Game;\n\n    private _world: World;\n    private _clock: EventClock = new EventClock();\n\n    constructor() {\n        this._world = new World();\n    }\n\n    async start() {\n        await Game.init.run();\n\n        Registries.blocks.allocateBlockIds();\n        ChunkInstanceReferencer.setup();\n    }\n    \n    abstract initGame(): void;\n    abstract getRuntimeType(): GameRuntimeType;\n\n    isGameClient(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerClient;\n    }\n\n    isGameServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isSingleplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer;\n    }\n\n    isMultiplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerClient || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isMultiplayerServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    getWorld(): World {\n        return this._world;\n    }\n\n    getClock(): EventClock {\n        return this._clock;\n    }\n\n    static _setMainInstance(instance: Game) {\n        Game.instance = instance;\n    }\n\n    static getInstance() {\n        return Game.instance;\n    }\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","export abstract class WorldRenderer {\n    abstract getCanvas(): HTMLCanvasElement;\n    abstract setRenderedWorld(world: any): void;\n    abstract setupRenderer(): Promise<void>;\n    abstract render(): void;\n}","import { Game } from \"../../game/game.js\";\nimport { InitDispatcher } from \"../../game/init-dispatcher.js\";\nimport { World } from \"../../world/world.js\";\nimport { WorldRenderer } from \"../abstract/world-renderer.js\";\n\nexport class WebGPURenderer extends WorldRenderer {\n    private canvas: HTMLCanvasElement;\n    private context: GPUCanvasContext;\n    private world: World;\n\n    getCanvas(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    setRenderedWorld(world: any): void {\n        this.world = world;\n    }\n\n    async setupRenderer(): Promise<void> {\n        if (!navigator.gpu) {\n            throw new Error('WebGPU is not supported');\n        }\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) {\n            throw new Error('No useable adapter found');\n        }\n\n        const device = await adapter.requestDevice();\n\n        this.canvas = document.createElement('canvas');\n        \n        this.context = this.canvas.getContext('webgpu') as GPUCanvasContext;\n\n        const format = navigator.gpu.getPreferredCanvasFormat();\n\n        this.context.configure({\n            device: device,\n            format: format\n        });\n    }\n\n    render(): void {\n        \n    }\n\n    private static supported = false;\n    \n    @Game.init.schedule(\"checkWebGPUSupport\", InitDispatcher.Timing.Cache)\n    private static async checkSupport() {\n        if (!navigator.gpu) {\n            throw new Error('WebGPU is not supported');\n        }\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) {\n            throw new Error('No useable adapter found');\n        }\n    }\n\n    static isSupported(): boolean {\n        return this.supported;\n    }\n}","import { World } from \"../world/world.js\";\nimport { WorldRenderer } from \"./abstract/world-renderer.js\";\nimport { Perspective } from \"./perspective.js\";\nimport { WebGPURenderer } from \"./webgpu/webgpu-renderer.js\";\n\nexport class Renderer {\n    private perspective: Perspective;\n    private worldRenderer: WorldRenderer | null;\n    private canvas: HTMLCanvasElement;\n\n    constructor(private world: World) {\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this.canvas;\n    }\n    \n    getWorld(): World {\n        return this.world;\n    }\n\n    getPerspective(): Perspective {\n        return this.perspective;\n    }\n\n    setupRenderer() {\n        if (WebGPURenderer.isSupported()) {\n            this.worldRenderer = new WebGPURenderer();\n        } else {\n            throw new Error(\"No supported world renderer found\");\n        }\n\n        this.worldRenderer.setupRenderer();\n        this.worldRenderer.setRenderedWorld(this.world);\n    }\n}","import { Registries } from \"../../game/registries.js\";\nimport { Registry } from \"../../game/registry.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../chunk-data/chunk-data.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { WorldGenerator } from \"./world-generator.js\";\n\nexport class SimpleWorldGenerator implements WorldGenerator {\n    async generateChunk(location: Vector2D): Promise<ChunkData> {\n        const data = new ChunkData();\n\n        const stone = Registries.blocks.get('stone');\n\n        if (!stone) {\n            throw new Error('Stone block prototype not found');\n        }\n\n        for (let x = 0; x < ChunkDataReferencer.dimensions.x; x++) {\n            for (let z = 0; z < ChunkDataReferencer.dimensions.z; z++) {\n                data.setBlock(x, 0, z, stone);\n            }\n        }\n\n        return data;\n    }\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"../world/chunk-data/chunk-data.js\";\nimport { WorldGenerator } from \"../world/world-generation/world-generator.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\n\nexport class SingleplayerWorldLoader implements WorldLoader {\n    constructor(private worldGenerator: WorldGenerator) {\n    }\n    \n    loadChunk(location: Vector2D): Promise<ChunkData> {\n        return this.worldGenerator.generateChunk(location);\n    }\n\n    saveChunk(location: Vector2D, chunk: ChunkData): Promise<void> {\n        return Promise.resolve();\n    }\n\n    shouldUnloadChunks(): boolean {\n        return false;\n    }\n}","import { GameRuntimeType } from \"../game/game-runtime-type.js\";\nimport { Game } from \"../game/game.js\";\nimport { Renderer } from \"../render/renderer.js\";\nimport { SimpleWorldGenerator } from \"../world/world-generation/simple-world-generator.js\";\nimport { WorldGenerator } from \"../world/world-generation/world-generator.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\nimport { SingleplayerWorldLoader } from \"./singleplayer-world-loader.js\";\n\nexport class Client extends Game {\n    private renderer: Renderer;\n    private worldGenerator: WorldGenerator;\n    private worldLoader: WorldLoader;\n\n    constructor() {\n        super();\n\n        this.worldGenerator = new SimpleWorldGenerator();\n        this.worldLoader = new SingleplayerWorldLoader(this.worldGenerator);\n        this.getWorld().bindWorldLoader(this.worldLoader);\n\n        this.renderer = new Renderer(this.getWorld());\n    }\n\n    getRenderer() {\n        return this.renderer;\n    }\n\n    getRuntimeType(): GameRuntimeType {\n        return GameRuntimeType.Singleplayer;\n    }\n\n    initGame(): void {\n        \n    }\n\n    async start() {\n        await super.start();\n\n        this.renderer.setupRenderer();\n    }\n}","import { Client } from \"./client.js\";\n\nconst client = new Client();\n\nawait client.start();\n\ndocument.body.appendChild(client.getRenderer().getCanvas());\n\nclient.start();"],"names":[],"mappings":"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","x_google_ignoreList":[25]}