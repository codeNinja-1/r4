{"version":3,"file":"client.js","sources":["../node_modules/murmurhash-js/murmurhash3_gc.js","../node_modules/murmurhash-js/murmurhash2_gc.js","../node_modules/murmurhash-js/index.js","../node_modules/simplex-noise/dist/esm/simplex-noise.js","../src/game/registry/registry.ts","../src/game/registry/indexed-registry.ts","../src/game/registry/registries.ts","../src/utils/math-utils.ts","../src/utils/vector2d/vector2d.ts","../src/utils/vector2d/immutable-vector2d.ts","../src/utils/vector3d/vector3.ts","../src/world/chunk-data/chunk-data-referencer.ts","../src/game/registry/indexed-registry-item.ts","../src/world/prototype/block-prototype.ts","../src/world/prototype/chunk-data-fields.ts","../src/world/chunk-data/chunk-data.ts","../src/world/chunk-interface.ts","../src/world/base-chunk.ts","../src/world/placeholder-chunk.ts","../src/world/world-generation/chunk-load-queue.ts","../src/world/world.ts","../src/world/prototype/block-position.ts","../src/world/chunk-data/chunk-data-field.ts","../src/world/chunk-data/chunk-data-number-field.ts","../src/world/chunk-data/chunk-data-number-allocation.ts","../src/world/world-generation/noise-utils.ts","../src/content/worldgen/feature.ts","../src/content/worldgen/semiloaded-chunk.ts","../src/content/worldgen/tree-feature.ts","../src/content/worldgen/loaded-chunk.ts","../src/content/worldgen/rock-feature.ts","../src/content/worldgen/simple-world-generator.ts","../src/game/event-clock-viewer.ts","../src/game/game-runtime-type.ts","../src/world/prototype/base-block-prototype.ts","../src/content/block/air/air-prototype.ts","../src/render/utils/texture.ts","../src/utils/data-utils.ts","../src/render/world/model/static/block-model.ts","../src/render/world/model/static/component/box-model-component.ts","../src/content/block/cobblestone/cobblestone-prototype.ts","../src/content/block/dirt/dirt-prototype.ts","../src/content/block/grass/grass-prototype.ts","../src/content/block/leaves/leaves-prototype.ts","../src/utils/quaternion/quaterion.ts","../src/utils/rotation/rotation.ts","../src/render/world/model/static/component/empty-model-component.ts","../src/render/world/model/static/component/rotated-model-component.ts","../src/utils/matrix/matrix3.ts","../src/utils/rotation/orientation.ts","../src/utils/rotation/axis.ts","../src/content/block/log/log-prototype.ts","../src/content/block/stone/stone-prototype.ts","../src/world/prototype/base-entity-prototype.ts","../src/physics/entity/entity-physics.ts","../src/physics/entity/physical-entity-state.ts","../src/physics/model/component/physical-component.ts","../src/physics/model/component/box-physical-component.ts","../src/physics/model/physical-hitbox.ts","../src/physics/model/physical-model.ts","../src/world/entity/base-entity.ts","../src/content/entity/player/player-entity.ts","../src/content/entity/player/player-prototype.ts","../src/content/content.ts","../src/game/event-clock.ts","../src/game/init-dispatcher.ts","../src/game/game.ts","../src/render/utils/color.ts","../src/utils/matrix/matrix4.ts","../src/render/world/pespective/projector.ts","../src/render/world/implementation/webgpu/bindings/bind-group-manager.ts","../src/render/world/implementation/webgpu/bindings.ts","../src/render/world/implementation/webgpu/bindings/bind-group.ts","../src/render/world/implementation/webgpu/bindings/base-bind-group-entry.ts","../src/render/world/implementation/webgpu/bindings/buffer-bind-group-entry.ts","../src/render/world/implementation/webgpu/camera.ts","../src/render/world/implementation/webgpu/depth-texture.ts","../src/render/world/implementation/webgpu/graphics-device.ts","../src/render/world/implementation/webgpu/multisample-texture.ts","../src/render/world/implementation/webgpu/pass/clear-render-pass.ts","../src/render/world/implementation/webgpu/bindings/texture-sampler.ts","../src/render/world/implementation/webgpu/bindings/webgpu-texture.ts","../src/render/world/implementation/webgpu/buffer-alignment.ts","../src/render/world/implementation/webgpu/shader-module.ts","../src/render/world/implementation/webgpu/bindings/pipeline-bind-group-manager.ts","../src/render/world/implementation/webgpu/pass/base-render-pass.ts","../src/render/world/implementation/webgpu/pass/terrain-render-pass.ts","../src/render/world/mirror/render-world-mirror.ts","../src/render/world/terrain/assembled-mesh.ts","../src/render/world/terrain/mesh-assembler.ts","../src/render/world/instancing/instanced-data-segment.ts","../src/render/world/instancing/instanced-data.ts","../src/render/world/implementation/webgpu/webgpu-instanced-data.ts","../src/render/world/implementation/webgpu/webgpu-chunk-mirror.ts","../src/render/world/implementation/webgpu/webgpu-world-mirror.ts","../src/render/world/implementation/webgpu/webgpu-renderer.ts","../src/render/renderer.ts","../src/render/world/pespective/entity-perspective.ts","../src/client/entity-fly-controls.ts","../src/client/singleplayer-world-loader.ts","../src/client/client.ts","../src/client/main.ts"],"sourcesContent":["/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nif(typeof module !== \"undefined\") {\n  module.exports = murmurhash3_32_gc\n}","/**\n * JS Implementation of MurmurHash2\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var\n    l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n  \n  while (l >= 4) {\n  \tk = \n  \t  ((str.charCodeAt(i) & 0xff)) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 8) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 16) |\n  \t  ((str.charCodeAt(++i) & 0xff) << 24);\n    \n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    k ^= k >>> 24;\n    k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n\th = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n  \n  switch (l) {\n  case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n  case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n  case 1: h ^= (str.charCodeAt(i) & 0xff);\n          h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  }\n\n  h ^= h >>> 13;\n  h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nif(typeof module !== undefined) {\n  module.exports = murmurhash2_32_gc\n}\n","var murmur3 = require(\"./murmurhash3_gc.js\")\nvar murmur2 = require(\"./murmurhash2_gc.js\")\n\nmodule.exports = murmur3\nmodule.exports.murmur3 = murmur3\nmodule.exports.murmur2 = murmur2\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2022 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n// these #__PURE__ comments help uglifyjs with dead code removal\n// \nconst F2 = /*#__PURE__*/ 0.5 * (Math.sqrt(3.0) - 1.0);\nconst G2 = /*#__PURE__*/ (3.0 - Math.sqrt(3.0)) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = /*#__PURE__*/ (Math.sqrt(5.0) - 1.0) / 4.0;\nconst G4 = /*#__PURE__*/ (5.0 - Math.sqrt(5.0)) / 20.0;\n// I'm really not sure why this | 0 (basically a coercion to int)\n// is making this faster but I get ~5 million ops/sec more on the\n// benchmarks across the board or a ~10% speedup.\nconst fastFloor = (x) => Math.floor(x) | 0;\nconst grad2 = /*#__PURE__*/ new Float64Array([1, 1,\n    -1, 1,\n    1, -1,\n    -1, -1,\n    1, 0,\n    -1, 0,\n    1, 0,\n    -1, 0,\n    0, 1,\n    0, -1,\n    0, 1,\n    0, -1]);\n// double seems to be faster than single or int's\n// probably because most operations are in double precision\nconst grad3 = /*#__PURE__*/ new Float64Array([1, 1, 0,\n    -1, 1, 0,\n    1, -1, 0,\n    -1, -1, 0,\n    1, 0, 1,\n    -1, 0, 1,\n    1, 0, -1,\n    -1, 0, -1,\n    0, 1, 1,\n    0, -1, 1,\n    0, 1, -1,\n    0, -1, -1]);\n// double is a bit quicker here as well\nconst grad4 = /*#__PURE__*/ new Float64Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n    0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n    1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n    -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n    1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n    -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n    1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n    -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n/**\n * Creates a 2D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction2D}\n */\nexport function createNoise2D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating this yields a little ~3% performance improvement.\n    const permGrad2x = new Float64Array(perm).map(v => grad2[(v % 12) * 2]);\n    const permGrad2y = new Float64Array(perm).map(v => grad2[(v % 12) * 2 + 1]);\n    return function noise2D(x, y) {\n        // if(!isFinite(x) || !isFinite(y)) return 0;\n        let n0 = 0; // Noise contributions from the three corners\n        let n1 = 0;\n        let n2 = 0;\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y) * F2; // Hairy factor for 2D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const t = (i + j) * G2;\n        const X0 = i - t; // Unskew the cell origin back to (x,y) space\n        const Y0 = j - t;\n        const x0 = x - X0; // The x,y distances from the cell origin\n        const y0 = y - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        else {\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n        const y2 = y0 - 1.0 + 2.0 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            const gi0 = ii + perm[jj];\n            const g0x = permGrad2x[gi0];\n            const g0y = permGrad2y[gi0];\n            t0 *= t0;\n            // n0 = t0 * t0 * (grad2[gi0] * x0 + grad2[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n            n0 = t0 * t0 * (g0x * x0 + g0y * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            const gi1 = ii + i1 + perm[jj + j1];\n            const g1x = permGrad2x[gi1];\n            const g1y = permGrad2y[gi1];\n            t1 *= t1;\n            // n1 = t1 * t1 * (grad2[gi1] * x1 + grad2[gi1 + 1] * y1);\n            n1 = t1 * t1 * (g1x * x1 + g1y * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            const gi2 = ii + 1 + perm[jj + 1];\n            const g2x = permGrad2x[gi2];\n            const g2y = permGrad2y[gi2];\n            t2 *= t2;\n            // n2 = t2 * t2 * (grad2[gi2] * x2 + grad2[gi2 + 1] * y2);\n            n2 = t2 * t2 * (g2x * x2 + g2y * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70.0 * (n0 + n1 + n2);\n    };\n}\n/**\n * Creates a 3D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction3D}\n */\nexport function createNoise3D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these seems to yield a speedup of over 15%\n    const permGrad3x = new Float64Array(perm).map(v => grad3[(v % 12) * 3]);\n    const permGrad3y = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 1]);\n    const permGrad3z = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 2]);\n    return function noise3D(x, y, z) {\n        let n0, n1, n2, n3; // Noise contributions from the four corners\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const t = (i + j + k) * G3;\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const x0 = x - X0; // The x,y,z distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n        // Determine which simplex we are in.\n        let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n        let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // X Y Z order\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // X Z Y order\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // Z X Y order\n        }\n        else { // x0<y0\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Z Y X order\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Y Z X order\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // Y X Z order\n        }\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n        const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n        const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n        const y2 = y0 - j2 + 2.0 * G3;\n        const z2 = z0 - k2 + 2.0 * G3;\n        const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n        const y3 = y0 - 1.0 + 3.0 * G3;\n        const z3 = z0 - 1.0 + 3.0 * G3;\n        // Work out the hashed gradient indices of the four simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        // Calculate the contribution from the four corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad3x[gi0] * x0 + permGrad3y[gi0] * y0 + permGrad3z[gi0] * z0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad3x[gi1] * x1 + permGrad3y[gi1] * y1 + permGrad3z[gi1] * z1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad3x[gi2] * x2 + permGrad3y[gi2] * y2 + permGrad3z[gi2] * z2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + 1 + perm[jj + 1 + perm[kk + 1]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad3x[gi3] * x3 + permGrad3y[gi3] * y3 + permGrad3z[gi3] * z3);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to stay just inside [-1,1]\n        return 32.0 * (n0 + n1 + n2 + n3);\n    };\n}\n/**\n * Creates a 4D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction4D}\n */\nexport function createNoise4D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these leads to a ~10% speedup\n    const permGrad4x = new Float64Array(perm).map(v => grad4[(v % 32) * 4]);\n    const permGrad4y = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 1]);\n    const permGrad4z = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 2]);\n    const permGrad4w = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 3]);\n    return function noise4D(x, y, z, w) {\n        let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n        const s = (x + y + z + w) * F4; // Factor for 4D skewing\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const l = fastFloor(w + s);\n        const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const W0 = l - t;\n        const x0 = x - X0; // The x,y,z,w distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        const w0 = w - W0;\n        // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n        // To find out which of the 24 possible simplices we're in, we need to\n        // determine the magnitude ordering of x0, y0, z0 and w0.\n        // Six pair-wise comparisons are performed between each possible pair\n        // of the four coordinates, and the results are used to rank the numbers.\n        let rankx = 0;\n        let ranky = 0;\n        let rankz = 0;\n        let rankw = 0;\n        if (x0 > y0)\n            rankx++;\n        else\n            ranky++;\n        if (x0 > z0)\n            rankx++;\n        else\n            rankz++;\n        if (x0 > w0)\n            rankx++;\n        else\n            rankw++;\n        if (y0 > z0)\n            ranky++;\n        else\n            rankz++;\n        if (y0 > w0)\n            ranky++;\n        else\n            rankw++;\n        if (z0 > w0)\n            rankz++;\n        else\n            rankw++;\n        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n        // impossible. Only the 24 indices which have non-zero entries make any sense.\n        // We use a thresholding to set the coordinates in turn from the largest magnitude.\n        // Rank 3 denotes the largest coordinate.\n        // Rank 2 denotes the second largest coordinate.\n        // Rank 1 denotes the second smallest coordinate.\n        // The integer offsets for the second simplex corner\n        const i1 = rankx >= 3 ? 1 : 0;\n        const j1 = ranky >= 3 ? 1 : 0;\n        const k1 = rankz >= 3 ? 1 : 0;\n        const l1 = rankw >= 3 ? 1 : 0;\n        // The integer offsets for the third simplex corner\n        const i2 = rankx >= 2 ? 1 : 0;\n        const j2 = ranky >= 2 ? 1 : 0;\n        const k2 = rankz >= 2 ? 1 : 0;\n        const l2 = rankw >= 2 ? 1 : 0;\n        // The integer offsets for the fourth simplex corner\n        const i3 = rankx >= 1 ? 1 : 0;\n        const j3 = ranky >= 1 ? 1 : 0;\n        const k3 = rankz >= 1 ? 1 : 0;\n        const l3 = rankw >= 1 ? 1 : 0;\n        // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n        const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n        const y1 = y0 - j1 + G4;\n        const z1 = z0 - k1 + G4;\n        const w1 = w0 - l1 + G4;\n        const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n        const y2 = y0 - j2 + 2.0 * G4;\n        const z2 = z0 - k2 + 2.0 * G4;\n        const w2 = w0 - l2 + 2.0 * G4;\n        const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n        const y3 = y0 - j3 + 3.0 * G4;\n        const z3 = z0 - k3 + 3.0 * G4;\n        const w3 = w0 - l3 + 3.0 * G4;\n        const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n        const y4 = y0 - 1.0 + 4.0 * G4;\n        const z4 = z0 - 1.0 + 4.0 * G4;\n        const w4 = w0 - 1.0 + 4.0 * G4;\n        // Work out the hashed gradient indices of the five simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        const ll = l & 255;\n        // Calculate the contribution from the five corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk + perm[ll]]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad4x[gi0] * x0 + permGrad4y[gi0] * y0 + permGrad4z[gi0] * z0 + permGrad4w[gi0] * w0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad4x[gi1] * x1 + permGrad4y[gi1] * y1 + permGrad4z[gi1] * z1 + permGrad4w[gi1] * w1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad4x[gi2] * x2 + permGrad4y[gi2] * y2 + permGrad4z[gi2] * z2 + permGrad4w[gi2] * w2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad4x[gi3] * x3 + permGrad4y[gi3] * y3 + permGrad4z[gi3] * z3 + permGrad4w[gi3] * w3);\n        }\n        let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n        if (t4 < 0)\n            n4 = 0.0;\n        else {\n            const gi4 = ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]];\n            t4 *= t4;\n            n4 = t4 * t4 * (permGrad4x[gi4] * x4 + permGrad4y[gi4] * y4 + permGrad4z[gi4] * z4 + permGrad4w[gi4] * w4);\n        }\n        // Sum up and scale the result to cover the range [-1,1]\n        return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    };\n}\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nexport function buildPermutationTable(random) {\n    const tableSize = 512;\n    const p = new Uint8Array(tableSize);\n    for (let i = 0; i < tableSize / 2; i++) {\n        p[i] = i;\n    }\n    for (let i = 0; i < tableSize / 2 - 1; i++) {\n        const r = i + ~~(random() * (256 - i));\n        const aux = p[i];\n        p[i] = p[r];\n        p[r] = aux;\n    }\n    for (let i = 256; i < tableSize; i++) {\n        p[i] = p[i - 256];\n    }\n    return p;\n}\n//# sourceMappingURL=simplex-noise.js.map","export class Registry<T> {\n    private data: Map<string, T>;\n\n    constructor() {\n        this.data = new Map();\n    }\n\n    entries() {\n        return this.data.entries();\n    }\n\n    get(identifier: string) {\n        return this.data.get(identifier);\n    }\n\n    register(identifier: string, object: T) {\n        this.data.set(identifier, object);\n    }\n\n    keys() {\n        return this.data.keys();\n    }\n\n    values() {\n        return this.data.values();\n    }\n\n    async setup(): Promise<void> {\n    }\n}","import { IndexedRegistryItem } from \"./indexed-registry-item.js\";\nimport { Registry } from \"./registry.js\";\n\nexport class IndexedRegistry<T extends IndexedRegistryItem> extends Registry<T> {\n    private idsToItems: Map<number, T> = new Map();\n\n    get(id: string | number) {\n        if (typeof id == 'string') return super.get(id);\n\n        return this.idsToItems.get(id);\n    }\n\n    async setup() {\n        this.idsToItems = new Map();\n\n        let id = 0;\n\n        for (const [ name, item ] of this.entries()) {\n            item.bindRegistryKeys(id, name);\n            this.idsToItems.set(id, item);\n\n            id++;\n        }\n    }\n}","import { Texture } from \"../../render/utils/texture.js\";\nimport { BlockModel } from \"../../render/world/model/static/block-model.js\";\nimport { ChunkDataFieldAllocation } from \"../../world/chunk-data/chunk-data-field-allocation.js\";\nimport { BlockPrototype } from \"../../world/prototype/block-prototype.js\";\nimport { EntityPrototype } from \"../../world/prototype/entity-prototype.js\";\nimport { IndexedRegistry } from \"./indexed-registry.js\";\nimport { Registry } from \"./registry.js\";\n\nexport namespace Registries {\n    export const blocks = new IndexedRegistry<BlockPrototype>();\n    export const entities = new Registry<EntityPrototype<any>>();\n    export const fields = new Registry<ChunkDataFieldAllocation<any>>();\n    export const textures = new IndexedRegistry<Texture>();\n    export const blockModels = new IndexedRegistry<BlockModel>();\n}","export namespace MathUtils {\n    export function map(value: number, min: number, max: number, newMin: number, newMax: number): number {\n        return (value - min) * (newMax - newMin) / (max - min) + newMin;\n    }\n}","export abstract class Vector2D {\n    x: number;\n    y: number;\n\n    constructor(x = 0, y = 0) {\n        if (typeof x !== 'number') throw new TypeError('x must be a number');\n        if (typeof y !== 'number') throw new TypeError('y must be a number');\n        if (isNaN(x)) throw new TypeError('x must not be NaN');\n        if (isNaN(y)) throw new TypeError('y must not be NaN');\n\n        this.x = x;\n        this.y = y;\n    }\n\n    abstract _set(x: number, y: number): Vector2D;\n\n    add(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x + x, this.y + y);\n            } else {\n                return this._set(this.x + x, this.y + x);\n            }\n        } else {\n            return this._set(this.x + x.x, this.y + x.y);\n        }\n    }\n\n    subtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x - x, this.y - y);\n            } else {\n                return this._set(this.x - x, this.y - x);\n            }\n        } else {\n            return this._set(this.x - x.x, this.y - x.y);\n        }\n    }\n\n    reverseSubtract(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x - this.x, y - this.y);\n            } else {\n                return this._set(x - this.x, x - this.y);\n            }\n        } else {\n            return this._set(x.x - this.x, x.y - this.y);\n        }\n    }\n\n    complexMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x - this.y * y, this.x * y + this.y * x);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x - this.y * x.y, this.x * x.y + this.y * x.x);\n        }\n    }\n\n    scalarMultiply(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x * x, this.y * y);\n            } else {\n                return this._set(this.x * x, this.y * x);\n            }\n        } else {\n            return this._set(this.x * x.x, this.y * x.y);\n        }\n    }\n\n    scalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(this.x / x, this.y / y);\n            } else {\n                return this._set(this.x / x, this.y / x);\n            }\n        } else {\n            return this._set(this.x / x.x, this.y / x.y);\n        }\n    }\n\n    reverseScalarDivide(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this._set(x / this.x, y / this.y);\n            } else {\n                return this._set(x / this.x, x / this.y);\n            }\n        } else {\n            return this._set(x.x / this.x, x.y / this.y);\n        }\n    }\n\n    dot(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return this.x * x + this.y * y;\n            } else {\n                return this.x * x + this.y * x;\n            }\n        } else {\n            return this.x * x.x + this.y * x.y;\n        }\n    }\n\n    length() {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    distanceTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return Math.sqrt(this.distanceSquaredTo(x, y));\n            } else {\n                return Math.sqrt(this.distanceSquaredTo(x, x));\n            }\n        } else {\n            return Math.sqrt(this.distanceSquaredTo(x.x, x.y));\n        }\n    }\n\n    distanceSquaredTo(x: number | Vector2D, y?: number) {\n        if (typeof x === 'number') {\n            if (typeof y === 'number') {\n                return (this.x - x) * (this.x - x) + (this.y - y) * (this.y - y);\n            } else {\n                return (this.x - x) * (this.x - x) + (this.y - x) * (this.y - x);\n            }\n        } else {\n            return (this.x - x.x) * (this.x - x.x) + (this.y - x.y) * (this.y - x.y);\n        }\n    }\n\n    normalize() {\n        return this.scalarDivide(this.length());\n    }\n\n    * [Symbol.iterator]() {\n        yield this.x;\n        yield this.y;\n    }\n\n    toString() {\n        return `${this.constructor.name} { ${this.x}, ${this.y} }`;\n    }\n\n    clone() {\n        return new (this.constructor as (new (x: number, y: number) => typeof this))(this.x, this.y);\n    }\n\n    equals(other: Vector2D) {\n        return this.x === other.x && this.y === other.y;\n    }\n}","import { Vector2D } from \"./vector2d.js\";\n\nexport class ImmutableVector2D extends Vector2D {\n    constructor(x: number = 0, y: number = 0) {\n        super(x, y);\n    }\n\n    _set(x: number, y: number): ImmutableVector2D {\n        return new ImmutableVector2D(x, y);\n    }\n\n    private set(x: number | Vector2D, y?: number) {\n        throw new Error(\"Cannot set immutable vector\");\n    }\n}","import { Vector2D } from \"../vector2d/vector2d.js\";\n\nexport class Vector3 {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    set(x: number | Vector3, y?: number, z?: number): this {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            this.x = x;\n            this.y = y;\n            this.z = z;\n        } else if (x instanceof Vector3 && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x = x.x;\n            this.y = x.y;\n            this.z = x.z;\n        } else {\n            throw new TypeError(\"Invalid arguments\");\n        }\n\n        return this;\n    }\n\n    add(x: number | Vector3, y?: number, z?: number): this {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            this.x += x;\n            this.y += y;\n            this.z += z;\n        } else if (x instanceof Vector3 && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x += x.x;\n            this.y += x.y;\n            this.z += x.z;\n        } else {\n            throw new TypeError(\"Invalid arguments\");\n        }\n\n        return this;\n    }\n\n    plus(x: number | Vector3, y?: number, z?: number): Vector3 {\n        return this.clone().add(x, y, z);\n    }\n\n    subtract(x: number | Vector3, y?: number, z?: number): this {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            this.x -= x;\n            this.y -= y;\n            this.z -= z;\n        } else if (x instanceof Vector3 && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x -= x.x;\n            this.y -= x.y;\n            this.z -= x.z;\n        } else {\n            throw new TypeError(\"Invalid arguments\");\n        }\n\n        return this;\n    }\n\n    minus(x: number | Vector3, y?: number, z?: number): Vector3 {\n        return this.clone().subtract(x, y, z);\n    }\n\n    multiply(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            this.x *= x;\n            this.y *= y;\n            this.z *= z;\n        } else if (x instanceof Vector3 && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x *= x.x;\n            this.y *= x.y;\n            this.z *= x.z;\n        } else if (typeof x == \"number\" && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x *= x;\n            this.y *= x;\n            this.z *= x;\n        } else {\n            throw new TypeError(\"Invalid arguments\");\n        }\n\n        return this;\n    }\n\n    times(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n        return this.clone().multiply(x, y, z);\n    }\n\n    divide(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            this.x /= x;\n            this.y /= y;\n            this.z /= z;\n        } else if (x instanceof Vector3 && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x /= x.x;\n            this.y /= x.y;\n            this.z /= x.z;\n        } else if (typeof x == \"number\" && typeof y == 'undefined' && typeof z == 'undefined') {\n            this.x /= x;\n            this.y /= x;\n            this.z /= x;\n        } else {\n            throw new TypeError(\"Invalid arguments\");\n        }\n\n        return this;\n    }\n\n    over(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n        return this.clone().divide(x, y, z);\n    }\n\n    dot(vector: Vector3): number {\n        return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n    }\n\n    length(): number {\n        return Math.sqrt(this.lengthSquared());\n    }\n\n    lengthSquared(): number {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    normalize(): this {\n        this.divide(this.length());\n\n        return this;\n    }\n\n    unit(): Vector3 {\n        return this.clone().normalize();\n    }\n\n    *[Symbol.iterator](): IterableIterator<number> {\n        yield this.x;\n        yield this.y;\n        yield this.z;\n    }\n\n    clone(): Vector3 {\n        return new Vector3(this.x, this.y, this.z);\n    }\n\n    toString(): string {\n        return `(${this.x}, ${this.y}, ${this.z})`;\n    }\n\n    static from(vector2: Vector2D, format: string): Vector3 {\n        return new Vector3(\n            !isNaN(+format[0]) ? +format[0] : vector2[format[0]],\n            !isNaN(+format[1]) ? +format[1] : vector2[format[1]],\n            !isNaN(+format[2]) ? +format[2] : vector2[format[2]]\n        );\n    }\n\n    equals(other: Vector3, epsilon?: number): boolean {\n        if (typeof epsilon == 'number') return Math.abs(this.x - other.x) <= epsilon && Math.abs(this.y - other.y) <= epsilon && Math.abs(this.z - other.z) <= epsilon;\n        else return this.x == other.x && this.y == other.y && this.z == other.z;\n    }\n}\n\nexport namespace Vector3 {\n    export class Handled implements Vector3 {\n        private listeners: ((original: Vector3, current: Vector3) => unknown)[];\n\n        constructor(private vector: Vector3, ...listeners: ((original: Vector3, current: Vector3) => unknown)[]) {\n            this.listeners = listeners;\n        }\n\n        private sendUpdate(original: Vector3) {\n            for (const listener of this.listeners) {\n                listener(original, this);\n            }\n        }\n\n        on(event: \"change\", listener: (original: Vector3, current: Vector3) => unknown): this {\n            this.listeners.push(listener);\n\n            return this;\n        }\n\n        get x() {\n            return this.vector.x;\n        }\n\n        get y() {\n            return this.vector.y;\n        }\n\n        get z() {\n            return this.vector.z;\n        }\n\n        set x(value: number) {\n            this.vector.x = value;\n        }\n\n        set y(value: number) {\n            this.vector.y = value;\n        }\n\n        set z(value: number) {\n            this.vector.z = value;\n        }\n\n        set(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n            const original = this.vector.clone();\n\n            this.vector.set(x, y, z);\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        add(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n            const original = this.vector.clone();\n\n            this.vector.add(x, y, z);\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        plus(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n            return this.vector.plus(x, y, z);\n        }\n\n        subtract(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n            const original = this.vector.clone();\n\n            this.vector.subtract(x, y, z);\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        minus(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n            return this.vector.minus(x, y, z);\n        }\n\n        multiply(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n            const original = this.vector.clone();\n\n            this.vector.multiply(x, y, z);\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        times(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n            return this.vector.times(x, y, z);\n        }\n\n        divide(x: number | Vector3, y?: number | undefined, z?: number | undefined): this {\n            const original = this.vector.clone();\n\n            this.vector.divide(x, y, z);\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        over(x: number | Vector3, y?: number | undefined, z?: number | undefined): Vector3 {\n            return this.vector.over(x, y, z);\n        }\n\n        dot(vector: Vector3): number {\n            return this.vector.dot(vector);\n        }\n\n        length(): number {\n            return this.vector.length();\n        }\n\n        lengthSquared(): number {\n            return this.vector.lengthSquared();\n        }\n\n        normalize(): this {\n            const original = this.vector.clone();\n\n            this.vector.normalize();\n\n            this.sendUpdate(original);\n\n            return this;\n        }\n\n        unit(): Vector3 {\n            return this.vector.unit();\n        }\n\n        *[Symbol.iterator](): IterableIterator<number> {\n            yield this.vector.x;\n            yield this.vector.y;\n            yield this.vector.z;\n        }\n\n        clone(): Vector3 {\n            return this.vector.clone();\n        }\n\n        toString(): string {\n            return this.vector.toString();\n        }\n\n        equals(other: Vector3, epsilon?: number): boolean {\n            return this.vector.equals(other, epsilon);\n        }\n    }\n\n    export function handle(vector: Vector3): Vector3.Handled {\n        return new Handled(vector);\n    }\n\n    export function immutable(vector: Vector3): Vector3 {\n        return new Handled(vector, () => {\n            throw new Error(\"Cannot modify immutable vector\");\n        });\n    }\n\n    export function validated(vector: Vector3): Vector3 {\n        return new Handled(vector, (original, current) => {\n            if (typeof current.x !== 'number' || isNaN(current.x) || typeof current.y !== 'number' || isNaN(current.y) || typeof current.z !== 'number' || isNaN(current.z)) {\n                current.set(original);\n\n                console.warn(\"Invalid vector components \" + current + \", reverting to \" + original);\n            }\n        });\n    }\n\n    export function floor(vector: Vector3): Vector3 {\n        return new Vector3(Math.floor(vector.x), Math.floor(vector.y), Math.floor(vector.z));\n    }\n\n    export function ceil(vector: Vector3): Vector3 {\n        return new Vector3(Math.ceil(vector.x), Math.ceil(vector.y), Math.ceil(vector.z));\n    }\n\n    export function round(vector: Vector3): Vector3 {\n        return new Vector3(Math.round(vector.x), Math.round(vector.y), Math.round(vector.z));\n    }\n}","import { Vector3 } from \"../../utils/vector3d/vector3.js\";\n\n/**\n * A `ChunkDataReferencer` converts between indexes and\n * positions in chunk data for given chunk dimensions.\n * \n * * The `index()` method converts a position to an\n * index in chunk data.\n * * The `position()` method converts an index in chunk\n * data to a position, based on the underlying `x()`,\n * `y()`, and `z()` methods.\n * * The `dimensions` property is a 3D vector containing\n * the dimensions of the chunk.\n * * The `cells` property is the total number of cells\n * in a chunk, equal to `dimensions.x * dimensions.y *\n * dimensions.z`.\n */\nexport namespace ChunkDataReferencer {\n    /**\n     * The dimensions of the chunk as a 3D vector.\n     */\n    export const dimensions: Vector3 = Vector3.immutable(new Vector3(16, 64, 16));\n\n    /**\n     * Returns the total number of cells in a chunk.\n     */\n    export const cells = dimensions.x * dimensions.y * dimensions.z;\n\n    /**\n     * Computes the chunk data index for a given\n     * position, where any block position will have a\n     * different index from 0 to the total number of\n     * cells in a chunk minus 1.\n     * \n     * The method is the opposite of `position()`.\n     */\n    export function index(x: number, y: number, z: number): number;\n    export function index(x: Vector3): number;\n    export function index(x: number | Vector3, y?: number, z?: number): number {\n        if (x instanceof Vector3) {\n            y = x.y;\n            z = x.z;\n            x = x.x;\n        } else {\n            if (y === undefined || z === undefined) throw new Error(`Invalid arguments`);\n        }\n\n        if (x < 0 || x >= this.dimensions.x || y < 0 || y >= this.dimensions.y || z < 0 || z >= this.dimensions.z) throw new Error(`Coordinates are out of bounds`);\n\n        return x + (z << 4) + (y << 8);\n    }\n\n    /**\n     * Computes the x position of a specified chunk\n     * data index. This can be used with the `y()` and\n     * `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function x(index: number): number {\n        return index & 0b1111;\n    }\n\n    /**\n     * Computes the y position of a specified chunk\n     * data index. This can be used with the `x()`\n     * and `z()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function y(index: number): number {\n        return index >> 8;\n    }\n\n    /**\n     * Computes the z position of a specified chunk\n     * data index. This can be used with the `x()` and\n     * `y()` methods to get the complete position\n     * without creating a vector.\n     */\n    export function z(index: number): number {\n        return (index >> 4) & 0b1111;\n    }\n\n    /**\n     * Computes the position of a specified chunk data\n     * index. Equivalent to calling `x()`, `y()`, and\n     * `z()`, then assembling a `Vector3D` from the\n     * components.\n     * \n     * The method is the opposite of `index()`.\n     */\n    export function position(index: number): Vector3 {\n        return new Vector3(this.x(index), this.y(index), this.z(index));\n    }\n\n    export function isOutOfBounds(position: Vector3): boolean {\n        return position.x < 0 || position.x >= this.dimensions.x || position.y < 0 || position.y >= this.dimensions.y || position.z < 0 || position.z >= this.dimensions.z;\n    }\n}\n\nwindow['cdr'] = ChunkDataReferencer;","export abstract class IndexedRegistryItem {\n    private registeredId: number;\n    private registeredName: string;\n\n    bindRegistryKeys(id: number, name: string) {\n        this.registeredId = id;\n        this.registeredName = name;\n    }\n    \n    getRegisteredId() {\n        return this.registeredId;\n    }\n\n    getRegisteredName() {\n        return this.registeredName;\n    }\n}","import { IndexedRegistryItem } from \"../../game/registry/indexed-registry-item.js\";\nimport { BlockModel } from \"../../render/world/model/static/block-model.js\";\nimport { BlockPosition } from \"./block-position.js\";\n\nexport abstract class BlockPrototype extends IndexedRegistryItem {\n    abstract instantiate(position: BlockPosition): void;\n\n    abstract whenDestroyed(position: BlockPosition): void;\n    abstract whenUsed(position: BlockPosition): void;\n    abstract whenPlaced(position: BlockPosition): void;\n    abstract whenTicked(position: BlockPosition): void;\n\n    abstract getBlockModel(position: BlockPosition): BlockModel | null;\n\n    abstract setup(): Promise<void>;\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { Registry } from \"../../game/registry/registry.js\";\nimport { ChunkDataField } from \"../chunk-data/chunk-data-field.js\";\n\n/**\n * The ChunkDataFields allows multiple fields to be allocated\n * before creating chunks.\n * \n * * Fields may be allocated in the `Registry.Fields` map.\n * * A map of `ChunkDataField` objects can be instantiated\n * using the `initialize()` method.\n */\nexport namespace ChunkDataFields {\n    export function initialize(): Map<string, ChunkDataField<any>> {\n        const fields = new Map<string, ChunkDataField<any>>();\n\n        for (const [ id, field ] of Registries.fields.entries()) {\n            fields.set(id, field.instantiate());\n        }\n\n        return fields;\n    }\n}","import { Registries } from \"../../game/registry/registries.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { Entity } from \"../entity/entity.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { BlockPrototype } from \"../prototype/block-prototype.js\";\nimport { ChunkDataFields } from \"../prototype/chunk-data-fields.js\";\nimport { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\nexport class ChunkData {\n    private chunk: ChunkInterface.NonPlaceholder | null = null;\n    private entities: Set<Entity> = new Set();\n    private updates: Set<number> = new Set();\n\n    constructor(private fields: Map<string, ChunkDataField<any>> = ChunkDataFields.initialize()) {\n    }\n\n    setParentChunk(chunk: ChunkInterface.NonPlaceholder): void {\n        this.chunk = chunk;\n    }\n\n    getEntities(): Set<Entity> {\n        return new Set(...this.entities.entries());\n    }\n\n    getChunk(): ChunkInterface.NonPlaceholder | null {\n        return this.chunk;\n    }\n\n    addEntity(entity: Entity): void {\n        this.entities.add(entity);\n    }\n\n    removeEntity(entity: Entity): void {\n        this.entities.delete(entity);\n    }\n\n    getField(id: string): ChunkDataField<any> {\n        if (!this.fields.has(id)) {\n            throw new Error(`Field id '${id}' is not allocated`);\n        }\n\n        return this.fields.get(id) as ChunkDataField<any>;\n    }\n\n    getBlockId(position: BlockPosition): number;\n    getBlockId(position: Vector3): number;\n    getBlockId(x: number, y: number, z: number): number;\n    getBlockId(index: number): number;\n    getBlockId(x: BlockPosition | Vector3 | number, y?: number, z?: number): number {\n        if (x instanceof BlockPosition) {\n            return this.getField('blockId').get(x.getLocalPosition());\n        } else if (x instanceof Vector3) {\n            return this.getField('blockId').get(x);\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number') {\n            return this.getField('blockId').get(x, y, z);\n        } else if (typeof x === 'number') {\n            return this.getField('blockId').get(x); \n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getBlock(position: BlockPosition): BlockPrototype;\n    getBlock(position: Vector3): BlockPrototype;\n    getBlock(x: number, y: number, z: number): BlockPrototype;\n    getBlock(index: number): BlockPrototype;\n    getBlock(x: BlockPosition | Vector3 | number, y?: number, z?: number): BlockPrototype {\n        if (x instanceof BlockPosition) {\n            return Registries.blocks.get(this.getBlockId(x))!;\n        } else if (x instanceof Vector3) {\n            return Registries.blocks.get(this.getBlockId(x))!;\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number') {\n            return Registries.blocks.get(this.getBlockId(x, y, z))!;\n        } else if (typeof x === 'number') {\n            return Registries.blocks.get(this.getBlockId(x))!; \n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    setBlockId(position: BlockPosition, blockId: number): void;\n    setBlockId(position: Vector3, blockId: number): void;\n    setBlockId(x: number, y: number, z: number, blockId: number): void;\n    setBlockId(index: number, blockId: number): void;\n    setBlockId(x: BlockPosition | Vector3 | number, y: number, z?: number, block?: number): void {\n        if (x instanceof BlockPosition && typeof y == 'number') {\n            const localPostion = x.getLocalPosition();\n\n            this.setBlockId(localPostion, y);\n        } else if (x instanceof Vector3 && typeof y === 'number') {\n            this.getField('blockId').set(x, y);\n\n            this.updates.add(ChunkDataReferencer.index(x));\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && typeof block == 'number') {\n            this.getField('blockId').set(x, y, z, block);\n\n            this.updates.add(ChunkDataReferencer.index(x, y, z));\n        } else if (typeof x == 'number' && typeof y == 'number') {\n            this.getField('blockId').set(x, y);\n\n            this.updates.add(x);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    setBlock(position: BlockPosition, block: BlockPrototype): void;\n    setBlock(position: Vector3, block: BlockPrototype): void;\n    setBlock(x: number, y: number, z: number, block: BlockPrototype): void;\n    setBlock(x: BlockPosition | Vector3 | number, y: BlockPrototype | number, z?: number, block?: BlockPrototype): void {\n        if (x instanceof BlockPosition && y instanceof BlockPrototype) {\n            this.setBlockId(x, y.getRegisteredId());\n        } else if (x instanceof Vector3 && y instanceof BlockPrototype) {\n            this.setBlockId(x, y.getRegisteredId());\n        } else if (typeof x === 'number' && typeof y == 'number' && typeof z == 'number' && block instanceof BlockPrototype) {\n            this.setBlockId(x, y, z, block.getRegisteredId());\n        } else if (typeof x == 'number' && typeof y == 'number') {\n            this.setBlockId(x, y);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getBlockUpdates(): Iterable<number> {\n        return this.updates;\n    }\n\n    async tickChunkData(): Promise<void> {\n        for (const update of this.updates) {\n            const position = ChunkDataReferencer.position(update);\n            const blockPrototype = this.getBlock(position);\n\n            blockPrototype.whenTicked(new BlockPosition(position, this));\n        }\n\n        this.updates.clear();\n    }\n}","import { Feature } from \"../content/worldgen/feature.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkLoadState } from \"./world-generation/chunk-load-state.js\";\nimport { World } from \"./world.js\";\n\nexport abstract class ChunkInterface {\n    abstract getPosition(): Vector2D;\n\n    abstract isPlaceholder(): boolean;\n\n    abstract getWorld(): World | null;\n    abstract bindWorld(world: World, position: Vector2D): void;\n    \n    abstract getChunkData(): ChunkData;\n\n    unloadChunk() {}\n    setupChunk() {}\n    async tickChunk() {}\n\n    abstract get loadState(): ChunkLoadState;\n}\n\nexport namespace ChunkInterface {\n    export abstract class NonPlaceholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World | null;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        abstract getChunkData(): ChunkData;\n        isPlaceholder(): false { return false; }\n    }\n\n    export abstract class Placeholder extends ChunkInterface {\n        abstract getPosition(): Vector2D;\n        abstract getWorld(): World | null;\n        abstract bindWorld(world: World, position: Vector2D): void;\n        isPlaceholder(): true { return true; }\n    }\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { ChunkLoadState } from \"./world-generation/chunk-load-state.js\";\nimport { World } from \"./world.js\";\n\nexport class BaseChunk extends ChunkInterface.NonPlaceholder {\n    private position: ImmutableVector2D;\n    private world: World | null = null;\n    protected chunkData: ChunkData;\n\n    constructor() {\n        super();\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World | null {\n        return this.world ?? null;\n    }\n\n    getChunkData(): ChunkData {\n        return this.chunkData;\n    }\n\n    bindWorld(world: World, position: Vector2D) {\n        this.world = world;\n        this.position = new ImmutableVector2D(position.x, position.y);\n    }\n\n    unloadChunk() {\n        if (!this.world) throw new Error(\"Cannot unload unbound chunk\");\n\n        for (const entity of this.chunkData.getEntities()) {\n            this.world.entityIdMapping.delete(entity.getUniqueId());\n        }\n    }\n\n    setupChunk() {\n        if (!this.world) throw new Error(\"Cannot setup unbound chunk\");\n\n        this.chunkData = new ChunkData();\n    }\n\n    async tickChunk() {\n        await this.chunkData.tickChunkData();\n    }\n\n    loadState = {\n        current: Infinity,\n        target: Infinity\n    };\n}","import { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkData } from \"./chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { ChunkLoadState } from \"./world-generation/chunk-load-state.js\";\nimport { World } from \"./world.js\";\n\nexport class PlaceholderChunk extends ChunkInterface.Placeholder {\n    private position: Vector2D;\n    private world: World | null = null;\n\n    constructor() {\n        super();\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    getWorld(): World | null {\n        return this.world ?? null;\n    }\n\n    getChunkData(): ChunkData {\n        throw new Error(\"Chunk data does not exist on placeholder\");\n    }\n\n    bindWorld(world: World, position: Vector2D): void {\n        this.world = world;\n        this.position = position;\n    }\n\n    unloadChunk(): void {}\n    setupChunk(): void {}\n    async tickChunk(): Promise<void> {}\n\n    loadState = {\n        current: 0,\n        target: 0\n    };\n}","import { ChunkInterface } from \"../chunk-interface.js\";\nimport { World } from \"../world.js\";\n\nexport class ChunkLoadQueue {\n    private chunks: ChunkInterface[][] = [];\n\n    constructor(private world: World) {\n        // TODO: Only for development\n        ((window as any).__dev__ ??= {}).clq = this;\n    }\n\n    has(state: number): boolean {\n        return this.chunks[state] && this.chunks[state].length > 0;\n    }\n\n    add(chunk: ChunkInterface): void {\n        const loadState = chunk.loadState;\n\n        if (!this.chunks[loadState.current]) {\n            this.chunks[loadState.current] = [];\n        }\n\n        if (!this.chunks[loadState.current].includes(chunk)) {\n            this.chunks[loadState.current].push(chunk);\n        }\n    }\n\n    remove(chunk: ChunkInterface): void {\n        const loadState = chunk.loadState;\n\n        let array = this.chunks[loadState.current];\n        \n        array.splice(array.indexOf(chunk), 1);\n    }\n\n    entries() {\n        return this.chunks;\n    }\n}","import { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../utils/vector2d/vector2d.js\";\nimport { ChunkDataReferencer } from \"./chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"./chunk-interface.js\";\nimport { BaseChunk } from \"./base-chunk.js\";\nimport { Entity } from \"./entity/entity.js\";\nimport { PlaceholderChunk } from \"./placeholder-chunk.js\";\nimport { ChunkLoadQueue } from \"./world-generation/chunk-load-queue.js\";\nimport { ChunkLoadState } from \"./world-generation/chunk-load-state.js\";\nimport { WorldLoader } from \"./world-loader.js\";\n\nexport class World {\n    entityIdMapping: Map<string, Entity>;\n    private chunks: Map<string, ChunkInterface>;\n    private loader: WorldLoader;\n    private queue: ChunkLoadQueue;\n\n    constructor() {\n        this.entityIdMapping = new Map();\n        this.chunks = new Map();\n        this.queue = new ChunkLoadQueue(this);\n\n        // TODO: Only for development\n        ((window as any).__dev__ ??= {}).world = this;\n    }\n\n    getWorldLoader() {\n        return this.loader;\n    }\n\n    setWorldLoader(loader: WorldLoader) {\n        this.loader = loader;\n        loader.bindWorld(this);\n    }\n\n    getChunkLoadQueue() {\n        return this.queue;\n    }\n\n    createChunk(position: Vector2D): BaseChunk;\n    createChunk(x: number, z: number): BaseChunk;\n    createChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n\n        const chunk = new BaseChunk();\n\n        chunk.bindWorld(this, new ImmutableVector2D(x, z));\n        chunk.setupChunk();\n\n        return chunk;\n    }\n\n    getChunk(x: Vector2D): ChunkInterface;\n    getChunk(x: number, z: number): ChunkInterface;\n    getChunk(x: number | Vector2D, z?: number) {\n        if (x instanceof Vector2D) {\n            z = x.y;\n            x = x.x;\n        }\n        \n        return this.chunks.get(x + '.' + z) || null;\n    }\n\n    addEntity(entity: Entity) {\n        this.entityIdMapping.set(entity.getUniqueId(), entity);\n\n        const entityPosition = entity.getPosition();\n\n        const chunkX = Math.floor(entityPosition.x / ChunkDataReferencer.dimensions.x);\n        const chunkZ = Math.floor(entityPosition.z / ChunkDataReferencer.dimensions.z);\n\n        const chunk = this.getChunk(chunkX, chunkZ) || this.loadChunk(chunkX, chunkZ);\n\n        entity.setWorld(this);\n\n        if (!chunk.isPlaceholder()) {\n            chunk.getChunkData().addEntity(entity);\n            entity.setParentChunk(null);\n        } else {\n            entity.setParentChunk(chunk as ChunkInterface.NonPlaceholder);\n        }\n\n        return entity;\n    }\n\n    removeEntity(entity: Entity) {\n        entity.setWorld(null);\n\n        this.entityIdMapping.delete(entity.getUniqueId());\n    }\n\n    _validateDisconnectedEntities() {\n        for (const entity of this.entityIdMapping.values()) {\n            if (!entity.getParentChunk()) {\n                console.warn(\"Entity is not in a chunk\\n\", entity);\n            }\n        }\n    }\n\n    async tick(delta: number) {\n        for (const entity of this.entityIdMapping.values()) {\n            await entity.tickEntity(delta);\n        }\n\n        for (const [ _id, chunk ] of this.chunks) {\n            await chunk.tickChunk();\n        }\n\n        this._validateDisconnectedEntities();\n    }\n\n    setChunk(x: number, z: number, chunk: ChunkInterface): void;\n    setChunk(position: Vector2D, chunk: ChunkInterface): void;\n    setChunk(x: Vector2D | number, z: number | ChunkInterface, chunk?: ChunkInterface) {\n        if (x instanceof Vector2D) {\n            chunk = z as ChunkInterface;\n            z = x.y;\n            x = x.x;\n        } else if (typeof z !== 'number') {\n            throw new Error(\"Invalid arguments\");\n        }\n\n        if (chunk === undefined) {\n            throw new Error(\"Invalid arguments\");\n        }\n\n        const old = this.getChunk(x, z);\n\n        if (old) {\n            old.unloadChunk();\n        }\n\n        this.chunks.set(x + '.' + z, chunk);\n        chunk.bindWorld(this, new ImmutableVector2D(x, z));\n    }\n\n    loadChunk(x: number, z: number, target?: number): ChunkInterface;\n    loadChunk(position: Vector2D, target?: number): ChunkInterface;\n    loadChunk(x: Vector2D | number, z?: number, target?: number): ChunkInterface {\n        if (x instanceof Vector2D) {\n            target = z;\n            z = x.y;\n            x = x.x;\n        } else if (typeof z !== 'number') {\n            throw new Error(\"Invalid arguments\");\n        }\n\n        const chunk = this.getChunk(x, z);\n        if (chunk) { return chunk; }\n\n        if (!this.loader) {\n            throw new Error(\"Cannot load chunk: World has no loader\");\n        }\n\n        const placeholder = new PlaceholderChunk();\n\n        this.setChunk(new ImmutableVector2D(x, z), placeholder);\n        placeholder.loadState.target = target ?? Infinity;\n\n        this.queue.add(placeholder);\n\n        return placeholder;\n    }\n}","import { ImmutableVector2D } from \"../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { World } from \"../world.js\";\n\nexport class BlockPosition {\n    private position: Vector3;\n    private reference: World | ChunkData;\n\n    constructor(position: Vector3, reference: World);\n    constructor(position: Vector3, reference: ChunkData);\n    constructor(x: number, y: number, z: number, reference: World);\n    constructor(x: number, y: number, z: number, reference: ChunkData);\n    constructor(x: Vector3 | number, y: World | ChunkData | number, z?: number, reference?: World | ChunkData) {\n        if (x instanceof Vector3) {\n            if (y instanceof World || y instanceof ChunkData) {\n                this.position = x;\n                this.reference = y;\n            } else {\n                throw new Error(\"Invalid arguments\");\n            }\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof World) {\n            this.position = new Vector3(x, y, z);\n            this.reference = reference;\n        } else if (typeof x === 'number' && typeof y === 'number' && typeof z === 'number' && reference instanceof ChunkData) {\n            this.position = new Vector3(x, y, z);\n            this.reference = reference;\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    getGlobalPosition(): Vector3 {\n        if (this.reference instanceof World) {\n            return this.position.clone();\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            const position = chunk.getPosition();\n\n            return this.position.clone().add(Vector3.from(position, \"x0y\"));\n        }\n    }\n\n    getLocalPosition(): Vector3 {\n        if (this.reference instanceof ChunkData) {\n            return this.position.clone();\n        } else {\n            return this.position.clone().subtract(Vector3.from(this.getChunkPosition(), 'x0y'));\n        }\n    }\n\n    getChunkPosition(): Vector2D {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get global position of disconnected ChunkData\");\n            }\n\n            return chunk.getPosition();\n        } else {\n            const chunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n            const chunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n            return new ImmutableVector2D(chunkX, chunkZ);\n        }\n    }\n\n    getWorld(): World {\n        if (this.reference instanceof World) {\n            return this.reference;\n        } else {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk || !chunk.getWorld()) {\n                throw new Error(\"Cannot get world of disconnected ChunkData\");\n            }\n            \n            return chunk.getWorld()!;\n        }\n    }\n\n    getChunkData(): ChunkData {\n        if (this.reference instanceof ChunkData) {\n            return this.reference;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk data of disconnected world\");\n            }\n\n            return chunk.getChunkData();\n        }\n    }\n\n    getChunk(): ChunkInterface {\n        if (this.reference instanceof ChunkData) {\n            const chunk = this.reference.getChunk();\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk of disconnected ChunkData\");\n            }\n\n            return chunk;\n        } else {\n            const position = this.getChunkPosition();\n            const chunk = this.getWorld().getChunk(position);\n\n            if (!chunk) {\n                throw new Error(\"Cannot get chunk not in world\");\n            }\n\n            return chunk;\n        }\n    }\n}","import { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { BlockPosition } from \"../prototype/block-position.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\n\n/**\n * A ChunkDataField is an object where data for each\n * block in a chunk can be contained.\n */\nexport abstract class ChunkDataField<RepresentedType> {\n    /**\n     * Gets the value of the field at a given position.\n     */\n    get(position: BlockPosition): RepresentedType;\n    get(position: Vector3): RepresentedType;\n    get(index: number): RepresentedType;\n    get(x: number, y: number, z: number): RepresentedType;\n    get(x: number | Vector3 | BlockPosition, y?: number, z?: number): RepresentedType {\n        if (typeof x == 'number' && typeof y == 'undefined') {\n            return this._get(x);\n        } else if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number') {\n            return this._get(ChunkDataReferencer.index(x, y, z));\n        } else if (x instanceof Vector3) {\n            return this._get(ChunkDataReferencer.index(x));\n        } else if (x instanceof BlockPosition) {\n            return this.get(x.getLocalPosition());\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    /**\n     * Sets the value of the field at a given position.\n     */\n    set(position: BlockPosition, value: RepresentedType): void;\n    set(position: Vector3, value: RepresentedType): void;\n    set(index: number, value: RepresentedType): void;\n    set(x: number, y: number, z: number, value: RepresentedType): void;\n    set(x: Vector3 | BlockPosition | number, y: RepresentedType | number, z?: number, value?: RepresentedType): void {\n        if (typeof x == 'number' && typeof y == 'number' && typeof z == 'number' && typeof value != 'undefined') {\n            return this._set(ChunkDataReferencer.index(x, y, z), value);\n        } else if (x instanceof Vector3) {\n            return this._set(ChunkDataReferencer.index(x), y as RepresentedType);\n        } else if (x instanceof BlockPosition) {\n            return this._set(ChunkDataReferencer.index(x.getLocalPosition()), y as RepresentedType);\n        } else if (typeof x == 'number') {\n            return this._set(x, y as RepresentedType);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    abstract _get(index: number): RepresentedType;\n    abstract _set(index: number, value: RepresentedType): void;\n}","import { ChunkDataField } from \"./chunk-data-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\nimport { ChunkDataReferencer } from \"./chunk-data-referencer.js\";\nimport { TypedArray } from \"./typed-array.js\";\n\n/**\n * Represents a field for any size of `number`.\n */\nexport class ChunkDataNumberField extends ChunkDataField<number> {\n    array: TypedArray;\n\n    constructor(public type: ChunkDataNumberType) {\n        super();\n\n        this.array = ChunkDataNumberField.typedArray(type, ChunkDataReferencer.cells);\n    }\n\n    _get(index: number): number {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const item = this.array[Math.floor(index / 2)] as number;\n\n            if (index % 2 == 0) {\n                return item & 0x0F;\n            } else {\n                return item >> 4;\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            return Number(this.array[index] as bigint);\n        } else {\n            return this.array[index] as number;\n        }\n    }\n\n    _set(index: number, value: number) {\n        if (this.type == \"u4\" || this.type == \"i4\") {\n            const itemIndex = Math.floor(index / 2);\n            const item = this.array[itemIndex] as number;\n\n            if (index % 2 == 0) {\n                this.array[itemIndex] = (item & 0xF0) | value;\n            } else {\n                this.array[itemIndex] = (item & 0x0F) | (value << 4);\n            }\n        } else if (this.type == \"u64\" || this.type == \"i64\") {\n            this.array[index] = BigInt(value);\n        \n        } else {\n            this.array[index] = value;\n        }\n    }\n\n    /**\n     * Create a typed array of a given `ChunkDataNumberType` and length.\n     */\n    static typedArray(type: ChunkDataNumberType, length: number): TypedArray {\n        if (type == \"u4\") return new Uint8Array(length / 2);\n        if (type == \"u8\") return new Uint8Array(length);\n        if (type == \"u16\") return new Uint16Array(length);\n        if (type == \"u32\") return new Uint32Array(length);\n        if (type == \"u64\") return new BigUint64Array(length);\n        if (type == \"i8\") return new Int8Array(length);\n        if (type == \"i16\") return new Int16Array(length);\n        if (type == \"i32\") return new Int32Array(length);\n        if (type == \"i64\") return new BigInt64Array(length);\n        if (type == \"f32\") return new Float32Array(length);\n        if (type == \"f64\") return new Float64Array(length);\n\n        throw new Error(`Unknown array type: ${type}`);\n    }\n}","import { ChunkDataFieldAllocation } from \"./chunk-data-field-allocation.js\";\nimport { ChunkDataNumberField } from \"./chunk-data-number-field.js\";\nimport { ChunkDataNumberType } from \"./chunk-data-number-type.js\";\n\n/**\n * Represents an allocation of a field for any size of `number`.\n */\nexport class ChunkDataNumberAllocation implements ChunkDataFieldAllocation<number> {\n    /**\n     * Constructs a new `ChunkDataNumberAllocation`\n     * object with a given number type, represented\n     * as a `ChunkDataNumberType`.\n     */\n    constructor(public type: ChunkDataNumberType) {\n    }\n\n    instantiate() {\n        return new ChunkDataNumberField(this.type);\n    }\n}","import { NoiseFunction2D, NoiseFunction3D, NoiseFunction4D, createNoise2D, createNoise3D, createNoise4D } from \"simplex-noise\";\n\nexport namespace NoiseUtils {\n    export function square(value: number, exponent: number) {\n        return Math.sign(value) * (1 - (1 - Math.abs(value)) ** exponent)\n    }\n\n    export function scaledNoise2D(noise: NoiseFunction2D, scale: number): NoiseFunction2D {\n        return (x: number, y: number) => noise(x / scale, y / scale);\n    }\n\n    export function scaledNoise3D(noise: NoiseFunction3D, scale: number): NoiseFunction3D {\n        return (x: number, y: number, z: number) => noise(x / scale, y / scale, z / scale);\n    }\n\n    export function octavedNoise2D(count: number): NoiseFunction2D {\n        let noises: NoiseFunction2D[] = [];\n\n        for (let i = 0; i < count; i++) {\n            noises.push(createNoise2D());\n        }\n\n        return (x: number, y: number): number => {\n            let value = 0;\n            let denomenator = 0;\n\n            for (let i = 0; i < count; i++) {\n                value += noises[i](x * i, y * i) / (i + 1);\n                denomenator += 1 / (i + 1);\n            }\n\n            return value / denomenator;\n        }\n    }\n\n    export function octavedNoise3D(count: number): NoiseFunction3D {\n        let noises: NoiseFunction3D[] = [];\n\n        for (let i = 0; i < count; i++) {\n            noises.push(createNoise3D());\n        }\n\n        return (x: number, y: number, z: number): number => {\n            let value = 0;\n            let denomenator = 0;\n\n            for (let i = 0; i < count; i++) {\n                value += noises[i](x * i, y * i, z * i) / (i + 1);\n                denomenator += 1 / (i + 1);\n            }\n\n            return value / denomenator;\n        }\n    }\n}","import { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"../../world/chunk-interface.js\";\n\nexport interface Feature {\n    getBoundingBox(): [ Vector3, Vector3 ];\n    placeFeature(chunk: ChunkInterface): void;\n    getFeatureHash(): number;\n    doesReplace(feature: Feature): boolean;\n}\n\nexport namespace Feature {\n    export function *resolveCollisions(checkedFeatures: Iterable<Feature>, otherFeatures: Iterable<Feature>): IterableIterator<Feature> {\n        checkedFeatures = [ ...checkedFeatures ];\n        otherFeatures = [ ...otherFeatures ];\n\n        const allFeatures = [ ...otherFeatures, ...checkedFeatures ];\n\n        for (const feature of checkedFeatures) {\n            let destroy = false;\n\n            for (const other of allFeatures) {\n                if (feature === other) {\n                    continue;\n                }\n\n                if (feature.getBoundingBox()[0].x <= other.getBoundingBox()[1].x &&\n                    feature.getBoundingBox()[1].x >= other.getBoundingBox()[0].x &&\n                    feature.getBoundingBox()[0].y <= other.getBoundingBox()[1].y &&\n                    feature.getBoundingBox()[1].y >= other.getBoundingBox()[0].y &&\n                    feature.getBoundingBox()[0].z <= other.getBoundingBox()[1].z &&\n                    feature.getBoundingBox()[1].z >= other.getBoundingBox()[0].z) {\n                    if (feature.doesReplace(other)) continue;\n\n                    if (other.doesReplace(feature)) {\n                        destroy = true;\n                    } else {\n                        let hash = feature.getFeatureHash();\n                        let otherHash = other.getFeatureHash();\n                        \n                        if (otherHash < hash) {\n                            destroy = true;\n                        } else if (otherHash == hash) {\n                            destroy = true;\n                        }\n                    }\n                }\n            }\n\n            if (!destroy) {\n                yield feature;\n            }\n        }\n    }\n}","import { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { PlaceholderChunk } from \"../../world/placeholder-chunk.js\";\nimport { Feature } from \"./feature.js\";\nimport { FeaturedChunk } from \"./featured-chunk.js\";\n\nexport class SemiloadedChunk extends PlaceholderChunk implements FeaturedChunk {\n    static State = Symbol(\"semiloaded\");\n\n    private features: Set<Feature> = new Set();\n    \n    constructor(private data: ChunkData) {\n        super();\n    }\n\n    getChunkData(): ChunkData {\n        return this.data;\n    }\n\n    *getFeatures(): IterableIterator<Feature> {\n        yield* this.features;\n    }\n\n    storeFeatures(features: Iterable<Feature>) {\n        this.features.clear();\n\n        for (const feature of features) {\n            this.features.add(feature);\n        }\n    }\n\n    loadState = { current: 1, target: 0 };\n}","import * as murmur from \"murmurhash-js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { Feature } from \"./feature.js\";\nimport { Registries } from \"../../game/registry/registries.js\";\nimport { ChunkInterface } from \"../../world/chunk-interface.js\";\nimport { ChunkDataReferencer } from \"../../world/chunk-data/chunk-data-referencer.js\";\n\nexport class TreeFeature implements Feature {\n    private absolute: Vector3;\n    private height: number;\n\n    constructor(private position: Vector3, private chunkPosition: Vector2D, private seed: number) {\n        const x = this.position.x + this.chunkPosition.x * ChunkDataReferencer.dimensions.x;\n        const y = this.position.y;\n        const z = this.position.z + this.chunkPosition.y * ChunkDataReferencer.dimensions.z;\n\n        this.absolute = new Vector3(x, y, z);\n\n        const root = x + '.' + y + '.' + z;\n\n        this.height = murmur.murmur3(root + ':treeHeight', this.seed) % 5 + 7;\n    }\n\n    getBoundingBox(): [ Vector3, Vector3 ] {\n        return [ this.absolute.plus(-1, 0, -1), this.absolute.plus(1, this.height, 1) ];\n    }\n\n    placeFeature(chunk: ChunkInterface): void {\n        const log = Registries.blocks.get('log.along_y');\n\n        if (!log) throw new Error(\"Log block not found\");\n\n        const leaves = Registries.blocks.get('leaves');\n\n        if (!leaves) throw new Error(\"Leaves block not found\");\n\n        const chunkData = chunk.getChunkData();\n        const chunkPosition = chunk.getPosition();\n        const localPosition = this.absolute.minus(chunkPosition.x * ChunkDataReferencer.dimensions.x, 0, chunkPosition.y * ChunkDataReferencer.dimensions.z);\n\n        for (let i = 0; i < this.height; i++) {\n            const logPosition = localPosition.plus(0, i, 0);\n\n            if (!ChunkDataReferencer.isOutOfBounds(logPosition)) {\n                chunkData.setBlock(logPosition, log);\n            }\n\n            if (i == 0) continue;\n\n            const position = localPosition.plus(0, i, 0);\n\n            let radius = (this.height - i) / 2 / 2 + 1;\n\n            if (i % 2 == 0 && i < this.height - 1) {\n                radius = (radius + 0.5) / 2;\n            }\n\n            const radiusSquared = radius * radius;\n\n            for (let x = -Math.floor(radius); x <= Math.ceil(radius); x++) {\n                for (let z = -Math.floor(radius); z <= Math.ceil(radius); z++) {\n                    if (x * x + z * z > radiusSquared) continue;\n                    if (ChunkDataReferencer.isOutOfBounds(position.plus(x, 0, z))) continue;\n\n                    const current = chunkData.getBlock(position.x + x, position.y, position.z + z);\n\n                    if (current && current.getRegisteredName() != 'air') continue;\n\n                    chunkData.setBlock(\n                        position.x + x,\n                        position.y,\n                        position.z + z,\n                        leaves\n                    );\n                }\n            }\n        }\n\n        const topPosition = localPosition.plus(0, this.height, 0);\n\n        if (!ChunkDataReferencer.isOutOfBounds(topPosition)) {\n            const current = chunkData.getBlock(topPosition);\n\n            if (!current || current.getRegisteredName() == 'air') {\n                chunkData.setBlock(topPosition, leaves);\n            }\n        }\n    }\n\n    getFeatureHash(): number {\n        return murmur.murmur3(this.absolute.x + '.' + this.absolute.y + '.' + this.absolute.z + ':treeHash', this.seed);\n    }\n\n    doesReplace(feature: Feature): boolean {\n        return false;\n    }\n}","import { BaseChunk } from \"../../world/base-chunk.js\";\nimport { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { Feature } from \"./feature.js\";\nimport { FeaturedChunk } from \"./featured-chunk.js\";\n\nexport class LoadedChunk extends BaseChunk implements FeaturedChunk {\n    private features: Set<Feature> = new Set();\n\n    constructor(data: ChunkData) {\n        super();\n\n        this.chunkData = data;\n    }\n    \n    *getFeatures(): IterableIterator<Feature> {\n        yield* this.features;\n    }\n\n    storeFeatures(features: Iterable<Feature>) {\n        this.features.clear();\n\n        for (const feature of features) {\n            this.features.add(feature);\n        }\n    }\n\n    placeFeatures(neighboringFeatures: Iterable<Feature>) {\n        for (const feature of this.features) {\n            feature.placeFeature(this);\n        }\n\n        for (const feature of neighboringFeatures) {\n            feature.placeFeature(this);\n        }\n    }\n}","import * as murmur from \"murmurhash-js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { Feature } from \"./feature.js\";\nimport { Registries } from \"../../game/registry/registries.js\";\nimport { ChunkInterface } from \"../../world/chunk-interface.js\";\nimport { ChunkDataReferencer } from \"../../world/chunk-data/chunk-data-referencer.js\";\nimport { TreeFeature } from \"./tree-feature.js\";\n\nexport class RockFeature implements Feature {\n    private absolute: Vector3;\n    private size: Vector3;\n    private box: [ Vector3, Vector3 ];\n\n    constructor(private position: Vector3, private chunkPosition: Vector2D, private seed: number) {\n        const x = this.position.x + this.chunkPosition.x * ChunkDataReferencer.dimensions.x;\n        const y = this.position.y;\n        const z = this.position.z + this.chunkPosition.y * ChunkDataReferencer.dimensions.z;\n\n        this.absolute = new Vector3(x, y, z);\n\n        const root = x + '.' + y + '.' + z;\n\n        this.size = new Vector3(\n            murmur.murmur3(root + ':rock.size.x', this.seed) % 1 + 5,\n            murmur.murmur3(root + ':rock.size.y', this.seed) % 1 + 5,\n            murmur.murmur3(root + ':rock.size.z', this.seed) % 1 + 5\n        );\n\n        this.box = [\n            Vector3.floor(this.absolute.plus(-this.size.x / 2, 0, -this.size.z / 2)),\n            Vector3.ceil(this.absolute.plus(this.size.x / 2, this.size.y, this.size.z / 2))\n        ];\n    }\n\n    getBoundingBox(): [ Vector3, Vector3 ] {\n        return this.box;\n    }\n\n    placeFeature(chunk: ChunkInterface): void {\n        const cobblestone = Registries.blocks.get('cobblestone');\n\n        if (!cobblestone) throw new Error(\"Cobblestone block not found\");\n\n        const chunkData = chunk.getChunkData();\n        const chunkPosition = chunk.getPosition();\n        const localPosition = this.absolute.minus(chunkPosition.x * ChunkDataReferencer.dimensions.x, 0, chunkPosition.y * ChunkDataReferencer.dimensions.z);\n\n        for (let x = Math.floor(-this.size.x / 2 + localPosition.x); x < this.size.x / 2 + localPosition.x; x++) {\n            for (let y = Math.floor(-this.size.y / 2 + localPosition.y); y < this.size.y / 2 + localPosition.y; y++) {\n                for (let z = Math.floor(-this.size.z / 2 + localPosition.z); z < this.size.z / 2 + localPosition.z; z++) {\n                    if (ChunkDataReferencer.isOutOfBounds(new Vector3(x, y, z))) continue;\n\n                    const distance = (x - this.absolute.x) ** 2 / (this.size.x / 2) ** 2 + (y - this.absolute.y) ** 2 / (this.size.y / 2) ** 2 + (z - this.absolute.z) ** 2 / (this.size.z / 2) ** 2;\n\n                    if (distance > 1) continue;\n\n                    const current = chunkData.getBlock(x, y, z);\n\n                    if (current && current.getRegisteredName() != \"air\") continue;\n\n                    chunkData.setBlock(x, y, z, cobblestone);\n                }\n            }\n        }\n    }\n\n    getFeatureHash(): number {\n        return murmur.murmur3(this.absolute.x + '.' + this.absolute.y + '.' + this.absolute.z + ':rockHash', this.seed);\n    }\n\n    doesReplace(feature: Feature): boolean {\n        return feature instanceof TreeFeature;\n    }\n}","import * as murmur from \"murmurhash-js\";\nimport { NoiseFunction2D, NoiseFunction3D, createNoise3D } from \"simplex-noise\";\nimport { Registries } from \"../../game/registry/registries.js\";\nimport { MathUtils } from \"../../utils/math-utils.js\";\nimport { ImmutableVector2D } from \"../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../utils/vector2d/vector2d.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkDataField } from \"../../world/chunk-data/chunk-data-field.js\";\nimport { ChunkDataNumberAllocation } from \"../../world/chunk-data/chunk-data-number-allocation.js\";\nimport { ChunkDataReferencer } from \"../../world/chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../../world/chunk-data/chunk-data.js\";\nimport { ChunkInterface } from \"../../world/chunk-interface.js\";\nimport { ChunkLoadQueue } from \"../../world/world-generation/chunk-load-queue.js\";\nimport { NoiseUtils } from \"../../world/world-generation/noise-utils.js\";\nimport { WorldGenerator } from \"../../world/world-generation/world-generator.js\";\nimport { World } from \"../../world/world.js\";\nimport { Feature } from \"./feature.js\";\nimport { SemiloadedChunk } from \"./semiloaded-chunk.js\";\nimport { TreeFeature } from \"./tree-feature.js\";\nimport { LoadedChunk } from \"./loaded-chunk.js\";\nimport { RockFeature } from \"./rock-feature.js\";\n\nexport class SimpleWorldGenerator implements WorldGenerator {\n    private surface2DNoise: NoiseFunction2D;\n    private surface3DNoise: NoiseFunction3D;\n    private world: World;\n\n    private caveNoises: NoiseFunction3D[];\n\n    bindWorld(world: World): void {\n        this.world = world;\n\n        this.surface2DNoise = NoiseUtils.scaledNoise2D(NoiseUtils.octavedNoise2D(4), 64);\n        this.surface3DNoise = NoiseUtils.scaledNoise3D(createNoise3D(), 32);\n\n        this.caveNoises = [ createNoise3D(), createNoise3D(), createNoise3D() ];\n    }\n\n    private phase: number = 0;\n    private phases: number = 2;\n\n    async generateChunks(maxSteps: number = 1): Promise<void> {\n        if (maxSteps == 0) return;\n\n        const loadQueue = this.world.getChunkLoadQueue();\n\n        let chunks = [ ...loadQueue.entries() ];\n\n        let steps = 0;\n        let failed = 0;\n\n        while (steps < maxSteps) {\n            const queue = chunks[this.phase];\n\n            if (!queue || queue.length == 0) {\n                if (failed >= maxSteps) break;\n\n                failed++;\n            } else {\n                if (this.phase == 0) {\n                    await this.generateInitialChunk(queue[0], loadQueue);\n\n                    steps++;\n                    failed = 0;\n                } else if (this.phase == 1) {\n                    if (await this.tryGenerateSemiloaded(queue, loadQueue)) {\n                        steps++;\n                        failed = 0;\n                    } else {\n                        failed++;\n                    }\n                }\n            }\n\n            this.phase = (this.phase + 1) % this.phases;\n        }\n    }\n\n    private async generateInitialChunk(chunk: ChunkInterface, queue: ChunkLoadQueue): Promise<void> {\n        queue.remove(chunk);\n\n        const newChunk = await this.generateTerrain(chunk.getPosition());;\n\n        newChunk.loadState.target = chunk.loadState.target;\n\n        this.world.setChunk(chunk.getPosition(), newChunk);\n        queue.add(newChunk);\n    }\n\n    private static NEIGHBORS = [\n        new ImmutableVector2D(-1, -1),\n        new ImmutableVector2D(0, -1),\n        new ImmutableVector2D(1, -1),\n        new ImmutableVector2D(-1, 0),\n        new ImmutableVector2D(1, 0),\n        new ImmutableVector2D(-1, 1),\n        new ImmutableVector2D(0, 1),\n        new ImmutableVector2D(1, 1)\n    ];\n\n    private async tryGenerateSemiloaded(entries: ChunkInterface[], queue: ChunkLoadQueue): Promise<boolean> {\n        let chunk = entries.find(chunk => chunk.loadState.current != chunk.loadState.target);\n\n        if (!chunk) return false;\n\n        queue.remove(chunk);\n\n        let features: Feature[] = [];\n        let thisPosition = chunk.getPosition();\n\n        for (let neighbor of SimpleWorldGenerator.NEIGHBORS) {\n            let neighborPosition = thisPosition.clone().add(neighbor);\n            let neighborChunk = this.world.getChunk(neighborPosition);\n\n            if (neighborChunk && (neighborChunk instanceof SemiloadedChunk || neighborChunk instanceof LoadedChunk)) {\n                features.push(...neighborChunk.getFeatures());\n            } else {\n                chunk.getWorld()?.loadChunk(neighborPosition, 1);\n\n                queue.add(chunk);\n\n                return false;\n            }\n        }\n\n        if (!(chunk instanceof SemiloadedChunk)) {\n            throw new Error(\"Chunk is not semiloaded when it should be\");\n        }\n\n        const newChunk = new LoadedChunk(chunk.getChunkData());\n\n        newChunk.storeFeatures(Feature.resolveCollisions(chunk.getFeatures(), features));\n\n        newChunk.loadState.target = chunk.loadState.target;\n\n        this.world.setChunk(chunk.getPosition(), newChunk);\n        queue.add(newChunk);\n\n        newChunk.placeFeatures(Feature.resolveCollisions(features, features));\n\n        return true;\n    }\n\n    private async generateTerrain(location: Vector2D): Promise<ChunkInterface> {\n        const semiloaded = new SemiloadedChunk(await this.generateChunk(location));\n\n        await this.addFeatures(location, semiloaded);\n\n        return semiloaded;\n    }\n\n    private async addFeatures(location: Vector2D, chunk: SemiloadedChunk) {\n        let features: Feature[] = [];\n\n        for (let i = 0; i < murmur.murmur3(location.x + '.' + location.y + ':treeCount') % 5 + 5; i++) {\n            let x = murmur.murmur3(location.x + '.' + location.y + '.' + i + ':treeX') % ChunkDataReferencer.dimensions.x;\n\n            let z = murmur.murmur3(location.x + '.' + location.y + '.' + i + ':treeZ') % ChunkDataReferencer.dimensions.z;\n\n            for (let y = ChunkDataReferencer.dimensions.y - 1; y >= 0; y--) {\n                if (chunk.getChunkData().getBlock(x, y, z) != Registries.blocks.get('air')) {\n                    features.push(new TreeFeature(new Vector3(x, y + 1, z), location, 0));\n\n                    break;\n                }\n            }\n        }\n\n        for (let i = 0; i < murmur.murmur3(location.x + '.' + location.y + ':rockCount') % 4; i++) {\n            let x = murmur.murmur3(location.x + '.' + location.y + '.' + i + ':rockX') % ChunkDataReferencer.dimensions.x;\n\n            let z = murmur.murmur3(location.x + '.' + location.y + '.' + i + ':rockZ') % ChunkDataReferencer.dimensions.z;\n\n            for (let y = ChunkDataReferencer.dimensions.y - 1; y >= 0; y--) {\n                if (chunk.getChunkData().getBlock(x, y, z) != Registries.blocks.get('air')) {\n                    features.push(new RockFeature(new Vector3(x, y + 1, z), location, 0));\n\n                    break;\n                }\n            }\n        }\n\n        chunk.storeFeatures(features);\n    }\n\n    private async createDensities(location: Vector2D, data: ChunkData) {\n        for (let x = 0; x < ChunkDataReferencer.dimensions.x; x++) {\n            for (let z = 0; z < ChunkDataReferencer.dimensions.z; z++) {\n                // Direct sample (-1 to 1)\n                let sample2d = this.surface2DNoise(x + location.x * ChunkDataReferencer.dimensions.x, z + location.y * ChunkDataReferencer.dimensions.z);\n                // Surface height (1/4 to 3/4)\n                let surface2d = MathUtils.map(sample2d, -1, 1, 0.25, 0.75);\n\n                for (let y = 0; y < ChunkDataReferencer.dimensions.y; y++) {\n                    // Fraction of the way through the chunk (0 to 1)\n                    let yFraction = MathUtils.map(y, 0, ChunkDataReferencer.dimensions.y, 0, 1);\n\n                    // Direct sample (-1 to 1)\n                    let density3d = this.surface3DNoise(\n                        x + location.x * ChunkDataReferencer.dimensions.x,\n                        y,\n                        z + location.y * ChunkDataReferencer.dimensions.z\n                    );\n\n                    // Mapped sample (-1/4 to 1/4)\n                    let density3dScaled = density3d / 4;\n                    // Surface offset (centered around 0)\n                    let surfaceOffset = surface2d - yFraction;\n\n                    let density = surfaceOffset + density3dScaled;\n\n                    data.getField('density').set(x, y, z, density);\n\n                    let cave = 0;\n\n                    for (let noise of this.caveNoises) {\n                        cave += Math.abs(noise(\n                            (x + location.x * ChunkDataReferencer.dimensions.x) / 32,\n                            y / 32,\n                            (z + location.y * ChunkDataReferencer.dimensions.z) / 32\n                        ));\n                    }\n\n                    // -1 to 1\n                    cave /= this.caveNoises.length;\n                    cave = cave ** 2 * Math.sign(cave);\n\n                    data.getField('cave').set(x, y, z, cave);\n                }\n            }\n        }\n    }\n\n    private async calculateDepth(data: ChunkData) {\n        for (let x = 0; x < ChunkDataReferencer.dimensions.x; x++) {\n            for (let z = 0; z < ChunkDataReferencer.dimensions.z; z++) {\n                let depth = 0;\n\n                for (let y = ChunkDataReferencer.dimensions.y - 1; y >= 0; y--) {\n                    let density = data.getField('density').get(x, y, z);\n\n                    depth++;\n\n                    if (density < 0) {\n                        depth = 0;\n                    }\n\n                    data.getField('depth').set(x, y, z, depth);\n                }\n            }\n        }\n    }\n\n    private async generateChunk(location: Vector2D): Promise<ChunkData> {\n        const data = new ChunkData();\n\n        const fields = new ChunkData(new Map<string, ChunkDataField<any>>([\n            [ 'density', new ChunkDataNumberAllocation('f32').instantiate() ],\n            [ 'cave', new ChunkDataNumberAllocation('f32').instantiate() ],\n            [ 'depth', new ChunkDataNumberAllocation('u8').instantiate() ]\n        ]));\n\n        const caveDensity = fields.getField('cave');\n        const depthField = fields.getField('depth');\n\n        await this.createDensities(location, fields);\n        await this.calculateDepth(fields);\n\n        const stone = Registries.blocks.get('stone');\n        const air = Registries.blocks.get('air');\n        const dirt = Registries.blocks.get('dirt');\n        const grass = Registries.blocks.get('grass');\n\n        if (!(stone && air && dirt && grass)) {\n            throw new Error(\"Blocks to not exist for simple world generator\");\n        }\n\n        for (let x = 0; x < ChunkDataReferencer.dimensions.x; x++) {\n            for (let z = 0; z < ChunkDataReferencer.dimensions.z; z++) {\n                for (let y = 0; y < ChunkDataReferencer.dimensions.y; y++) {\n                    const depth = depthField.get(x, y, z);\n                    \n                    if (depth == 0) {\n                        data.setBlock(x, y, z, air);\n                    } else if (depth == 1) {\n                        data.setBlock(x, y, z, grass);\n                    } else if (depth < 5) {\n                        data.setBlock(x, y, z, dirt);\n                    } else {\n                        data.setBlock(x, y, z, stone);\n                    }\n                }\n            }\n        }\n\n        return data;\n    }\n}","import { EventClock } from \"./event-clock.js\";\n\nexport class EventClockViewer {\n    private enabled: boolean = false;\n    private element: HTMLDivElement;\n\n    constructor(private clock: EventClock) {\n        document.addEventListener('keypress', event => {\n            if (event.code == 'KeyT' && event.altKey) {\n                this.enabled = !this.enabled;\n\n                if (this.enabled) {\n                    document.body.appendChild(this.element);\n                } else {\n                    document.body.removeChild(this.element);\n                }\n            }\n        });\n\n        this.element = document.createElement('div');\n        this.element.style.position = \"fixed\";\n        this.element.style.top = \"5px\";\n        this.element.style.left = \"5px\";\n        this.element.style.color = \"white\";\n        this.element.style.fontFamily = \"monospace\";\n        this.element.style.background = \"#00000088\";\n        this.element.style.padding = \"5px\";\n        this.element.style.borderRadius = \"5px\";\n    }\n\n    update(): void {\n        if (!this.enabled) return;\n\n        const taskInfo = this.clock.getTaskInfo();\n\n        if (taskInfo == null) return;\n\n        let text: string[] = [];\n\n        for (const task of taskInfo.tasks) {\n            text.push( `${task.name} - ${task.time}ms`);\n        }\n\n        this.element.innerText = text.join('\\n');\n    }\n}","export enum GameRuntimeType { Singleplayer, MultiplayerClient, MultiplayerServer }","import { Registries } from \"../../game/registry/registries.js\";\nimport { BlockPosition } from \"./block-position.js\";\nimport { BlockPrototype } from \"./block-prototype.js\";\n\nexport abstract class BaseBlockPrototype extends BlockPrototype {\n    instantiate(position: BlockPosition): void {\n        position.getChunkData().getField('blockId').set(position, this.getRegisteredId());\n    }\n\n    whenDestroyed(position: BlockPosition): void {\n        const empty = Registries.blocks.get('empty');\n\n        if (!empty) {\n            throw new Error(\"Empty block not found in registry\");\n        }\n\n        position.getChunkData().setBlock(position, empty);\n    }\n\n    whenUsed(position: BlockPosition): void {\n    }\n\n    whenPlaced(position: BlockPosition): void {\n    }\n\n    whenTicked(position: BlockPosition): void {\n    }\n\n    isRendered() {\n        return true;\n    }\n\n    async setup(): Promise<void> {\n    }\n}","import { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class AirPrototype extends BaseBlockPrototype {\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Air placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return null;\n    }\n}","import { IndexedRegistryItem } from \"../../game/registry/indexed-registry-item.js\";\nimport { Registries } from \"../../game/registry/registries.js\";\n\nexport class Texture extends IndexedRegistryItem {\n    private data: Uint8ClampedArray;\n    private width: number;\n    private height: number;\n\n    private constructor(data: Uint8ClampedArray, width: number, height: number) {\n        super();\n        \n        this.data = data;\n        this.width = width;\n        this.height = height;\n    }\n\n    getTextureWidth() {\n        return this.width;\n    }\n\n    getTextureHeight() {\n        return this.height;\n    }\n\n    toDataArray() {\n        return this.data;\n    }\n\n    toImageData() {\n        return new ImageData(this.data, this.width, this.height);\n    }\n\n    static fromImage(source: HTMLImageElement) {\n        const canvas = new OffscreenCanvas(source.width, source.height);\n        const context = canvas.getContext('2d')!;\n\n        context.drawImage(source, 0, 0);\n\n        const imageData = context.getImageData(0, 0, source.width, source.height);\n\n        return Texture.fromImageData(imageData);\n    }\n\n    static fromImageData(imageData: ImageData) {\n        return new Texture(imageData.data, imageData.width, imageData.height);\n    }\n\n    static fromDataArray(data: Uint8ClampedArray, width: number, height: number) {\n        return new Texture(data, width, height);\n    }\n\n    static load(name: string): Promise<Texture> {\n        if (Registries.textures.get(name)) return Promise.resolve(Registries.textures.get(name)!);\n\n        const url = '/assets/textures/' + name.replace(/\\./g, '/') + '.png';\n        \n        return new Promise((resolve, reject) => {\n            const image = new Image();\n\n            image.onload = () => {\n                const texture = Texture.fromImage(image);\n\n                Registries.textures.register(name, texture);\n\n                resolve(texture);\n            };\n\n            image.onerror = () => {\n                reject(new Error(`Failed to load image from ${url}`));\n            };\n\n            image.src = url;\n        });\n    }\n}","import { TypedArray } from \"../world/chunk-data/typed-array.js\";\n\nexport namespace DataUtils {\n    export function concat(buffers: TypedArray[]): ArrayBuffer {\n        const totalLength = buffers.reduce((total, buffer) => total + buffer.byteLength, 0);\n        const result = new Uint8Array(totalLength);\n\n        let offset = 0;\n        for (const buffer of buffers) {\n            result.set(new Uint8Array(buffer.buffer), offset);\n            offset += buffer.byteLength;\n        }\n\n        if (ENABLE_VERIFY) {\n            let index = 0;\n\n            for (const buffer of buffers) {\n                let mergeArray = new Uint8Array(buffer.buffer);\n                let resultArray = new Uint8Array(result.buffer);\n\n                for (let i = 0; i < buffer.byteLength; i++) {\n                    if (resultArray[index++] != mergeArray[i]) {\n                        throw new Error(\"Concatenation failed\");\n                    }\n                }\n            }\n        }\n        \n        return result.buffer;\n    }\n\n    const ENABLE_VERIFY = false;\n}","import { IndexedRegistryItem } from \"../../../../game/registry/indexed-registry-item.js\";\nimport { DataUtils } from \"../../../../utils/data-utils.js\";\nimport { ModelComponent } from \"./model-component.js\";\nimport { StaticModel } from \"./static-model.js\";\n\nexport class BlockModel extends IndexedRegistryItem implements StaticModel {\n    private components: Set<ModelComponent> = new Set();\n    private transparent: boolean = false;\n\n    constructor(options?: { transparent?: boolean }) {\n        super();\n\n        this.transparent = options?.transparent ?? false;\n    }\n\n    isTransparent(): boolean {\n        return this.transparent;\n    }\n\n    getVertexPositions(): Float32Array {\n        const components = Array.from(this.components);\n        const positions = components.map(component => component.getVertexPositions());\n        const buffer = DataUtils.concat(positions);\n\n        return new Float32Array(buffer);\n    }\n\n    getTextureMappings(): Float32Array {\n        const components = Array.from(this.components);\n        const textureMappings = components.map(component => component.getTextureMappings());\n        const buffer = DataUtils.concat(textureMappings);\n\n        return new Float32Array(buffer);\n    }\n\n    getTextureIds(): Uint32Array {\n        const components = Array.from(this.components);\n        const textureIds = components.map(component => component.getTextureIds());\n        const buffer = DataUtils.concat(textureIds);\n\n        return new Uint32Array(buffer);\n    }\n\n    add(...components: ModelComponent[]): void {\n        for (const component of components) {\n            this.components.add(component);\n        }\n    }\n\n    remove(...components: ModelComponent[]): void {\n        for (const component of components) {\n            this.components.delete(component);\n        }\n    }\n}","import { Vector3 } from \"../../../../../utils/vector3d/vector3.js\";\nimport { Texture } from \"../../../../utils/texture.js\";\nimport { ModelComponent } from \"../model-component.js\";\n\nexport class BoxModelComponent implements ModelComponent {\n    constructor(private dimensions: Vector3, private textures: Texture[]) {\n    }\n\n    getVertexPositions(): Float32Array {\n        const vertices = new Float32Array(BoxModelComponent.geometry.length);\n\n        for (let i = 0; i < vertices.length / 3; i++) {\n            const x = BoxModelComponent.geometry[i * 3];\n            const y = BoxModelComponent.geometry[i * 3 + 1];\n            const z = BoxModelComponent.geometry[i * 3 + 2];\n\n            vertices[i * 3] = x * this.dimensions.x;\n            vertices[i * 3 + 1] = y * this.dimensions.y;\n            vertices[i * 3 + 2] = z * this.dimensions.z;\n        }\n\n        return vertices;\n    }\n\n    getTextureMappings(): Float32Array {\n        const output = new Float32Array(12 * 6);\n\n        for (let i = 0; i < 6; i++) {\n            for (let j = 0; j < 6; j++) {\n                let texture = this.textures[i];\n                let mappings = BoxModelComponent.textureMappings[i];\n\n                if (!mappings || !texture) continue;\n\n                output[i * 12 + j * 2] = mappings[j * 2] * texture.getTextureWidth();\n                output[i * 12 + j * 2 + 1] = mappings[j * 2 + 1] * texture.getTextureHeight();\n            }\n        }\n\n        return output;\n    }\n\n    getTextureIds(): Uint32Array {\n        return new Uint32Array([\n            this.textures[0].getRegisteredId(),\n            this.textures[0].getRegisteredId(),\n            this.textures[1].getRegisteredId(),\n            this.textures[1].getRegisteredId(),\n            this.textures[2].getRegisteredId(),\n            this.textures[2].getRegisteredId(),\n            this.textures[3].getRegisteredId(),\n            this.textures[3].getRegisteredId(),\n            this.textures[4].getRegisteredId(),\n            this.textures[4].getRegisteredId(),\n            this.textures[5].getRegisteredId(),\n            this.textures[5].getRegisteredId()\n        ]);\n    }\n\n    private static geometry = new Float32Array([\n        // North face (-z)\n        1, 1, 0,\n        0, 1, 0,\n        0, 0, 0,\n\n        1, 1, 0,\n        0, 0, 0,\n        1, 0, 0,\n\n        // South face (+z)\n        0, 1, 1,\n        1, 1, 1,\n        1, 0, 1,\n\n        0, 1, 1,\n        1, 0, 1,\n        0, 0, 1,\n\n        // East face (+x)\n        1, 1, 1,\n        1, 1, 0,\n        1, 0, 0,\n\n        1, 1, 1,\n        1, 0, 0,\n        1, 0, 1,\n\n        // West face (-x)\n        0, 1, 0,\n        0, 1, 1,\n        0, 0, 1,\n\n        0, 1, 0,\n        0, 0, 1,\n        0, 0, 0,\n\n        // Up face (+y)\n        0, 1, 1,\n        0, 1, 0,\n        1, 1, 0,\n\n        1, 1, 1,\n        0, 1, 1,\n        1, 1, 0,\n\n        // Down face (-y)\n        1, 0, 1,\n        1, 0, 0,\n        0, 0, 0,\n\n        0, 0, 1,\n        1, 0, 1,\n        0, 0, 0\n    ]);\n\n    private static textureNorth = new Float32Array([\n        1, 0,\n        0, 0,\n        0, 1,\n\n        1, 0,\n        0, 1,\n        1, 1\n    ]);\n\n    private static textureSouth = new Float32Array([\n        0, 0,\n        1, 0,\n        1, 1,\n\n        0, 0,\n        1, 1,\n        0, 1\n    ]);\n\n    private static textureEast = new Float32Array([\n        1, 0,\n        0, 0,\n        0, 1,\n\n        1, 0,\n        0, 1,\n        1, 1\n    ]);\n\n    private static textureWest = new Float32Array([\n        0, 0,\n        1, 0,\n        1, 1,\n\n        0, 0,\n        1, 1,\n        0, 1\n    ]);\n\n    private static textureTop = new Float32Array([\n        1, 0,\n        1, 1,\n        0, 1,\n\n        0, 0,\n        1, 0,\n        0, 1\n    ]);\n\n    private static textureBottom = new Float32Array([\n        1, 1,\n        1, 0,\n        0, 0,\n\n        0, 1,\n        1, 1,\n        0, 0\n    ]);\n\n    private static textureMappings = [ this.textureNorth, this.textureSouth, this.textureEast, this.textureWest, this.textureTop, this.textureBottom ];\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class CobblestonePrototype extends BaseBlockPrototype {\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return CobblestonePrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static texture: Texture;\n\n    static async setup() {\n        this.texture = await Texture.load(\"blocks.cobblestone\");\n\n        this.model = new BlockModel({ transparent: true });\n\n        const box = new BoxModelComponent(\n            new Vector3(1, 1, 1),\n            new Array(6).fill(this.texture)\n        );\n\n        this.model.add(box);\n\n        Registries.blocks.register('cobblestone', new CobblestonePrototype());\n        Registries.blockModels.register('cobblestone', CobblestonePrototype.model);\n    }\n}","import { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class DirtPrototype extends BaseBlockPrototype {\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Dirt placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return DirtPrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static texture: Texture;\n\n    static async setup() {\n        this.texture = await Texture.load(\"blocks.dirt\");\n\n        this.model = new BlockModel();\n\n        const box = new BoxModelComponent(\n            new Vector3(1, 1, 1),\n            new Array(6).fill(this.texture)\n        );\n\n        this.model.add(box);\n    }\n\n    static getBlockModel() {\n        return DirtPrototype.model;\n    }\n}","import { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { RotatedModelComponent } from \"../../../render/world/model/static/component/rotated-model-component.js\";\nimport { Rotation } from \"../../../utils/rotation/rotation.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class GrassPrototype extends BaseBlockPrototype {\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Grass placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return GrassPrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static top: Texture;\n    private static side: Texture;\n    private static bottom: Texture;\n\n    static async setup() {\n        this.top = await Texture.load(\"blocks.grass.top\");\n        this.side = await Texture.load(\"blocks.grass.side\");\n        this.bottom = await Texture.load(\"blocks.dirt\");\n\n        this.model = new BlockModel();\n\n        const box = new BoxModelComponent(\n            new Vector3(1, 1, 1),\n            [ this.side, this.side, this.side, this.side, this.top, this.bottom ]\n        );\n\n        this.model.add(box);\n    }\n\n    static getBlockModel() {\n        return GrassPrototype.model;\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class LeavesPrototype extends BaseBlockPrototype {\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return LeavesPrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static texture: Texture;\n\n    static async setup() {\n        this.texture = await Texture.load(\"blocks.leaves\");\n\n        this.model = new BlockModel({ transparent: true });\n\n        const box = new BoxModelComponent(\n            new Vector3(1, 1, 1),\n            new Array(6).fill(this.texture)\n        );\n\n        this.model.add(box);\n\n        Registries.blocks.register('leaves', new LeavesPrototype());\n        Registries.blockModels.register('leaves', LeavesPrototype.model);\n    }\n}","import { Rotation } from \"../rotation/rotation.js\";\nimport { Vector3 } from \"../vector3d/vector3.js\";\n\nexport class Quaternion {\n    constructor(private x: number = 0, private y: number = 0, private z: number = 0, private w: number = 0) {\n    }\n\n    multiply(quaternion: Quaternion): this {\n        const x = this.w * quaternion.x + this.x * quaternion.w + this.y * quaternion.z - this.z * quaternion.y;\n        const y = this.w * quaternion.y + this.y * quaternion.w + this.z * quaternion.x - this.x * quaternion.z;\n        const z = this.w * quaternion.z + this.z * quaternion.w + this.x * quaternion.y - this.y * quaternion.x;\n        const w = this.w * quaternion.w - this.x * quaternion.x - this.y * quaternion.y - this.z * quaternion.z;\n\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n\n        return this;\n    }\n\n    times(quaternion: Quaternion): Quaternion {\n        return this.clone().multiply(quaternion);\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    inverse(): Quaternion {\n        let magnitude = this.magnitude();\n        let x = -this.x / magnitude;\n        let y = -this.y / magnitude;\n        let z = -this.z / magnitude;\n        let w = this.w / magnitude;\n\n        return new Quaternion(x, y, z, w);\n    }\n\n    rotate(vector: Vector3): Vector3 {\n        let quaternion = new Quaternion(vector.x, vector.y, vector.z, 0);\n        let inverse = this.clone().inverse();\n        let result = this.times(quaternion).multiply(inverse);\n\n        return new Vector3(result.x, result.y, result.z);\n    }\n\n    inverseRotate(vector: Vector3): Vector3 {\n        let quaternion = new Quaternion(vector.x, vector.y, vector.z, 0);\n        let inverse = this.clone().inverse();\n        let result = inverse.multiply(quaternion).multiply(this);\n\n        return new Vector3(result.x, result.y, result.z);\n    }\n\n    clone(): Quaternion {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n\n    toString(): string {\n        return `Quaternion { ${this.x}, ${this.y}, ${this.z}, ${this.w} }`;\n    }\n\n    equals(other: Quaternion): boolean {\n        return this.x === other.x && this.y === other.y && this.z === other.z && this.w === other.w;\n    }\n\n    static fromAxisAngle(axis: Vector3, angle: number): Quaternion {\n        let cos = Math.cos(angle / 2);\n        let sin = Math.sin(angle / 2);\n\n        return new Quaternion(axis.x * sin, axis.y * sin, axis.z * sin, cos);\n    }\n\n    static fromRotation(rotation: Rotation): Quaternion {\n        let quaternion: Quaternion | null = null;\n\n        for (const [ axis, angle ] of rotation.toAxisRotations()) {\n            let part = Quaternion.fromAxisAngle(axis, angle);\n\n            if (quaternion) quaternion.multiply(part);\n            else quaternion = part;\n        }\n\n        if (!quaternion) throw new Error('Failed to create quaternion from rotation');\n\n        return quaternion;\n    }\n}","import { Vector3 } from \"../vector3d/vector3.js\";\n\nexport class Rotation {\n    yaw: number;\n    pitch: number;\n    roll: number;\n\n    constructor(yaw = 0, pitch = 0, roll = 0) {\n        if (typeof yaw !== 'number') throw new TypeError('yaw must be a number');\n        if (typeof pitch !== 'number') throw new TypeError('pitch must be a number');\n        if (typeof roll !== 'number') throw new TypeError('roll must be a number');\n        if (isNaN(yaw)) throw new TypeError('yaw must not be NaN');\n        if (isNaN(pitch)) throw new TypeError('pitch must not be NaN');\n        if (isNaN(roll)) throw new TypeError('roll must not be NaN');\n\n        this.yaw = yaw;\n        this.pitch = pitch;\n        this.roll = roll;\n    }\n\n    set(yaw: number | Rotation, pitch?: number, roll?: number) {\n        if (typeof yaw == 'number' && typeof pitch === 'number' && typeof roll === 'number') {\n            this.yaw = yaw;\n            this.pitch = pitch;\n            this.roll = roll;\n        } else if (yaw instanceof Rotation && pitch === undefined && roll === undefined) {\n            this.yaw = yaw.yaw;\n            this.pitch = yaw.pitch;\n            this.roll = yaw.roll;\n        } else {\n            throw new Error('Invalid arguments to Rotation.set(), expected number, number, number or Rotation');\n        }\n    }\n\n    clone() {\n        return new Rotation(this.yaw, this.pitch, this.roll);\n    }\n\n    *toAxisRotations(): IterableIterator<[ Vector3, number ]> {\n        yield [ new Vector3(0, 1, 0), this.yaw ];\n        yield [ new Vector3(1, 0, 0), this.pitch ];\n        yield [ new Vector3(0, 0, 1), this.roll ];\n    }\n\n    static fromDegrees(yaw: number, pitch: number, roll: number) {\n        return new Rotation(Math.PI / 180 * yaw, Math.PI / 180 * pitch, Math.PI / 180 * roll);\n    }\n}","import { ModelComponent } from \"../model-component.js\";\n\nexport class EmptyModelComponent implements ModelComponent {\n    getVertexPositions(): Float32Array {\n        return new Float32Array();\n    }\n\n    getTextureMappings(): Float32Array {\n        return new Float32Array();\n    }\n    \n    getTextureIds(): Uint32Array {\n        return new Uint32Array();\n    }\n}","import { Quaternion } from \"../../../../../utils/quaternion/quaterion.js\";\nimport { Rotation } from \"../../../../../utils/rotation/rotation.js\";\nimport { Vector3 } from \"../../../../../utils/vector3d/vector3.js\";\nimport { ModelComponent } from \"../model-component.js\";\nimport { EmptyModelComponent } from \"./empty-model-component.js\";\n\nexport class RotatedModelComponent implements ModelComponent {\n    private quaternion: Quaternion;\n\n    constructor(rotation: Rotation | Quaternion = new Rotation(), private origin: Vector3 = new Vector3(0.5, 0.5, 0.5), private child: ModelComponent = new EmptyModelComponent()) {\n        this.quaternion = rotation instanceof Rotation ? Quaternion.fromRotation(rotation) : rotation;\n    }\n\n    add(child: ModelComponent): void {\n        this.child = child;\n    }\n\n    getVertexPositions(): Float32Array {\n        const childVertices = this.child.getVertexPositions();\n\n        for (let i = 0; i < childVertices.length / 3; i++) {\n            const x = childVertices[i * 3];\n            const y = childVertices[i * 3 + 1];\n            const z = childVertices[i * 3 + 2];\n\n            const position = this.quaternion.rotate(new Vector3(x, y, z).subtract(this.origin)).add(this.origin);\n\n            childVertices[i * 3] = position.x;\n            childVertices[i * 3 + 1] = position.y;\n            childVertices[i * 3 + 2] = position.z;\n        }\n\n        return childVertices;\n    }\n\n    getTextureMappings(): Float32Array {\n        return this.child.getTextureMappings();\n    }\n\n    getTextureIds(): Uint32Array {\n        return this.child.getTextureIds();\n    }\n}","import { Rotation } from \"../rotation/rotation.js\";\nimport { Vector3 } from \"../vector3d/vector3.js\";\n\nexport class Matrix3 {\n    constructor(public data: number[] = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]) {\n    }\n\n    multiply(vector: Vector3): Vector3;\n    multiply(matrix: Matrix3): ThisType<Matrix3>;\n    multiply(value: Vector3 | Matrix3): Vector3 | ThisType<Matrix3> {\n        if (value instanceof Vector3) {\n            return Matrix3.multiplyVector(this, value);\n        } else if (value instanceof Matrix3) {\n            return Matrix3.multiply(this, value, this);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    static multiply(matrix1: Matrix3, matrix2: Matrix3, target: Matrix3 = new Matrix3()) {\n        const a = matrix1.data;\n        const b = matrix2.data;\n        const c = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2];\n        const a10 = a[3], a11 = a[4], a12 = a[5];\n        const a20 = a[6], a21 = a[7], a22 = a[8];\n        const b00 = b[0], b01 = b[1], b02 = b[2];\n        const b10 = b[3], b11 = b[4], b12 = b[5];\n        const b20 = b[6], b21 = b[7], b22 = b[8];\n    \n        c[0] = b00 * a00 + b01 * a10 + b02 * a20;\n        c[1] = b00 * a01 + b01 * a11 + b02 * a21;\n        c[2] = b00 * a02 + b01 * a12 + b02 * a22;\n        c[3] = b10 * a00 + b11 * a10 + b12 * a20;\n        c[4] = b10 * a01 + b11 * a11 + b12 * a21;\n        c[5] = b10 * a02 + b11 * a12 + b12 * a22;\n        c[6] = b20 * a00 + b21 * a10 + b22 * a20;\n        c[7] = b20 * a01 + b21 * a11 + b22 * a21;\n        c[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n\n        return target;\n    }\n\n    static multiplyVector(matrix: Matrix3, vector: Vector3, target: Vector3 = new Vector3()) {\n        const a = matrix.data;\n        const b = vector;\n        const c = target;\n\n        const x = b.x, y = b.y, z = b.z;\n\n        c.x = a[0] * x + a[3] * y + a[6] * z;\n        c.y = a[1] * x + a[4] * y + a[7] * z;\n        c.z = a[2] * x + a[5] * y + a[8] * z;\n\n        return target;\n    }\n\n    static createRotation(rotation: Rotation, target: Matrix3 = new Matrix3()) {\n        let matrix = target || new Matrix3();\n\n        matrix.multiply(Matrix3.createRotationY(rotation.yaw));\n        matrix.multiply(Matrix3.createRotationX(rotation.pitch));\n        matrix.multiply(Matrix3.createRotationZ(rotation.roll));\n\n        return matrix;\n    }\n\n    static createRotationX(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = cos;\n        target.data[6] = sin;\n\n        target.data[8] = 0;\n        target.data[9] = -sin;\n        target.data[10] = cos;\n\n        return target;\n    }\n\n    static createRotationY(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = 0;\n        target.data[2] = -sin;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n\n        target.data[8] = sin;\n        target.data[9] = 0;\n        target.data[10] = cos;\n\n        return target;\n    }\n\n    static createRotationZ(angle: number, target: Matrix3 = new Matrix3()) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        target.data[0] = cos;\n        target.data[1] = sin;\n        target.data[2] = 0;\n\n        target.data[4] = -sin;\n        target.data[5] = cos;\n        target.data[6] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n\n        return target;\n    }\n}","import { Matrix3 } from \"../matrix/matrix3.js\";\nimport { Rotation } from \"./rotation.js\";\n\nexport enum Orientation { North = 0, East = 1, South = 2, West = 3, Up = 4, Down = 5 }\n\nexport namespace Orientation {\n    const rotations: Map<Orientation, Rotation> = new Map();\n\n    export function getRotation(orientation: Orientation): Rotation {\n        if (!rotations.has(orientation)) {\n            rotations.set(orientation, calculateRotation(orientation));\n        }\n\n        return rotations.get(orientation)!;\n    }\n\n    export function toId(orientation: Orientation): string {\n        switch (orientation) {\n            case Orientation.North: return 'north';\n            case Orientation.East: return 'east';\n            case Orientation.South: return 'south';\n            case Orientation.West: return 'west';\n            case Orientation.Up: return 'up';\n            case Orientation.Down: return 'down';\n        }\n    }\n\n    function calculateRotation(orientation: Orientation): Rotation {\n        switch (orientation) {\n            case Orientation.North: return Rotation.fromDegrees(0, 0, 0);\n            case Orientation.East: return Rotation.fromDegrees(0, 90, 0);\n            case Orientation.South: return Rotation.fromDegrees(0, 180, 0);\n            case Orientation.West: return Rotation.fromDegrees(0, 270, 0);\n            case Orientation.Up: return Rotation.fromDegrees(-90, 0, 0);\n            case Orientation.Down: return Rotation.fromDegrees(90, 0, 0);\n        }\n    }\n\n    const matrices = new Map<Orientation, Matrix3>();\n\n    export function getMatrix(orientation: Orientation): Matrix3 {\n        if (!matrices.has(orientation)) {\n            matrices.set(orientation, Matrix3.createRotation(getRotation(orientation)));\n        }\n\n        return matrices.get(orientation)!;\n    }\n}","import { Orientation } from \"./orientation.js\";\n\nexport enum Axis { X, Y, Z };\n\nexport namespace Axis {\n    export function orientation(axis: Axis): Orientation {\n        return axis == Axis.X ? Orientation.East : axis == Axis.Y ? Orientation.Up : Orientation.North;\n    }\n\n    export function name(axis: Axis): string {\n        return axis == Axis.X ? \"x\" : axis == Axis.Y ? \"y\" : \"z\";\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { RotatedModelComponent } from \"../../../render/world/model/static/component/rotated-model-component.js\";\nimport { Axis } from \"../../../utils/rotation/axis.js\";\nimport { Orientation } from \"../../../utils/rotation/orientation.js\";\nimport { Rotation } from \"../../../utils/rotation/rotation.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class LogPrototype extends BaseBlockPrototype {\n    constructor(private model: BlockModel) {\n        super();\n    }\n\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Grass placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return this.model;\n    }\n\n    static async setup() {\n        const end = await Texture.load(\"blocks.log.end\");\n        const side = await Texture.load(\"blocks.log.side\");\n\n        for (let a = 0; a < 3; a++) {\n            const axis = a as Axis;\n\n            const model = new BlockModel();\n\n            const box = new BoxModelComponent(\n                new Vector3(1, 1, 1),\n                [ side, side, side, side, end, end ]\n            );\n\n            const rotated = new RotatedModelComponent(Orientation.getRotation(Axis.orientation(axis)), new Vector3(0.5, 0.5, 0.5), box);\n\n            model.add(rotated);\n\n            Registries.blockModels.register('log.along_' + Axis.name(axis), model);\n            Registries.blocks.register('log.along_' + Axis.name(axis), new LogPrototype(model));\n        }\n    }\n}","import { Texture } from \"../../../render/utils/texture.js\";\nimport { BlockModel } from \"../../../render/world/model/static/block-model.js\";\nimport { BoxModelComponent } from \"../../../render/world/model/static/component/box-model-component.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseBlockPrototype } from \"../../../world/prototype/base-block-prototype.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\n\nexport class StonePrototype extends BaseBlockPrototype {\n    whenPlaced(position: BlockPosition): void {\n        console.log(\"Stone placed at \" + position.toString());\n    }\n\n    getBlockModel(position: BlockPosition): BlockModel | null {\n        return StonePrototype.model;\n    }\n\n    private static model: BlockModel;\n    private static texture: Texture;\n\n    static async setup() {\n        this.texture = await Texture.load(\"blocks.stone\");\n\n        this.model = new BlockModel();\n\n        const box = new BoxModelComponent(\n            new Vector3(1, 1, 1),\n            new Array(6).fill(this.texture)\n        );\n\n        this.model.add(box);\n    }\n\n    static getBlockModel() {\n        return StonePrototype.model;\n    }\n}","import { Entity } from \"../entity/entity.js\";\nimport { EntityPrototype } from \"./entity-prototype.js\";\n\nexport abstract class BaseEntityPrototype<E extends Entity> implements EntityPrototype<E> {\n    abstract createEntity(): E;\n\n    async setup(): Promise<void> {\n    }\n}","import { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { Entity } from \"../../world/entity/entity.js\";\n\nexport namespace EntityPhysics {\n    function applyGravity(entity: Entity, delta: number) {\n        const state = entity.getPhysicalState()!;\n        const properties = entity.getPhysicalProperties()!;\n\n        state.applyForce(new Vector3(0, properties.gravity * delta, 0));\n    }\n    \n    export function isOnGround(entity: Entity) {\n        return false;\n    }\n\n    function applyFriction(entity: Entity, delta: number) {\n        const state = entity.getPhysicalState()!;\n        const properties = entity.getPhysicalProperties()!;\n\n        if (isOnGround(entity)) {\n            state.applyFriction(new Vector3(\n                properties.friction.ground,\n                0,\n                properties.friction.ground\n            ));\n        } else {\n            state.applyFriction(new Vector3(\n                properties.friction.air,\n                properties.friction.air,\n                properties.friction.air\n            ));\n        }\n    }\n\n    function applyVelocity(entity: Entity, delta: number) {\n        const state = entity.getPhysicalState()!;\n\n        entity.getPosition()\n            .add(state.getVelocity().times(delta));\n    }\n\n    export function simulateEntity(entity: Entity, delta: number) {\n        if (!entity.getPhysicalState() || !entity.getPhysicalProperties()) {\n            return;\n        }\n\n        //applyGravity(entity, delta);\n        applyFriction(entity, delta);\n        applyVelocity(entity, delta);\n    }\n}","import { Vector3 } from \"../../utils/vector3d/vector3.js\";\n\nexport class PhysicalEntityState {\n    private velocity: Vector3 = new Vector3();\n\n    getVelocity(): Vector3 {\n        return this.velocity.clone();\n    }\n\n    setVelocity(velocity: Vector3) {\n        this.velocity.set(velocity);\n    }\n\n    applyForce(force: Vector3) {\n        this.velocity.add(force);\n    }\n\n    applyFriction(friction: Vector3) {\n        this.velocity.multiply(friction);\n    }\n}","import { PhysicalComponentContainer } from \"./physical-component-container.js\";\nimport { PhysicalHitbox } from \"../physical-hitbox.js\";\nimport { RayIntersectable } from \"../../raycast/ray-intersectable.js\";\nimport { RayWalker } from \"../../raycast/ray-walker.js\";\n\nexport abstract class PhysicalComponent implements PhysicalComponentContainer, RayIntersectable {\n    private parent: PhysicalComponentContainer | null = null;\n\n    protected getParent(): PhysicalComponentContainer | null {\n        return this.parent;\n    }\n\n    setParent(parent: PhysicalComponentContainer | null): void {\n        this.parent = parent;\n\n        this.parent?.updateHitboxes();\n    }\n\n    abstract updateHitboxes(): void;\n    abstract getHitboxes(): Iterable<PhysicalHitbox>;\n    \n    getIntersection(rayWalker: RayWalker): number | null {\n        let distance = Infinity;\n\n        for (let hitbox of this.getHitboxes()) {\n            let intersection = hitbox.getIntersection(rayWalker);\n\n            if (intersection !== null) {\n                distance = Math.min(distance, intersection);\n            }\n        }\n\n        return isFinite(distance) ? distance : null;\n    }\n}","import { PhysicalHitbox } from \"../physical-hitbox.js\";\nimport { PhysicalComponent } from \"./physical-component.js\";\n\nexport class BoxPhysicalComponent extends PhysicalComponent {\n    constructor(private hitbox: PhysicalHitbox) {\n        super();\n    }\n\n    updateHitboxes(): void {\n    }\n\n    *getHitboxes(): Iterable<PhysicalHitbox> {\n        yield this.hitbox;\n    }\n}","import { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { RayIntersectable } from \"../raycast/ray-intersectable.js\";\nimport { RayWalker } from \"../raycast/ray-walker.js\";\n\nexport class PhysicalHitbox implements RayIntersectable {\n    private position: Vector3;\n    private size: Vector3;\n\n    constructor(position: Vector3, size: Vector3) {\n        this.position = Vector3.immutable(position.clone());\n        this.size = Vector3.immutable(size.clone());\n    }\n\n    getPosition(): Vector3 {\n        return this.position;\n    }\n\n    getSize(): Vector3 {\n        return this.size;\n    }\n\n    getIntersection(rayWalker: RayWalker): number | null {\n        let position = rayWalker.getPosition();\n        let direction = rayWalker.getRay().getDirection();\n\n        let xDistance = this.getDistanceToEdge(position.x, direction.x, this.position.x, this.size.x);\n        let yDistance = this.getDistanceToEdge(position.y, direction.y, this.position.y, this.size.y);\n        let zDistance = this.getDistanceToEdge(position.z, direction.z, this.position.z, this.size.z);\n\n        let distance = Math.min(xDistance, yDistance, zDistance);\n\n        return isFinite(distance) ? distance : null;\n    }\n\n    private getDistanceToEdge(position: number, direction: number, thisPosition: number, thisSize: number): number {\n        if (direction === 0) {\n            return Infinity;\n        } else if (direction > 0) {\n            return (thisPosition - position) / direction;\n        } else {\n            return (thisPosition + thisSize - position) / -direction;\n        }\n    }\n}","import { RayIntersectable } from \"../raycast/ray-intersectable.js\";\nimport { RayWalker } from \"../raycast/ray-walker.js\";\nimport { PhysicalComponentContainer } from \"./component/physical-component-container.js\";\nimport { PhysicalComponent } from \"./component/physical-component.js\";\nimport { PhysicalHitbox } from \"./physical-hitbox.js\";\n\nexport class PhysicalModel implements PhysicalComponentContainer, RayIntersectable {\n    component: PhysicalComponent;\n\n    constructor(component: PhysicalComponent) {\n        this.component = component;\n    }\n\n    updateHitboxes(): void {\n    }\n\n    getHitboxes(): Iterable<PhysicalHitbox> {\n        return this.component.getHitboxes();\n    }\n\n    getIntersection(rayWalker: RayWalker): number | null {\n        let distance = Infinity;\n\n        for (let hitbox of this.getHitboxes()) {\n            let intersection = hitbox.getIntersection(rayWalker);\n\n            if (intersection !== null) {\n                distance = Math.min(distance, intersection);\n            }\n        }\n\n        return isFinite(distance) ? distance : null;\n    }\n}","import { PhysicalEntityProperties } from \"../../physics/entity/physical-entity-properties.js\";\nimport { PhysicalEntityState } from \"../../physics/entity/physical-entity-state.js\";\nimport { Rotation } from \"../../utils/rotation/rotation.js\";\nimport { Vector3 } from \"../../utils/vector3d/vector3.js\";\nimport { ChunkDataReferencer } from \"../chunk-data/chunk-data-referencer.js\";\nimport { ChunkInterface } from \"../chunk-interface.js\";\nimport { EntityPrototype } from \"../prototype/entity-prototype.js\";\nimport { World } from \"../world.js\";\nimport { Entity } from \"./entity.js\";\n\nexport abstract class BaseEntity implements Entity {\n    private id: string;\n    \n    private chunk: ChunkInterface | null;\n    private world: World | null;\n\n    private position: Vector3.Handled = Vector3.handle(new Vector3());\n    private rotation: Rotation = new Rotation();\n\n    constructor() {\n        this.position.on('change', () => {\n            // If the entity is not in a world or chunk, it doesn't need to update it's chunk\n            if (this.world && this.chunk) {\n                // Compute the location of the chunk the entity should be moved to.\n                const targetChunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n                const targetChunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n                // Get the location of the chunk object that currently contains the entity.\n                const currentChunkPosition = this.chunk.getPosition();\n                const currentChunkX = currentChunkPosition.x;\n                const currentChunkZ = currentChunkPosition.y;\n\n                // Check if the entity should move to a different chunk.\n                if (currentChunkX != targetChunkX || currentChunkZ != targetChunkZ) {\n                    // Get the chunk that the entity should be in.\n                    let chunk = this.world.getChunk(targetChunkX, targetChunkZ);\n\n                    if (!chunk) {\n                        chunk = this.world.loadChunk(targetChunkX, targetChunkZ);\n                    }\n\n                    if (chunk.loadState.current != Infinity) {\n                        chunk.loadState.target = Infinity;\n                    }\n\n                    // Update the chunk the entity is in.\n                    this.setParentChunk(chunk);\n                }\n            }\n        });\n\n        this.id = BaseEntity.generateUniqueId();\n    }\n\n    setWorld(world: World): void {\n        if (world == null) {\n            this.world = null;\n            this.chunk = null;\n\n            return;\n        }\n\n        // Set the entity's properties to be in the world.\n        this.world = world;\n        this.chunk = null;\n\n        // Compute the location of the chunk the entity should be placed in.\n        const targetChunkX = Math.floor(this.position.x / ChunkDataReferencer.dimensions.x);\n        const targetChunkZ = Math.floor(this.position.z / ChunkDataReferencer.dimensions.z);\n\n        // Get the chunk object that the entity should be placed in.\n        let targetChunk = this.world.getChunk(targetChunkX, targetChunkZ);\n\n        // If the chunk object doesn't exist and the entity can load new chunks, load the chunk.\n        if (!targetChunk && this.canLoadChunks()) {\n            this.world.loadChunk(targetChunkX, targetChunkZ);\n            \n            targetChunk = this.world.getChunk(targetChunkX, targetChunkZ);\n        }\n\n        // Update the chunk the entity is in.\n        this.setParentChunk(targetChunk);\n    }\n\n    getWorld(): World | null {\n        return this.world;\n    }\n\n    setParentChunk(chunk: ChunkInterface | null): void {\n        if (this.chunk && !this.chunk.isPlaceholder()) this.chunk.getChunkData().removeEntity(this);\n        this.chunk = chunk;\n        if (this.chunk && !this.chunk.isPlaceholder()) this.chunk.getChunkData().addEntity(this);\n    }\n\n    getParentChunk(): ChunkInterface | null {\n        return this.chunk;\n    }\n\n    async tickEntity(delta: number): Promise<void> {\n    }\n\n    getPosition(): Vector3 {\n        return this.position;\n    }\n\n    getRotation(): Rotation {\n        return this.rotation;\n    }\n\n    getUniqueId(): string {\n        return this.id;\n    }\n\n    abstract getPrototype(): EntityPrototype<BaseEntity>;\n    abstract canLoadChunks(): boolean;\n\n    getEntityModel() {\n        return null;\n    }\n\n    getPhysicalEntity() {\n        return null;\n    }\n\n    whenJoinWorld() {\n    }\n\n    getPhysicalState(): PhysicalEntityState | null {\n        return null;\n    }\n\n    getPhysicalProperties(): PhysicalEntityProperties | null {\n        return null;\n    }\n\n    static generateUniqueId(): string {\n        return crypto.randomUUID();\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { EntityPhysics } from \"../../../physics/entity/entity-physics.js\";\nimport { PhysicalEntityProperties } from \"../../../physics/entity/physical-entity-properties.js\";\nimport { PhysicalEntityState } from \"../../../physics/entity/physical-entity-state.js\";\nimport { BoxPhysicalComponent } from \"../../../physics/model/component/box-physical-component.js\";\nimport { PhysicalHitbox } from \"../../../physics/model/physical-hitbox.js\";\nimport { PhysicalModel } from \"../../../physics/model/physical-model.js\";\nimport { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { BaseEntity } from \"../../../world/entity/base-entity.js\";\nimport { EntityPrototype } from \"../../../world/prototype/entity-prototype.js\";\n\nexport class PlayerEntity extends BaseEntity {\n    private physicalState: PhysicalEntityState | null = new PhysicalEntityState();\n    private physicalProperties: PhysicalEntityProperties | null = {\n        gravity: -0.3,\n        friction: {\n            air: 0.9,\n            ground: 0.8\n        },\n        model: new PhysicalModel(\n            new BoxPhysicalComponent(\n                new PhysicalHitbox(\n                    new Vector3(0, 0, 0),\n                    new Vector3(1, 1.8, 1)\n                )\n            )\n        )\n    };\n\n    getPrototype(): EntityPrototype<BaseEntity> {\n        return Registries.entities.get('player')!;\n    }\n\n    canLoadChunks(): boolean {\n        return true;\n    }\n\n    async tickEntity(delta: number): Promise<void> {\n        super.tickEntity(delta);\n\n        EntityPhysics.simulateEntity(this, delta);\n    }\n\n    getPhysicalProperties(): PhysicalEntityProperties | null {\n        return this.physicalProperties;\n    }\n\n    getPhysicalState(): PhysicalEntityState | null {\n        return this.physicalState;\n    }\n}","import { BaseEntityPrototype } from \"../../../world/prototype/base-entity-prototype.js\";\nimport { PlayerEntity } from \"./player-entity.js\";\n\nexport class PlayerPrototype extends BaseEntityPrototype<PlayerEntity> {\n    createEntity(): PlayerEntity {\n        return new PlayerEntity();\n    }\n}","import { Registries } from \"../game/registry/registries.js\";\nimport { AirPrototype } from \"./block/air/air-prototype.js\";\nimport { CobblestonePrototype } from \"./block/cobblestone/cobblestone-prototype.js\";\nimport { DirtPrototype } from \"./block/dirt/dirt-prototype.js\";\nimport { GrassPrototype } from \"./block/grass/grass-prototype.js\";\nimport { LeavesPrototype } from \"./block/leaves/leaves-prototype.js\";\nimport { LogPrototype } from \"./block/log/log-prototype.js\";\nimport { StonePrototype } from \"./block/stone/stone-prototype.js\";\nimport { PlayerPrototype } from \"./entity/player/player-prototype.js\";\n\nexport async function loadGameContent(): Promise<void> {\n    Registries.entities.register('player', new PlayerPrototype());\n\n    await StonePrototype.setup();\n    Registries.blocks.register('stone', new StonePrototype());\n    Registries.blockModels.register('stone', StonePrototype.getBlockModel());\n\n    await DirtPrototype.setup();\n    Registries.blocks.register('dirt', new DirtPrototype());\n    Registries.blockModels.register('dirt', DirtPrototype.getBlockModel());\n\n    await GrassPrototype.setup();\n    Registries.blocks.register('grass', new GrassPrototype());\n    Registries.blockModels.register('grass', GrassPrototype.getBlockModel());\n\n    Registries.blocks.register('air', new AirPrototype());\n\n    await LogPrototype.setup();\n    await LeavesPrototype.setup();\n    await CobblestonePrototype.setup();\n}","export class EventClock {\n    private tasks: Set<{ name: string, handler: () => unknown }> = new Set();\n    private delta: number = 0;\n    private tick: number = 0;\n    private startTime: number | null = null;\n    private lastTime: number | null = null;\n    private taskInfo: EventClock.TaskInfo | null = null;\n\n    constructor() {\n    }\n\n    runOnce(name: string, task: () => unknown) {\n        const wrapper = () => {\n            task();\n\n            this.unschedule(wrapper);\n        };\n\n        this.schedule(name, wrapper);\n    }\n\n    schedule(name: string, task: () => unknown) {\n        this.tasks.add({\n            name,\n            handler: task\n        });\n    }\n\n    unschedule(identifier: string | (() => unknown)) {\n        for (const task of this.tasks) {\n            if (task.handler === identifier || task.name === identifier) {\n                this.tasks.delete(task);\n            }\n        }\n    }\n\n    getDelta() {\n        return this.delta / 1000;\n    }\n\n    getTime() {\n        if (this.startTime === null) throw new Error(\"Clock not started\");\n\n        return Date.now() - this.startTime;\n    }\n\n    getTick() {\n        return this.tick;\n    }\n\n    getTaskInfo(): EventClock.TaskInfo | null {\n        return this.taskInfo!;\n    }\n\n    async start() {\n        if (this.lastTime === null) {\n            this.lastTime = Date.now();\n            this.startTime = Date.now();\n        }\n\n        const frameDelay = Date.now() - this.lastTime;\n        const tasks: { name: string, time: number }[] = [];\n\n        for (const task of this.tasks) {\n            let start = Date.now();\n\n            await task.handler();\n\n            tasks.push({\n                name: task.name,\n                time: Date.now() - start\n            });\n        }\n\n        this.delta = Date.now() - this.lastTime;\n        this.lastTime = Date.now();\n\n        tasks.unshift({\n            name: \"frameDelay\",\n            time: frameDelay\n        });\n            \n        this.taskInfo = {\n            tasks,\n            delta: this.delta,\n            tick: this.tick,\n            time: this.getTime()\n        };\n\n        this.tick++;\n\n        requestAnimationFrame(() => this.start());\n    }\n}\n\nexport namespace EventClock {\n    export type TaskInfo = {\n        tasks: { name: string, time: number }[],\n        delta: number,\n        tick: number,\n        time: number\n    };\n}","export class InitDispatcher {\n    private tasks: Set<InitTask>;\n\n    constructor() {\n        this.tasks = new Set();\n    }\n\n    schedule(name: string, timing: InitDispatcher.Timing, func: () => Promise<unknown>): void;\n    schedule(name: string, timing: InitDispatcher.Timing): (f: () => Promise<unknown>, _context: any) => void;\n    schedule(name: string, timing: InitDispatcher.Timing, func?: () => Promise<unknown>): void | ((f: () => Promise<unknown>, _context: any) => void) {\n        if (func instanceof Function && typeof timing == 'number') {\n            this.tasks.add(new InitTask(name, func, timing));\n        } else if (typeof func == 'number') {\n            return (f: () => Promise<unknown>, _context: any) => this.schedule(name, timing, f);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    unschedule(func: () => Promise<unknown>) {\n        for (const task of this.tasks) {\n            if (task.func == func) {\n                this.tasks.delete(task);\n\n                break;\n            }\n        }\n    }\n\n    async run(): Promise<void> {\n        let start = Date.now();\n        let timings: InitTask[][] = [];\n\n        for (const task of this.tasks) {\n            timings[task.timing] = timings[task.timing] || [];\n\n            timings[task.timing].push(task);\n        }\n\n        for (const timing of timings) {\n            console.log(\"InitDispatcher: Beginning tasks of Timing.\" + timing[0].timing + \" in parallel.\");\n\n            await new Promise<void>((resolve) => {\n                let resolved = 0;\n\n                for (const task of timing) {\n                    task.func().then(() => {\n                        resolved++;\n\n                        if (resolved == timing.length) {\n                            resolve();\n                        }\n                    });\n                }\n            });\n        }\n\n        let end = Date.now();\n\n        console.log(\"Game started in \" + (end - start) + \"ms.\");\n    }\n}\n\nclass InitTask {\n    constructor(\n        public name: string,\n        public func: () => Promise<unknown>,\n        public timing: InitDispatcher.Timing\n    ) {}\n}\n\nexport namespace InitDispatcher {\n    export enum Timing {\n        Cache = \"Cache\",\n        Instantiate = \"Instantiate\",\n        Register = \"Register\",\n        Build = \"Build\"\n    }\n}","import { loadGameContent } from \"../content/content.js\";\nimport { ChunkDataNumberAllocation } from \"../world/chunk-data/chunk-data-number-allocation.js\";\nimport { World } from \"../world/world.js\";\nimport { EventClock } from \"./event-clock.js\";\nimport { GameRuntimeType } from \"./game-runtime-type.js\";\nimport { InitDispatcher } from \"./init-dispatcher.js\";\nimport { Registries } from \"./registry/registries.js\";\n\nexport abstract class Game {\n    static init = new InitDispatcher();\n\n    private world: World;\n    private clock: EventClock = new EventClock();\n\n    constructor() {\n        this.world = new World();\n    }\n\n    async start() {\n        await Game.init.run();\n\n        Registries.fields.register('blockId', new ChunkDataNumberAllocation('u16'));\n\n        await loadGameContent();\n        await Registries.blocks.setup();\n        await Registries.textures.setup();\n        await Registries.blockModels.setup();\n\n        //await new Promise(resolve => setTimeout(resolve, 10000));\n    }\n    \n    abstract getRuntimeType(): GameRuntimeType;\n\n    isGameClient(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerClient;\n    }\n\n    isGameServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isSingleplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.Singleplayer;\n    }\n\n    isMultiplayer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerClient || this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    isMultiplayerServer(): boolean {\n        return this.getRuntimeType() === GameRuntimeType.MultiplayerServer;\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    getClock(): EventClock {\n        return this.clock;\n    }\n}","export class Color {\n    constructor(public red: number, public green: number, public blue: number, public alpha: number) {\n    }\n\n    static fromHex(hex: string): Color {\n        const red = parseInt(hex.substring(1, 3), 16);\n        const green = parseInt(hex.substring(3, 5), 16);\n        const blue = parseInt(hex.substring(5, 7), 16);\n\n        return new Color(red / 255, green / 255, blue / 255, 1);\n    }\n\n    static fromRGB(red: number, green: number, blue: number): Color {\n        return new Color(red / 255, green / 255, blue / 255, 1);\n    }\n\n    static fromRGBA(red: number, green: number, blue: number, alpha: number): Color {\n        return new Color(red / 255, green / 255, blue / 255, alpha);\n    }\n\n    static toHex(color: Color): string {\n        const red = Math.round(color.red * 255).toString(16).padStart(2, \"0\");\n        const green = Math.round(color.green * 255).toString(16).padStart(2, \"0\");\n        const blue = Math.round(color.blue * 255).toString(16).padStart(2, \"0\");\n\n        return `#${red}${green}${blue}`;\n    }\n\n    static toRGB(color: Color): string {\n        const red = Math.round(color.red * 255);\n        const green = Math.round(color.green * 255);\n        const blue = Math.round(color.blue * 255);\n\n        return `rgb(${red}, ${green}, ${blue})`;\n    }\n\n    static toRGBA(color: Color): string {\n        const red = Math.round(color.red * 255);\n        const green = Math.round(color.green * 255);\n        const blue = Math.round(color.blue * 255);\n\n        return `rgba(${red}, ${green}, ${blue}, ${color.alpha})`;\n    }\n\n    static toGPUColor(color: Color): GPUColor {\n        return {\n            r: color.red,\n            g: color.green,\n            b: color.blue,\n            a: color.alpha\n        };\n    }\n\n    static blend(color1: Color, color2: Color, factor: number): Color {\n        const inverseFactor = 1 - factor;\n\n        const red = color1.red * factor + color2.red * inverseFactor;\n        const green = color1.green * factor + color2.green * inverseFactor;\n        const blue = color1.blue * factor + color2.blue * inverseFactor;\n        const alpha = color1.alpha * factor + color2.alpha * inverseFactor;\n\n        return new Color(red, green, blue, alpha);\n    }\n}","import { Axis } from \"../rotation/axis.js\";\nimport { Rotation } from \"../rotation/rotation.js\";\nimport { Vector3 } from \"../vector3d/vector3.js\";\nimport { Matrix3 } from \"./matrix3.js\";\n\nexport class Matrix4 {\n    public data: number[];\n\n    constructor(source?: number[] | Matrix3 | Matrix4) {\n        if (source instanceof Matrix3) {\n            this.data = [\n                source.data[0], source.data[1], source.data[2], 0,\n                source.data[3], source.data[4], source.data[5], 0,\n                source.data[6], source.data[7], source.data[8], 0,\n                0, 0, 0, 1\n            ];\n        } else if (source instanceof Matrix4) {\n            this.data = source.data.map(item => item);\n        } else if (source) {\n            this.data = source.map(item => item);\n        } else {\n            this.data = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n        }\n    }\n\n    multiply(vector: Vector3): Vector3;\n    multiply(matrix: Matrix4): ThisType<Matrix4>;\n    multiply(value: Vector3 | Matrix4): Vector3 | ThisType<Matrix4> {\n        if (value instanceof Vector3) {\n            return Matrix4.multiplyVector(this, value);\n        } else if (value instanceof Matrix4) {\n            return Matrix4.multiply(this, value, this);\n        } else {\n            throw new Error(\"Invalid arguments\");\n        }\n    }\n\n    get translation(): Vector3 {\n        return new Vector3(this.data[12], this.data[13], this.data[14]);\n    }\n\n    set translation(value: Vector3) {\n        this.data[12] = value.x;\n        this.data[13] = value.y;\n        this.data[14] = value.z;\n    }\n\n    static multiply(matrix1: Matrix4, matrix2: Matrix4, target: Matrix4 = new Matrix4()) {\n        const a = matrix1.data;\n        const b = matrix2.data;\n        const c = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n        const b00 = b[0], b01 = b[1], b02 = b[2], b03 = b[3];\n        const b10 = b[4], b11 = b[5], b12 = b[6], b13 = b[7];\n        const b20 = b[8], b21 = b[9], b22 = b[10], b23 = b[11];\n        const b30 = b[12], b31 = b[13], b32 = b[14], b33 = b[15];\n\n        c[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n        c[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n        c[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n        c[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n        c[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n        c[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n        c[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n        c[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n        c[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n        c[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n        c[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n        c[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n        c[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n        c[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n        c[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n        c[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n\n        return target;\n    }\n\n    static multiplyVector(matrix: Matrix4, vector: Vector3, target: Vector3 = new Vector3()) {\n        const a = matrix.data;\n        const b = vector;\n        const c = target;\n\n        const x = b.x, y = b.y, z = b.z;\n\n        c.x = a[0] * x + a[4] * y + a[8] * z + a[12];\n        c.y = a[1] * x + a[5] * y + a[9] * z + a[13];\n        c.z = a[2] * x + a[6] * y + a[10] * z + a[14];\n\n        return target;\n    }\n\n    static inverse(matrix: Matrix4, target: Matrix4 = new Matrix4()) {\n        const a = matrix.data;\n        const b = target.data;\n\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n\n        const det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n        if (!det) return null;\n\n        const invDet = 1 / det;\n\n        b[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n        b[1] = (a02 * b10 - a01 * b11 - a03 * b09) * invDet;\n        b[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n        b[3] = (a22 * b04 - a21 * b05 - a23 * b03) * invDet;\n        b[4] = (a12 * b08 - a10 * b11 - a13 * b07) * invDet;\n        b[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n        b[6] = (a32 * b02 - a30 * b05 - a33 * b01) * invDet;\n        b[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n        b[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n        b[9] = (a01 * b08 - a00 * b10 - a03 * b06) * invDet;\n        b[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n        b[11] = (a21 * b02 - a20 * b04 - a23 * b00) * invDet;\n        b[12] = (a11 * b07 - a10 * b09 - a12 * b06) * invDet;\n        b[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n        b[14] = (a31 * b01 - a30 * b03 - a32 * b00) * invDet;\n        b[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n\n        return target;\n    }\n\n    static createTranslation(vector: Vector3, target: Matrix4 = new Matrix4()) {\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n        target.data[11] = 0;\n\n        target.data[12] = vector.x;\n        target.data[13] = vector.y;\n        target.data[14] = vector.z;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createScale(vector: Vector3, target: Matrix4 = new Matrix4()) {\n        target.data[0] = vector.x;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = vector.y;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = vector.z;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n\n    static createRotation(rotation: Rotation, target: Matrix4 = new Matrix4()) {\n        let matrix = target || new Matrix4();\n\n        matrix.multiply(Matrix4.createWorldAxisRotation(Axis.Y, rotation.yaw));\n        matrix.multiply(Matrix4.createWorldAxisRotation(Axis.X, rotation.pitch));\n        matrix.multiply(Matrix4.createWorldAxisRotation(Axis.Z, rotation.roll));\n\n        return matrix;\n    }\n\n    static createWorldAxisRotation(axis: Axis, angle: number): Matrix4 {\n        const sin = Math.sin(angle);\n        const cos = Math.cos(angle);\n\n        if (axis == Axis.X) {\n            return new Matrix4([\n                1, 0, 0, 0,\n                0, cos, sin, 0,\n                0, -sin, cos, 0,\n                0, 0, 0, 1\n            ]);\n        } else if (axis == Axis.Y) {\n            return new Matrix4([\n                cos, 0, -sin, 0,\n                0, 1, 0, 0,\n                sin, 0, cos, 0,\n                0, 0, 0, 1\n            ]);\n        } else if (axis == Axis.Z) {\n            return new Matrix4([\n                cos, sin, 0, 0,\n                -sin, cos, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1\n            ]);\n        }\n\n        return new Matrix4();\n    }\n\n    static createPerspective(fov: number, aspect: number, near: number, far: number, target: Matrix4 = new Matrix4()) {\n        const f = Math.tan(Math.PI * 0.5 - 0.5 * fov);\n        const rangeInv = 1 / (near - far);\n\n        target.data[0] = f / aspect;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = f;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = far * rangeInv;\n        target.data[11] = -1;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = near * far * rangeInv;\n        target.data[15] = 0;\n\n        return target;\n    }\n\n    static identity(target?: Matrix4): Matrix4 {\n        if (!target) return new Matrix4();\n\n        target.data[0] = 1;\n        target.data[1] = 0;\n        target.data[2] = 0;\n        target.data[3] = 0;\n\n        target.data[4] = 0;\n        target.data[5] = 1;\n        target.data[6] = 0;\n        target.data[7] = 0;\n\n        target.data[8] = 0;\n        target.data[9] = 0;\n        target.data[10] = 1;\n        target.data[11] = 0;\n\n        target.data[12] = 0;\n        target.data[13] = 0;\n        target.data[14] = 0;\n        target.data[15] = 1;\n\n        return target;\n    }\n}","import { Matrix4 } from \"../../../utils/matrix/matrix4.js\";\n\nexport class Projector {\n    private projectionMatrix: Matrix4 | null = null;\n\n    constructor(private fieldOfView = Math.PI / 180 * 75, private aspect = 1, private near = 0.1, private far = 1000) {\n    }\n\n    getFieldOfView(): number {\n        return this.fieldOfView;\n    }\n\n    setFieldOfView(fieldOfView: number): void {\n        this.fieldOfView = fieldOfView;\n        this.projectionMatrix = null;\n    }\n\n    getAspectRatio(): number {\n        return this.aspect;\n    }\n\n    setAspectRatio(aspect: number): void {\n        this.aspect = aspect;\n        this.projectionMatrix = null;\n    }\n\n    getNear(): number {\n        return this.near;\n    }\n\n    setNear(near: number): void {\n        this.near = near;\n        this.projectionMatrix = null;\n    }\n\n    getFar(): number {\n        return this.far;\n    }\n\n    setFar(far: number): void {\n        this.far = far;\n        this.projectionMatrix = null;\n    }\n\n    getProjectionMatrix() {\n        if (!this.projectionMatrix) {\n            this.projectionMatrix = this.computeProjectionMatrix();\n        }\n\n        return this.projectionMatrix;\n    }\n\n    computeProjectionMatrix(): Matrix4 {\n        return Matrix4.createPerspective(this.fieldOfView, this.aspect, this.near, this.far);\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroup } from \"./bind-group.js\";\n\nexport class BindGroupManager {\n    private bindGroups: Set<BindGroup> = new Set();\n\n    async setup(device: GraphicsDevice) {\n        for (const bindGroup of this.bindGroups) {\n            await bindGroup.setup(device);\n        }\n\n        console.log(\"BindGroupManager setup\");\n        console.log(this.bindGroups);\n    }\n\n    addBindGroup(bindGroup: BindGroup) {\n        this.bindGroups.add(bindGroup);\n    }\n}","export namespace Bindings {\n    export const CameraBindGroup = 0;\n    export const CameraDataBinding = 0;\n\n    export const TerrainBindGroup = 1;\n    export const BlockModelGeometryBinding = 0;\n    export const BlockModelTextureMappingBinding = 1;\n    export const BlockModelTextureBinding = 2;\n    export const BlockModelTextureSamplerBinding = 3;\n    export const ChunkPositionBinding = 4;\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class BindGroup {\n    private entries: Set<BindGroupEntry> = new Set();\n    private layout: GPUBindGroupLayout;\n    private group: GPUBindGroup;\n    private creationStack?: string;\n\n    constructor(private index: number) {\n        this.creationStack = BindGroup.LOGGING ? new Error().stack : undefined;\n    }\n\n    async setup(device: GraphicsDevice) {\n        for (const entry of this.entries) {\n            await entry.setup(device);\n        }\n\n        const layoutEntries: GPUBindGroupLayoutEntry[] = [];\n\n        for (const entry of this.entries) {\n            layoutEntries.push(entry.getLayoutEntry());\n        }\n\n        this.layout = device.getDevice().createBindGroupLayout({\n            label: `Bind Group Layout ${this.index}`,\n            entries: layoutEntries\n        });\n\n        const bindGroupEntries: GPUBindGroupEntry[] = [];\n\n        for (const entry of this.entries) {\n            bindGroupEntries.push(entry.getBindGroupEntry());\n        }\n\n        this.group = device.getDevice().createBindGroup({\n            label: `Bind Group ${this.index}`,\n            layout: this.layout,\n            entries: bindGroupEntries\n        });\n\n        if (BindGroup.LOGGING) {\n            console.groupCollapsed(\"GPU Bind Group #\" + this.index);\n\n            console.log(this.group);\n            console.log(this.layout);\n\n            console.groupCollapsed(\"Entries\");\n\n            for (const entry of this.entries) {\n                console.groupCollapsed(entry.getLabel());\n                console.log(entry.getBindGroupEntry());\n                console.log(entry.getLayoutEntry());\n                console.log(entry);\n\n                console.groupEnd();\n            }\n\n            console.groupEnd();\n\n            console.groupCollapsed(\"Stack traces\");\n\n            if (this.creationStack) {\n                console.log(\"%cnew BindGroup()%c\\n\" + this.creationStack.split(\"\\n\").slice(1).join(\"\\n\"), \"text-decoration: underline;\", \"\");\n            }\n\n            const stack = new Error().stack;\n            if (stack) console.log(\"%cbindGroup.setup()%c\\n\" + stack.split(\"\\n\").slice(1).join(\"\\n\"), \"text-decoration: underline;\", \"\");\n\n            console.groupEnd();\n\n            console.groupEnd();\n        }\n    }\n\n    addEntry(binding: number, entry: BindGroupEntry) {\n        this.entries.add(entry);\n        entry.setBinding(binding);\n    }\n\n    getBindGroupLayout(): GPUBindGroupLayout {\n        return this.layout;\n    }\n\n    getBindGroupIndex(): number {\n        return this.index;\n    }\n\n    getBindGroup(): GPUBindGroup {\n        return this.group;\n    }\n\n    private static LOGGING = false;\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport abstract class BaseBindGroupEntry implements BindGroupEntry {\n    protected binding: number;\n    protected label: string = \"\";\n\n    setLabel(label: string): void {\n        this.label = label;\n    }\n\n    getLabel(defaultValue?: string): string {\n        return this.label + (defaultValue ? \" - \" + defaultValue : \"\") + ` (Index ${this.binding})`;\n    }\n\n    getBinding(): number {\n        return this.binding;\n    }\n\n    setBinding(index: number): void {\n        this.binding = index;\n    }\n\n    abstract setup(device: GraphicsDevice): Promise<void>;\n    abstract getLayoutEntry(): GPUBindGroupLayoutEntry;\n    abstract getBindGroupEntry(): GPUBindGroupEntry;\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BaseBindGroupEntry } from \"./base-bind-group-entry.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class BufferBindGroupEntry extends BaseBindGroupEntry {\n    constructor(private buffer: GPUBuffer, private visibility: GPUShaderStageFlags, private type: \"uniform\" | \"storage\" | \"read-only-storage\") {\n        super();\n    }\n\n    getLabel(): string {\n        return super.getLabel(\"Buffer\");\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n    }\n\n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: this.visibility,\n            buffer: {\n                type: this.type\n            }\n        };\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        return {\n            binding: this.binding,\n            resource: {\n                buffer: this.buffer\n            }\n        };\n    }\n}","import { Matrix4 } from \"../../../../utils/matrix/matrix4.js\";\nimport { Vector3 } from \"../../../../utils/vector3d/vector3.js\";\nimport { Perspective } from \"../../pespective/perspective.js\";\nimport { Projector } from \"../../pespective/projector.js\";\nimport { Bindings } from \"./bindings.js\";\nimport { BindGroup } from \"./bindings/bind-group.js\";\nimport { BufferBindGroupEntry } from \"./bindings/buffer-bind-group-entry.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class Camera {\n    private bindGroup: BindGroup;\n    private bindGroupEntry: BufferBindGroupEntry;\n    private buffer: GPUBuffer;\n    private perspective?: Perspective;\n    private projector?: Projector;\n\n    async setup(device: GraphicsDevice) {\n        this.buffer = device.getDevice().createBuffer({\n            size: 4 * 4 * 32 * 2,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n        });\n\n        this.bindGroup = new BindGroup(Bindings.CameraBindGroup);\n        this.bindGroupEntry = new BufferBindGroupEntry(this.buffer, GPUShaderStage.VERTEX, \"uniform\");\n        this.bindGroupEntry.setLabel(\"Camera\");\n        this.bindGroup.addEntry(Bindings.CameraDataBinding, this.bindGroupEntry);\n    }\n\n    setPerspective(perspective: Perspective) {\n        this.perspective = perspective;\n    }\n\n    setProjector(projector: Projector) {\n        this.projector = projector;\n    }\n\n    getCameraBindGroup(): BindGroup {\n        return this.bindGroup;\n    }\n\n    update(device: GraphicsDevice) {\n        if (!this.projector) throw new Error('Projector is not set before updating camera');\n\n        const data = new Float32Array(4 * 4);\n        \n        const viewMatrix = Matrix4.inverse(this.perspective?.getTransformationMatrix() || Matrix4.identity());\n\n        if (!viewMatrix) throw new Error('Translation matrix is not invertible');\n\n        const cameraMatrix = Matrix4.multiply(\n            this.projector.getProjectionMatrix(),\n            viewMatrix\n        );\n\n        data.set(cameraMatrix.data, 0);\n\n        if (Camera.TEST_PROJECTION) console.log(Matrix4.multiplyVector(cameraMatrix, new Vector3(0, 0, 0)));\n        if (Camera.TEST_VIEW) {\n            console.log(\n                Matrix4.multiplyVector(viewMatrix, new Vector3(0, 0, 0)),\n                Matrix4.multiplyVector(viewMatrix, new Vector3(1, 0, 0)),\n                Matrix4.multiplyVector(viewMatrix, new Vector3(0, 0, 1))\n            );\n        }\n\n        device.getDevice().queue.writeBuffer(this.buffer, 0, data);\n    }\n\n    getDataBuffer(): GPUBuffer {\n        return this.buffer;\n    }\n\n    private static TEST_PROJECTION = false;\n    private static TEST_VIEW = false;\n}","import { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class DepthTexture {\n    private texture: GPUTexture;\n    private device: GraphicsDevice;\n    private width: number;\n    private height: number;\n    private view: GPUTextureView;\n\n    async resize(width: number, height: number) {\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n\n        if (this.texture) this.texture.destroy();\n\n        this.texture = this.device.getDevice().createTexture({\n            label: \"Depth Texture\",\n            format: 'depth24plus',\n            size: [ this.width, this.height],\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n            sampleCount: this.device.getRenderer().getMultisampleTexture().getSampleCount()\n        });\n\n        this.view = this.texture.createView({ label: \"Depth Texture [View]\" });\n    }\n\n    async setup(device: GraphicsDevice) {\n        this.device = device;\n    }\n\n    addToPipelineDescriptor(descriptor: Partial<GPURenderPipelineDescriptor>) {\n        descriptor.depthStencil = {\n            format: 'depth24plus',\n            depthWriteEnabled: true,\n            depthCompare: 'less'\n        };\n    }\n\n    addToRenderPassDescriptor(descriptor: Partial<GPURenderPassDescriptor>) {\n        descriptor.depthStencilAttachment = {\n            view: this.view,\n            depthLoadOp: 'load',\n            depthStoreOp: 'store'\n        };\n    }\n\n    createView(): GPUTextureView {\n        return this.view;\n    }\n}","import { WebGPURenderer } from \"./webgpu-renderer.js\";\n\nexport class GraphicsDevice {\n    private device: GPUDevice;\n    private adapter: GPUAdapter;\n    private context: GPUCanvasContext;\n\n    constructor(private canvas: HTMLCanvasElement, private renderer: WebGPURenderer) {\n    }\n\n    async setup() {\n        console.log(\"Initializing WebGPU\");\n\n        if (!navigator.gpu) {\n            throw new Error('WebGPU is not supported');\n        }\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) {\n            throw new Error('No useable adapter found');\n        }\n\n        this.adapter = adapter;\n\n        this.device = await adapter.requestDevice();\n\n        this.context = this.canvas.getContext('webgpu') as GPUCanvasContext;\n\n        this.context.configure({\n            device: this.device,\n            format: navigator.gpu.getPreferredCanvasFormat(),\n            alphaMode: 'premultiplied'\n        });\n    }\n\n    getDevice(): GPUDevice {\n        return this.device;\n    }\n\n    getContext(): GPUCanvasContext {\n        return this.context;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this.canvas;\n    }\n\n    getAdapter(): GPUAdapter {\n        return this.adapter;\n    }\n\n    getRenderer(): WebGPURenderer {\n        return this.renderer;\n    }\n}","import { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class MultisampleTexture {\n    private texture: GPUTexture;\n    private device: GraphicsDevice;\n    private width: number;\n    private height: number;\n    private view: GPUTextureView;\n\n    async resize(width: number, height: number) {\n        if (!MultisampleTexture.ENABLED) return;\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n\n        let newTexture = this.texture;\n\n        newTexture = this.device.getDevice().createTexture({\n            label: \"Multisample Texture\",\n            format: 'bgra8unorm',\n            size: [ this.width, this.height],\n            usage: GPUTextureUsage.RENDER_ATTACHMENT,\n            sampleCount: 4\n        });\n\n        let oldTexture = this.texture;\n\n        this.view = newTexture.createView({ label: \"Multisample Texture [View]\" });\n        this.texture = newTexture;\n\n        if (oldTexture) {\n            oldTexture.destroy();\n        }\n    }\n\n    async setup(device: GraphicsDevice) {\n        this.device = device;\n    }\n\n    addToAttachment(source: Partial<GPURenderPassColorAttachment> = {}): Partial<GPURenderPassColorAttachment> {\n        const canvasTextureView = this.device.getContext().getCurrentTexture().createView({ label: \"Canvas Texture [View]\" });\n\n        return Object.assign(source, MultisampleTexture.ENABLED ? {\n            view: this.view,\n            resolveTarget: canvasTextureView\n        } : {\n            view: canvasTextureView\n        });\n    }\n    \n    getSampleCount() {\n        return MultisampleTexture.ENABLED ? 4 : 1;\n    }\n\n    public static ENABLED: boolean = false;\n}","import { Color } from \"../../../../utils/color.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { RenderPass } from \"./render-pass.js\";\n\nexport class ClearRenderPass implements RenderPass {\n    private device: GraphicsDevice;\n\n    constructor(private color: Color) {\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        this.device = device;\n    }\n\n    async setupBindings(device: GraphicsDevice): Promise<void> {\n    }\n\n    async render(): Promise<void> {\n        const commandEncoder = this.device.getDevice().createCommandEncoder({\n            label: \"Clear Render Pass / Command Encoder\"\n        });\n\n        const renderPassDescriptor: GPURenderPassDescriptor = {\n            colorAttachments: [\n                this.device.getRenderer().getMultisampleTexture().addToAttachment({\n                    clearValue: Color.toGPUColor(this.color),\n                    loadOp: \"clear\",\n                    storeOp: \"store\"\n                }) as GPURenderPassColorAttachment\n            ],\n            depthStencilAttachment: {\n                view: this.device.getRenderer().getDepthTexture().createView(),\n                depthClearValue: 1.0,\n                depthLoadOp: 'clear',\n                depthStoreOp: 'store'\n            }\n        };\n\n        const renderPass = commandEncoder.beginRenderPass(renderPassDescriptor);\n\n        renderPass.end();\n\n        this.device.getDevice().queue.submit([ commandEncoder.finish() ]);\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BaseBindGroupEntry } from \"./base-bind-group-entry.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\n\nexport class TextureSampler extends BaseBindGroupEntry {\n    private sampler: GPUSampler;\n\n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: GPUShaderStage.FRAGMENT,\n            sampler: {}\n        };\n    }\n\n    getLabel(): string {\n        return super.getLabel(\"Texture Sampler\");\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        return {\n            binding: this.binding,\n            resource: this.sampler\n        };\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        this.sampler = device.getDevice().createSampler({\n            magFilter: 'nearest',\n            minFilter: 'nearest',\n            mipmapFilter: 'nearest',\n            lodMinClamp: 0,\n            lodMaxClamp: 0\n        });\n    }\n}","import { Texture } from \"../../../../utils/texture.js\";\nimport { BindGroupEntry } from \"./bind-group-entry.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { BaseBindGroupEntry } from \"./base-bind-group-entry.js\";\n\nexport class WebGPUTexture extends BaseBindGroupEntry {\n    private texture: GPUTexture | null = null;\n\n    constructor(private source: Texture) {\n        super();\n    }\n\n    getLabel(): string {\n        return super.getLabel(\"Texture\");\n    }\n    \n    getLayoutEntry(): GPUBindGroupLayoutEntry {\n        return {\n            binding: this.binding,\n            visibility: GPUShaderStage.FRAGMENT,\n            texture: {\n                sampleType: 'float',\n                viewDimension: '2d'\n            }\n        };\n    }\n\n    getBindGroupEntry(): GPUBindGroupEntry {\n        if (!this.texture) {\n            throw new Error('Texture not initialized');\n        }\n\n        return {\n            binding: this.binding,\n            resource: this.texture.createView({ label: this.getLabel() + ' [View]'})\n        };\n    }\n\n    getTexture(): GPUTexture {\n        if (!this.texture) {\n            throw new Error('Texture not initialized');\n        }\n\n        return this.texture;\n    }\n\n    getBinding(): number {\n        return this.binding;\n    }\n\n    async setup(device: GraphicsDevice) {\n        this.texture = device.getDevice().createTexture({\n            label: this.label,\n            size: [\n                this.source.getTextureWidth(),\n                this.source.getTextureHeight()\n            ],\n            format: 'rgba8unorm',\n            usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING\n        });\n\n        device.getDevice().queue.writeTexture(\n            { texture: this.texture },\n            this.source.toDataArray(),\n            { bytesPerRow: this.source.getTextureWidth() * 4, rowsPerImage: this.source.getTextureHeight() },\n            [ this.source.getTextureWidth(), this.source.getTextureHeight() ]\n        );\n    }\n}","export namespace BufferAlignment {\n    export function alignItems(data: ArrayBuffer, size: number, alignedSize: number): ArrayBuffer {\n        let dataArray = new Uint8Array(data);\n        let items = dataArray.length / size;\n        let alignedArray = new Uint8Array(items * (alignedSize));\n\n        for (let i = 0; i < items; i++) {\n            let offset = i * size;\n            let alignedOffset = i * alignedSize;\n\n            alignedArray.set(dataArray.slice(offset, offset + size), alignedOffset);\n        }\n\n        return alignedArray.buffer;\n    }\n}","import { GraphicsDevice } from \"./graphics-device.js\";\n\nexport class ShaderModule {\n    private shaderModule: GPUShaderModule;\n\n    constructor(private label: string, private code: string) {\n    }\n\n    setup(graphicsDevice: GraphicsDevice): void {\n        this.shaderModule = graphicsDevice.getDevice().createShaderModule({\n            label: this.label,\n            code: this.code\n        });\n    }\n\n    getShaderModule(): GPUShaderModule {\n        return this.shaderModule;\n    }\n\n    static async import(path: string, label: string = path): Promise<ShaderModule> {\n        const response = await fetch(path);\n        const code = await response.text();\n\n        return new ShaderModule(label, code);\n    }\n}","import { GraphicsDevice } from \"../graphics-device.js\";\nimport { BindGroupManager } from \"./bind-group-manager.js\";\nimport { BindGroup } from \"./bind-group.js\";\n\nexport class PipelineBindGroupManager {\n    private parent: BindGroupManager;\n    private usedGroups: Set<BindGroup> = new Set();\n\n    constructor(parent: BindGroupManager) {\n        this.parent = parent;\n    }\n\n    useBindGroup(bindGroup: BindGroup): void {\n        this.parent.addBindGroup(bindGroup);\n        this.usedGroups.add(bindGroup);\n    }\n\n    addBindGroupsToPipelineLayout(pipelineLayout: Partial<GPUPipelineLayoutDescriptor>) {\n        const bindGroupLayouts: GPUBindGroupLayout[] = [];\n\n        for (const bindGroup of this.usedGroups) {\n            bindGroupLayouts.push(bindGroup.getBindGroupLayout());\n        }\n\n        pipelineLayout.bindGroupLayouts = bindGroupLayouts;\n    }\n\n    setBindGroupsOnRenderPassEncoder(encoder: GPURenderPassEncoder) {\n        for (const bindGroup of this.usedGroups) {\n            encoder.setBindGroup(bindGroup.getBindGroupIndex(), bindGroup.getBindGroup());\n        }\n    }\n}","import { PipelineBindGroupManager } from \"../bindings/pipeline-bind-group-manager.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { RenderPass } from \"./render-pass.js\";\nimport { ShaderModule } from \"../shader-module.js\";\nimport { BindGroupManager } from \"../bindings/bind-group-manager.js\";\n\nexport abstract class BaseRenderPass implements RenderPass {\n    private pipeline: GPURenderPipeline;\n    private descriptor: Partial<GPURenderPipelineDescriptor> = {};\n    private pipelineLayout: GPUPipelineLayout;\n    private bindGroupManager: PipelineBindGroupManager;\n    private device: GraphicsDevice;\n    protected depthTest: boolean = false;\n    protected alpha: boolean = false;\n\n    setBindGroupManager(bindGroupManager: BindGroupManager) {\n        this.bindGroupManager = new PipelineBindGroupManager(bindGroupManager);\n    }\n\n    async setup(device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        this.descriptor.multisample = {\n            count: device.getRenderer().getMultisampleTexture().getSampleCount()\n        };\n\n        const layoutDescriptor: Partial<GPUPipelineLayoutDescriptor> = {};\n\n        this.bindGroupManager.addBindGroupsToPipelineLayout(layoutDescriptor);\n\n        this.pipelineLayout = gpuDevice.createPipelineLayout(layoutDescriptor as GPUPipelineLayoutDescriptor);\n\n        this.descriptor.layout = this.pipelineLayout;\n\n        if (this.depthTest) {\n            device.getRenderer().getDepthTexture().addToPipelineDescriptor(this.descriptor);\n        }\n\n        this.pipeline = gpuDevice.createRenderPipeline(this.descriptor as GPURenderPipelineDescriptor);\n\n        this.device = device;\n    }\n\n    async setupBindings(device: GraphicsDevice) {\n    }\n\n    protected addLabel(label: string) {\n        this.descriptor.label = label;\n    }\n\n    protected addVertexStage(module: ShaderModule, entryPoint: string) {\n        this.descriptor.vertex = {\n            module: module.getShaderModule(),\n            entryPoint\n        };\n    }\n\n    protected addFragmentStage(module: ShaderModule, entryPoint: string) {\n        let target: GPUColorTargetState = {\n            format: navigator.gpu.getPreferredCanvasFormat()\n        };\n\n        if (this.alpha) {\n            target.blend = {\n                color: {\n                    srcFactor: \"src-alpha\",\n                    dstFactor: \"one-minus-src-alpha\",\n                    operation: \"add\"\n                },\n                alpha: {\n                    srcFactor: \"src-alpha\",\n                    dstFactor: \"one-minus-src-alpha\",\n                    operation: \"add\"\n                }\n            };\n        }\n\n        this.descriptor.fragment = {\n            module: module.getShaderModule(),\n            entryPoint,\n            targets: [\n                target\n            ]   \n        };\n    }\n\n    protected addPrimitiveTopology(topology: GPUPrimitiveTopology, cullMode: GPUCullMode = \"none\") {\n        this.descriptor.primitive = {\n            topology,\n            cullMode\n        };\n    }\n\n    protected getBindGroupManager(): PipelineBindGroupManager {\n        return this.bindGroupManager;\n    }\n\n    protected getPipelineLayout(): GPUPipelineLayout {\n        return this.pipelineLayout;\n    }\n\n    protected createCommandEncoder(passLabel: string): GPUCommandEncoder {\n        return this.device.getDevice().createCommandEncoder({\n            label: `${passLabel} / Command Encoder`\n        });\n    }\n\n    protected createRenderPass(commandEncoder: GPUCommandEncoder): GPURenderPassEncoder {\n        const renderPassDescriptor: Partial<GPURenderPassDescriptor> = {\n            colorAttachments: [\n                this.device.getRenderer().getMultisampleTexture().addToAttachment({\n                    loadOp: \"load\",\n                    storeOp: \"store\"\n                }) as GPURenderPassColorAttachment\n            ]\n        };\n\n        if (this.depthTest) {\n            this.device.getRenderer().getDepthTexture().addToRenderPassDescriptor(renderPassDescriptor);\n        }\n\n        const renderPass = commandEncoder.beginRenderPass(renderPassDescriptor as GPURenderPassDescriptor);\n\n        this.bindGroupManager.setBindGroupsOnRenderPassEncoder(renderPass);\n        renderPass.setPipeline(this.pipeline);\n\n        return renderPass;\n    }\n\n    abstract render(): Promise<void>;\n\n    protected getGraphicsDevice(): GraphicsDevice {\n        return this.device;\n    }\n}","import { ChunkDataReferencer } from \"../../../../../world/chunk-data/chunk-data-referencer.js\";\nimport { Bindings } from \"../bindings.js\";\nimport { BindGroup } from \"../bindings/bind-group.js\";\nimport { BufferBindGroupEntry } from \"../bindings/buffer-bind-group-entry.js\";\nimport { TextureSampler } from \"../bindings/texture-sampler.js\";\nimport { WebGPUTexture } from \"../bindings/webgpu-texture.js\";\nimport { BufferAlignment } from \"../buffer-alignment.js\";\nimport { GraphicsDevice } from \"../graphics-device.js\";\nimport { ShaderModule } from \"../shader-module.js\";\nimport { WebGPUWorldMirror } from \"../webgpu-world-mirror.js\";\nimport { BaseRenderPass } from \"./base-render-pass.js\";\n\nexport class TerrainRenderPass extends BaseRenderPass {\n    private indirectDrawBuffer: GPUBuffer;\n    private chunkPositionBuffer: GPUBuffer;\n    protected depthTest = true;\n    protected depthBufferFactor = 0.0;\n    \n    constructor(private worldMirror: WebGPUWorldMirror) {\n        super();\n    }\n\n    async setupBindings(device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        this.indirectDrawBuffer = gpuDevice.createBuffer({\n            label: \"Terrain Indirect Draw Buffer\",\n            usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n            size: ChunkDataReferencer.cells * 4 * 4\n        });\n\n        const shader = await ShaderModule.import(\"/assets/shaders/terrain.wgsl\", \"Terrain Shader\");\n\n        shader.setup(device);\n\n        this.addPrimitiveTopology(\"triangle-list\", \"front\");\n        this.addLabel(\"Terrain Render Pass\");\n        this.addVertexStage(shader, \"vertex_main\");\n        this.addFragmentStage(shader, \"fragment_main\");\n\n        this.getBindGroupManager().useBindGroup(device.getRenderer().getCamera().getCameraBindGroup());\n\n        await this.setupBlockModelBindings(device);\n    }\n\n    private async setupBlockModelBindings(device: GraphicsDevice) {\n        const terrainBindGroup = new BindGroup(Bindings.TerrainBindGroup);\n\n        await this.setupGeometryBindings(terrainBindGroup, device);\n        await this.setupTextureMappingBindings(terrainBindGroup, device);\n        await this.setupTextureBindings(terrainBindGroup, device);\n        await this.setupTextureSamplerBindings(terrainBindGroup, device);\n        await this.setupChunkPositionBindings(terrainBindGroup, device);\n\n        this.getBindGroupManager().useBindGroup(terrainBindGroup);\n\n        // const configureBindGroup = new BindGroup(2);\n\n        // configureBindGroup.addEntry(0, new );\n    }\n\n    private async setupGeometryBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const geometryData = this.worldMirror.getTerrainMesh().getVertexPositions().buffer;\n        const alignedData = BufferAlignment.alignItems(geometryData, 12, 16);\n        const geometryBuffer = gpuDevice.createBuffer({\n            label: \"Block Geometry Buffer\",\n            size: alignedData.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST\n        });\n\n        gpuDevice.queue.writeBuffer(geometryBuffer, 0, alignedData);\n\n        const geometryBindGroupEntry = new BufferBindGroupEntry(geometryBuffer, GPUShaderStage.VERTEX, \"read-only-storage\");\n        geometryBindGroupEntry.setLabel(\"Block Geometry\");\n        bindGroup.addEntry(Bindings.BlockModelGeometryBinding, geometryBindGroupEntry);\n    }\n\n    private async setupTextureMappingBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const textureMappingData = this.worldMirror.getTerrainMesh().getTextureMappings();\n        const textureMappingBuffer = gpuDevice.createBuffer({\n            label: \"Block Texture Mapping Buffer\",\n            size: textureMappingData.byteLength,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST\n        });\n\n        gpuDevice.queue.writeBuffer(textureMappingBuffer, 0, textureMappingData);\n\n        const textureMappingBindGroupEntry = new BufferBindGroupEntry(textureMappingBuffer, GPUShaderStage.VERTEX, \"read-only-storage\");\n        textureMappingBindGroupEntry.setLabel(\"Block Texture Mapping\");\n        bindGroup.addEntry(Bindings.BlockModelTextureMappingBinding, textureMappingBindGroupEntry);\n    }\n\n    private async setupTextureBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const texture = this.worldMirror.getTerrainMesh().getTexture();\n        const gpuTexture = new WebGPUTexture(texture);\n        gpuTexture.setLabel(\"Block Texture Atlas\");\n        bindGroup.addEntry(Bindings.BlockModelTextureBinding, gpuTexture);\n    }\n\n    private async setupTextureSamplerBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const textureSampler = new TextureSampler();\n        textureSampler.setLabel(\"Block Texture Sampler\");\n        bindGroup.addEntry(Bindings.BlockModelTextureSamplerBinding, textureSampler);\n    }\n\n    private async setupChunkPositionBindings(bindGroup: BindGroup, device: GraphicsDevice) {\n        const gpuDevice = device.getDevice();\n\n        const buffer = gpuDevice.createBuffer({\n            label: \"Chunk Position\",\n            size: 8,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\n        });\n\n        const entry = new BufferBindGroupEntry(buffer, GPUShaderStage.VERTEX, \"uniform\");\n        entry.setLabel(\"Chunk Position\");\n        bindGroup.addEntry(Bindings.ChunkPositionBinding, entry);\n\n        this.chunkPositionBuffer = buffer;\n    }\n\n    async render(): Promise<void> {\n        const gpuDevice = this.getGraphicsDevice().getDevice();\n\n        for (const chunk of this.worldMirror.getVisibleChunks()) {\n            const commandEncoder = this.createCommandEncoder(\"Terrain Render Pass\");\n            const renderPass = this.createRenderPass(commandEncoder);\n\n            gpuDevice.queue.writeBuffer(this.chunkPositionBuffer, 0, new Float32Array(chunk.getPosition()));\n\n            this._draw(renderPass, gpuDevice, chunk.getIndirectDrawCalls(), chunk.getIndirectCallCount());\n\n            renderPass.end();\n            gpuDevice.queue.submit([ commandEncoder.finish() ]);\n        }\n    }\n\n    private _draw(renderPass: GPURenderPassEncoder, gpuDevice: GPUDevice, drawCalls: Uint32Array, callsLength: number) {\n        if (!TerrainRenderPass.DISABLE_INDIRECT_DRAWING) {\n            gpuDevice.queue.writeBuffer(this.indirectDrawBuffer, 0, drawCalls, 0, callsLength * 16);\n\n            for (let i = 0; i < callsLength; i++) {\n                renderPass.drawIndirect(this.indirectDrawBuffer, 4 * 4 * i);\n            }\n        } else {\n            for (let i = 0; i < drawCalls.length; i += 4) {\n                const vertexCount = drawCalls[i + 0];\n                const instanceCount = drawCalls[i + 1];\n                const firstVertex = drawCalls[i + 2];\n                const firstInstance = drawCalls[i + 3];\n\n                if (vertexCount === 0 || instanceCount === 0) continue;\n\n                renderPass.draw(vertexCount, instanceCount, firstVertex, firstInstance);\n            }\n        }\n    }\n\n    private static DISABLE_INDIRECT_DRAWING = true;\n}","import { ImmutableVector2D } from \"../../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { World } from \"../../../world/world.js\";\nimport { Perspective } from \"../pespective/perspective.js\";\nimport { RenderChunkMirror } from \"./render-chunk-mirror.js\";\n\nexport abstract class RenderWorldMirror<M extends RenderChunkMirror> {\n    private chunks: Map<string, M> = new Map();\n\n    protected getChunks(): Iterable<M> {\n        return this.chunks.values();\n    }\n\n    updateRenderedWorld() {\n        const perspective = this.getPerspective();\n\n        if (!perspective) {\n            throw new Error(\"Cannot update rendered world without perspective\");\n        }\n\n        const world = this.getWorld();\n        const perspectiveLocation = perspective.getChunkLocation();\n        const renderDistance = perspective.getRenderDistance();\n        const renderDistanceSquared = renderDistance ** 2;\n\n        for (const [ key, mirror ] of this.chunks) {\n            const chunk = world.getChunk(mirror.getPosition());\n\n            if (!chunk) continue;\n            if (chunk.isPlaceholder()) continue;\n\n            const chunkPosition = chunk.getPosition();\n\n            if (chunkPosition.distanceSquaredTo(perspectiveLocation) > renderDistanceSquared) {\n                this.chunks.delete(key);\n            }\n        }\n\n        for (let x = perspectiveLocation.x - renderDistance; x <= perspectiveLocation.x + renderDistance; x++) {\n            for (let z = perspectiveLocation.y - renderDistance; z <= perspectiveLocation.y + renderDistance; z++) {\n                const chunk = world.getChunk(x, z);\n\n                if (!chunk || chunk.loadState.current != Infinity) {\n                    continue;\n                }\n\n                const key = x + '.' + z;\n                const position = new ImmutableVector2D(x, z);\n\n                if (!this.chunks.has(key)) {\n                    this.chunks.set(key, this.createRenderChunkMirror(position));\n                }\n            }\n        }\n    }\n\n    protected abstract createRenderChunkMirror(position: Vector2D): M;\n    \n    abstract getWorld(): World;\n    abstract getPerspective(): Perspective;\n    abstract getVisibleChunks(): Iterable<M>;\n}","import { Texture } from \"../../utils/texture.js\";\nimport { StaticModel } from \"../model/static/static-model.js\";\n\nexport class AssembledMesh {\n    constructor(\n        private vertexPositions: Float32Array,\n        private textureMappings: Float32Array,\n        private texture: Texture,\n        private indexes: Map<StaticModel, [ number, number ]>\n    ) {\n    }\n\n    getVertexPositions(): Float32Array {\n        return this.vertexPositions;\n    }\n\n    getTextureMappings(): Float32Array {\n        return this.textureMappings;\n    }\n\n    getTexture(): Texture {\n        return this.texture;\n    }\n\n    getModelStartIndex(model: StaticModel): number {\n        if (!this.indexes.has(model)) throw new Error('Model not found in mesh assembler');\n\n        return this.indexes.get(model)![0];\n    }\n\n    getModelEndIndex(model: StaticModel): number {\n        if (!this.indexes.has(model)) throw new Error('Model not found in mesh assembler');\n\n        return this.indexes.get(model)![1];\n    }\n}","import { Registries } from \"../../../game/registry/registries.js\";\nimport { DataUtils } from \"../../../utils/data-utils.js\";\nimport { ImmutableVector2D } from \"../../../utils/vector2d/immutable-vector2d.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { Texture } from \"../../utils/texture.js\";\nimport { AssembledMesh } from \"./assembled-mesh.js\";\nimport { StaticModel } from \"../model/static/static-model.js\";\n\nexport class MeshAssembler {\n    private models: StaticModel[];\n    private vertexPositions: Float32Array;\n    private textureMappings: Float32Array;\n    private texture: Texture;\n    private modelIndexes: Map<StaticModel, [ number, number ]>;\n\n    constructor(models: Iterable<StaticModel>) {\n        this.models = Array.from(models);\n    }\n\n    private setupModelsAndIndexes() {\n        if (MeshAssembler.PRINT_OUTPUT) {\n            console.groupCollapsed(\"Models\");\n        }\n\n        this.modelIndexes = new Map();\n\n        const modelVertexPositions: Float32Array[] = [];\n        const modelTextureMappings: Float32Array[] = [];\n        const modelTextureIds: Uint32Array[] = [];\n\n        let modelIndex = 0;\n        let vertexIndex = 0;\n\n        for (const model of this.models) {\n            const vertexPositions = model.getVertexPositions();\n            const textureMappings = model.getTextureMappings();\n            const textureIds = model.getTextureIds();\n\n            const startIndex = vertexIndex;\n\n            modelVertexPositions.push(vertexPositions);\n            modelTextureMappings.push(textureMappings);\n            modelTextureIds.push(textureIds);\n\n            if (MeshAssembler.PRINT_OUTPUT) {\n                console.groupCollapsed(`Model ${modelIndex}: ${model.getRegisteredName()}`);\n\n                console.groupCollapsed(\"Vertex positions\");\n                console.log(vertexPositions);\n                console.groupEnd();\n\n                console.groupCollapsed(\"Texture mappings\");\n                console.log(textureMappings);\n                console.groupEnd();\n\n                console.groupCollapsed(\"Texture ids\");\n                console.log(textureIds);\n                console.groupEnd();\n\n                console.groupEnd();\n            }\n\n            vertexIndex += vertexPositions.length / 3;\n\n            const endIndex = vertexIndex;\n\n            this.modelIndexes.set(model, [ startIndex, endIndex ]);\n\n            modelIndex++;\n        }\n\n        if (MeshAssembler.PRINT_OUTPUT) {\n            console.groupEnd();\n        }\n\n        return {\n            modelGeometries: modelVertexPositions,\n            modelTextureMappings: modelTextureMappings,\n            modelTextureIds: modelTextureIds,\n            totalVertexCount: vertexIndex\n        }\n    }\n\n    assembleMeshes(): AssembledMesh {\n        if (this.texture) {\n            return this.createAssembledMesh();\n        }\n\n        if (MeshAssembler.PRINT_OUTPUT) {\n            console.groupCollapsed(\"Assembled mesh\");\n        }\n\n        const {\n            modelGeometries,\n            modelTextureMappings,\n            modelTextureIds,\n            totalVertexCount\n        } = this.setupModelsAndIndexes();\n\n        this.vertexPositions = new Float32Array(DataUtils.concat(modelGeometries));\n        \n        const textureArray = this.getTextureArrayFromModelTextureIds(modelTextureIds);\n        const combinedSize = this.getCombinedTextureSize(textureArray);\n\n        const { texturePositions, texture } = this.renderCombinedTextures(combinedSize, textureArray);\n        this.texture = texture;\n\n        this.textureMappings = new Float32Array(totalVertexCount * 2);\n\n        for (let modelIndex = 0; modelIndex < modelTextureIds.length; modelIndex++) {\n            const modelIndexes = this.modelIndexes.get(this.models[modelIndex]);\n\n            if (!modelIndexes) throw new Error(`Geometry indexing error with model ${modelIndex}`);\n\n            const textureIds = modelTextureIds[modelIndex];\n            const textureMappings = modelTextureMappings[modelIndex];\n            \n            for (let triangleIndex = 0; triangleIndex < textureIds.length; triangleIndex++) {\n                const textureId = textureIds[triangleIndex];\n                const textureIndex = textureArray.indexOf(Registries.textures.get(textureId)!);\n                const texturePosition = texturePositions[textureIndex];\n\n                for (let vertexIndex = 0; vertexIndex < 3; vertexIndex++) {\n                    const modelOffset = modelIndexes[0];\n                    const offset = (triangleIndex * 3 + vertexIndex) * 2;\n\n                    this.textureMappings[modelOffset * 2 + offset] = (textureMappings[offset] + texturePosition) / combinedSize.x;\n                    this.textureMappings[modelOffset * 2 + offset + 1] = (textureMappings[offset + 1]) / combinedSize.y;\n                }\n            }\n        }\n\n        if (MeshAssembler.PRINT_OUTPUT) {\n            console.groupCollapsed(\"Vertex positions\");\n            console.log(this.vertexPositions);\n            console.groupEnd();\n            console.groupCollapsed(\"Texture mappings\")\n            console.log(this.textureMappings);\n            console.groupEnd();\n            console.log(\"%cTexture has been added to the bottom of the document\", \"font-style: italic;\");\n            console.groupEnd();\n        }\n\n        return this.createAssembledMesh();\n    }\n\n    private createAssembledMesh(): AssembledMesh {\n        return new AssembledMesh(this.vertexPositions, this.textureMappings, this.texture, this.modelIndexes);\n    }\n\n    private getTextureArrayFromModelTextureIds(modelTextureIds: Uint32Array[]): Texture[] {\n        let textures: Set<Texture> = new Set();\n\n        for (const ids of modelTextureIds) {\n            for (const id of ids) {\n                const texture = Registries.textures.get(id);\n\n                if (!texture) throw new Error(`Texture with id ${id} not found in registry`);\n\n                textures.add(texture);\n            }\n        }\n\n        return Array.from(textures);\n    }\n\n    private getCombinedTextureSize(textures: Iterable<Texture>): Vector2D {\n        let combinedWidth = 0;\n        let combinedHeight = 0;\n\n        for (const texture of textures) {\n            combinedWidth += texture.getTextureWidth();\n            combinedHeight = Math.max(combinedHeight, texture.getTextureHeight());\n        }\n\n        return new ImmutableVector2D(combinedWidth, combinedHeight);\n    }\n\n    private renderCombinedTextures(size: Vector2D, textures: Texture[]): { texturePositions: Uint32Array, texture: Texture } {\n        if (textures.length == 0) {\n            return {\n                texturePositions: new Uint32Array(0),\n                texture: Texture.fromDataArray(new Uint8ClampedArray(0), 0, 0)\n            };\n        }\n\n        const canvas = new OffscreenCanvas(size.x, size.y);\n        const context = canvas.getContext('2d')!;\n\n        const texturePositions = new Uint32Array(textures.length);\n        let xOffset = 0;\n\n        let textureIndex = 0;\n\n        for (const texture of textures) {\n            context.putImageData(texture.toImageData(), xOffset, 0);\n\n            texturePositions[textureIndex] = xOffset;\n\n            xOffset += texture.getTextureWidth();\n            textureIndex++;\n        }\n\n        if (MeshAssembler.PRINT_OUTPUT) {\n            canvas.convertToBlob().then(blob => {\n                const url = URL.createObjectURL(blob);\n    \n                const img = new Image();\n                img.onload = () => {\n                    URL.revokeObjectURL(url);\n                };\n    \n                img.src = url;\n            });\n        }\n\n        const texture = Texture.fromImageData(context.getImageData(0, 0, size.x, size.y));\n\n        return { texturePositions, texture };\n    }\n\n    private static PRINT_OUTPUT = false;\n}","import { BlockModel } from \"../model/static/block-model.js\";\n\nexport class InstancedDataSegment {\n    constructor(\n        private model: BlockModel | null,\n        private size: number,\n        private startIndex: number = 0\n    ) {\n    }\n\n    getSize(): number {\n        return this.size;\n    }\n\n    setSize(value: number): void {\n        this.size = value;\n    }\n\n    getModel(): BlockModel | null {\n        return this.model;\n    }\n\n    setModel(model: BlockModel | null): void {\n        this.model = model;\n    }\n\n    getStartIndex(): number {\n        return this.startIndex;\n    }\n\n    setStartIndex(index: number) {\n        this.startIndex = index;\n    }\n}","import { Vector3 } from \"../../../utils/vector3d/vector3.js\";\nimport { ChunkDataReferencer } from \"../../../world/chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../../../world/chunk-data/chunk-data.js\";\nimport { BlockPosition } from \"../../../world/prototype/block-position.js\";\nimport { BlockModel } from \"../model/static/block-model.js\";\nimport { InstancedDataSegment } from \"./instanced-data-segment.js\";\n\nexport abstract class InstancedData {\n    protected segments: InstancedDataSegment[];\n    private UPDATES: number = 0;\n\n    constructor(protected chunkData: ChunkData) {\n    }\n\n    private static readonly cullDirections = [\n        new Vector3(-1, 0, 0),\n        new Vector3(1, 0, 0),\n        new Vector3(0, -1, 0),\n        new Vector3(0, 1, 0),\n        new Vector3(0, 0, -1),\n        new Vector3(0, 0, 1)\n    ];\n\n    private canCull(position: Vector3): boolean {\n        for (const direction of InstancedData.cullDirections) {\n            const neighbor = position.clone().add(direction);\n\n            if (ChunkDataReferencer.isOutOfBounds(neighbor)) {\n                return false;\n            }\n\n            const block = this.chunkData.getBlock(new BlockPosition(neighbor, this.chunkData));\n            const model = block.getBlockModel(new BlockPosition(neighbor, this.chunkData));\n\n            if (model == null || model.isTransparent()) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private initial() {\n        this.segments = [];\n\n        let lastType: BlockModel | null = null;\n        let lastSegment: InstancedDataSegment | null = null;\n\n        for (let i = 0; i < ChunkDataReferencer.cells; i++) {\n            const position = ChunkDataReferencer.position(i);\n\n            const blockPrototype = this.chunkData.getBlock(position);\n            const blockPosition = new BlockPosition(position, this.chunkData);\n            const model = blockPrototype.getBlockModel(blockPosition);\n\n            if (model == null || this.canCull(position)) {\n                lastSegment = null;\n                lastType = null;\n\n                continue;\n            }\n\n            if (model != lastType) {\n                lastSegment = new InstancedDataSegment(model, 1, i);\n\n                this.segments.push(lastSegment);\n                lastType = model;\n            } else if (lastSegment && model == lastType) {\n                lastSegment.setSize(lastSegment.getSize() + 1);\n            }\n        }\n    }\n\n    // Not very efficient right now\n    update() {\n        if (!this.segments) this.initial();\n\n        this.UPDATES++;\n        if (this.UPDATES > 1) return;\n\n        let culls = 0;\n        let rendered = 0;\n        let empty = 0;\n\n        this.segments = [];\n\n        let lastType: BlockModel | null = null;\n        let lastSegment: InstancedDataSegment | null = null;\n\n        for (let i = 0; i < ChunkDataReferencer.cells; i++) {\n            const position = ChunkDataReferencer.position(i);\n\n            const blockPrototype = this.chunkData.getBlock(position);\n            const blockPosition = new BlockPosition(position, this.chunkData);\n            const model = blockPrototype.getBlockModel(blockPosition);\n\n            if (model == null || this.canCull(position)) {\n                lastSegment = null;\n                lastType = null;\n\n                if (model) culls++;\n                else empty++;\n\n                continue;\n            }\n\n            if (model != lastType) {\n                lastSegment = new InstancedDataSegment(model, 1, i);\n\n                this.segments.push(lastSegment);\n                lastType = model;\n            } else if (lastSegment && model == lastType) {\n                lastSegment.setSize(lastSegment.getSize() + 1);\n            }\n\n            rendered++;\n        }\n\n        if (InstancedData.VERIFY_CALLS) {\n            this.verifyCalls();\n        }\n\n        if (InstancedData.LOG_CULLING) {\n            console.log(`Culled ${culls} blocks\\nRendered ${rendered} blocks\\n${empty} blocks without models\\nof ${culls + rendered + empty}/${ChunkDataReferencer.cells} total blocks`);\n        }\n    }\n\n    verifyCalls() {\n        for (let i = 0; i < this.segments.length; i++) {\n            const segment = this.segments[i];\n\n            if (segment.getModel() == null) {\n                console.log(this.segments);\n                throw new Error(`Segment ${i} has a null model`);\n            }\n\n            if (segment.getSize() == 0) {\n                throw new Error(`Segment ${i} has a size of 0`);\n            }\n\n            if (segment.getStartIndex() + segment.getSize() > ChunkDataReferencer.cells) {\n                console.group(\"Instanced data verification\");\n                console.error(`Segment ${i} goes out of bounds`);\n                console.log(`Start index: ${segment.getStartIndex()}`);\n                console.log(`Size: ${segment.getSize()}`);\n                console.log(`End index: ${segment.getStartIndex() + segment.getSize()}`);\n                console.log(`Chunk size: ${ChunkDataReferencer.cells}`);\n                console.groupEnd();\n            }\n\n            let blockPosition = new BlockPosition(ChunkDataReferencer.position(segment.getStartIndex()), this.chunkData);\n            let actualModel = this.chunkData.getBlock(blockPosition).getBlockModel(blockPosition);\n\n            if (actualModel != segment.getModel()) {\n                console.group(\"Instanced data verification\");\n                console.error(`Segment ${i} has a different model than the actual block`);\n                console.groupEnd();\n\n                continue;\n            }\n\n            for (let j = 1; j < segment.getSize(); j++) {\n                blockPosition = new BlockPosition(ChunkDataReferencer.position(segment.getStartIndex() + j), this.chunkData);\n                actualModel = this.chunkData.getBlock(blockPosition).getBlockModel(blockPosition);\n\n                if (actualModel != segment.getModel()) {\n                    console.group(\"Instanced data verification\");\n                    console.error(`Segment ${i} has a different model than the actual block`);\n                    console.log(`Block at ${blockPosition.getLocalPosition()} has model ${actualModel?.getRegisteredName()}`);\n                    console.log(`Segment model is ${segment.getModel()?.getRegisteredName()}`);\n                    console.groupEnd();\n\n                    break;\n                }\n            }\n        }\n    }\n\n    private static VERIFY_CALLS = false;\n    private static LOG_CULLING = false;\n}","import { ChunkDataReferencer } from \"../../../../world/chunk-data/chunk-data-referencer.js\";\nimport { ChunkData } from \"../../../../world/chunk-data/chunk-data.js\";\nimport { InstancedData } from \"../../instancing/instanced-data.js\";\nimport { AssembledMesh } from \"../../terrain/assembled-mesh.js\";\n\nexport class WebGPUInstancedData extends InstancedData {\n    private indirectCalls: Uint32Array;\n    private callCount: number;\n    \n    constructor(private assembledMesh: AssembledMesh, chunkData: ChunkData) {\n        super(chunkData);\n\n        this.indirectCalls = new Uint32Array(ChunkDataReferencer.cells * 4);\n    }\n\n    update() {\n        super.update();\n\n        this.callCount = this.segments.length;\n\n        for (let i = 0; i < this.indirectCalls.length / 4; i++) {\n            let startIndex = i * 4;\n\n            if (i >= this.segments.length) {\n                this.indirectCalls[startIndex + 0] = 0;\n                this.indirectCalls[i * 4 + 1] = 0;\n                this.indirectCalls[i * 4 + 2] = 0;\n                this.indirectCalls[i * 4 + 3] = 0;\n\n                continue;\n            }\n\n            const segment = this.segments[i];\n            const model = segment.getModel();\n\n            if (!model) continue;\n            \n            const vertexStartIndex = this.assembledMesh.getModelStartIndex(model);\n            const vertexEndIndex = this.assembledMesh.getModelEndIndex(model);\n            const vertexCount = vertexEndIndex - vertexStartIndex;\n            const instanceStartIndex = segment.getStartIndex();\n            const instanceCount = segment.getSize();\n\n            this.indirectCalls[startIndex] = vertexCount;\n            this.indirectCalls[startIndex + 1] = instanceCount;\n            this.indirectCalls[startIndex + 2] = vertexStartIndex;\n            this.indirectCalls[startIndex + 3] = instanceStartIndex;\n        }\n    }\n\n    getIndirectCalls(): Uint32Array {\n        return this.indirectCalls;\n    }\n\n    getCallCount(): number {\n        return this.callCount;\n    }\n}","import { Vector2D } from \"../../../../utils/vector2d/vector2d.js\";\nimport { ChunkInterface } from \"../../../../world/chunk-interface.js\";\nimport { RenderChunkMirror } from \"../../mirror/render-chunk-mirror.js\";\nimport { WebGPUInstancedData } from \"./webgpu-instanced-data.js\";\nimport { WebGPUWorldMirror } from \"./webgpu-world-mirror.js\";\n\nexport class WebGPUChunkMirror implements RenderChunkMirror {\n    private instancedData: WebGPUInstancedData;\n    private chunk: ChunkInterface.NonPlaceholder;\n\n    constructor(private position: Vector2D, private worldMirror: WebGPUWorldMirror) {\n        this.chunk = this.worldMirror.getWorld().getChunk(this.position) as ChunkInterface.NonPlaceholder;\n        this.instancedData = new WebGPUInstancedData(worldMirror.getTerrainMesh(), this.chunk.getChunkData());\n    }\n\n    getIndirectDrawCalls(): Uint32Array {\n        return this.instancedData.getIndirectCalls();\n    }\n\n    getIndirectCallCount(): number {\n        return this.instancedData.getCallCount();\n    }\n\n    getPosition(): Vector2D {\n        return this.position;\n    }\n\n    update(): void {\n        this.instancedData.update();\n    }\n}","import { Registries } from \"../../../../game/registry/registries.js\";\nimport { Vector2D } from \"../../../../utils/vector2d/vector2d.js\";\nimport { World } from \"../../../../world/world.js\";\nimport { RenderWorldMirror } from \"../../mirror/render-world-mirror.js\";\nimport { Perspective } from \"../../pespective/perspective.js\";\nimport { AssembledMesh } from \"../../terrain/assembled-mesh.js\";\nimport { MeshAssembler } from \"../../terrain/mesh-assembler.js\";\nimport { WebGPUTexture } from \"./bindings/webgpu-texture.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\nimport { WebGPUChunkMirror } from \"./webgpu-chunk-mirror.js\";\nimport { WebGPURenderer } from \"./webgpu-renderer.js\";\n\nexport class WebGPUWorldMirror extends RenderWorldMirror<WebGPUChunkMirror> {\n    private terrainMesh: AssembledMesh;\n    private terrainTexture: WebGPUTexture;\n\n    constructor(private renderer: WebGPURenderer) {\n        super();\n    }\n\n    async setup(device: GraphicsDevice): Promise<void> {\n        const meshAssembler = new MeshAssembler(Registries.blockModels.values());\n        this.terrainMesh = meshAssembler.assembleMeshes();\n\n        this.terrainTexture = new WebGPUTexture(this.terrainMesh.getTexture());\n        await this.terrainTexture.setup(device);\n    }\n\n    getWorld(): World {\n        return this.renderer.getWorld();\n    }\n\n    getPerspective(): Perspective {\n        return this.renderer.getPerspective();\n    }\n\n    protected createRenderChunkMirror(position: Vector2D): WebGPUChunkMirror {\n        return new WebGPUChunkMirror(position, this);\n    }\n\n    updateRenderedWorld(): void {\n        super.updateRenderedWorld();\n\n        for (const chunk of this.getChunks()) {\n            chunk.update();\n        }\n    }\n\n    getTerrainMesh(): AssembledMesh {\n        return this.terrainMesh;\n    }\n\n    getWorldRenderer(): WebGPURenderer {\n        return this.renderer;\n    }\n\n    getVisibleChunks(): Iterable<WebGPUChunkMirror> {\n        return this.getChunks();\n    }\n}","import { World } from \"../../../../world/world.js\";\nimport { Renderer } from \"../../../renderer.js\";\nimport { Color } from \"../../../utils/color.js\";\nimport { Perspective } from \"../../pespective/perspective.js\";\nimport { Projector } from \"../../pespective/projector.js\";\nimport { WorldRenderer } from \"../../world-renderer.js\";\nimport { BindGroupManager } from \"./bindings/bind-group-manager.js\";\nimport { Camera } from \"./camera.js\";\nimport { DepthTexture } from \"./depth-texture.js\";\nimport { GraphicsDevice } from \"./graphics-device.js\";\nimport { MultisampleTexture } from \"./multisample-texture.js\";\nimport { ClearRenderPass } from \"./pass/clear-render-pass.js\";\nimport { RenderPass } from \"./pass/render-pass.js\";\nimport { TerrainRenderPass } from \"./pass/terrain-render-pass.js\";\nimport { WebGPUWorldMirror } from \"./webgpu-world-mirror.js\";\n\nexport class WebGPURenderer implements WorldRenderer {\n    private device: GraphicsDevice;\n    private world: World;\n    private renderedWorld: WebGPUWorldMirror;\n    private passes: RenderPass[];\n    private bindGroupManager: BindGroupManager;\n\n    private multisampleTexture: MultisampleTexture;\n    private depthTexture: DepthTexture;\n\n    private camera: Camera;\n    private perspective: Perspective;\n    private projector: Projector = new Projector(Math.PI / 180 * 75, 1, 0.1, 1000);\n\n    constructor(private renderer: Renderer) {\n        this.renderedWorld = new WebGPUWorldMirror(this);\n        this.device = new GraphicsDevice(document.createElement('canvas'), this);\n        this.bindGroupManager = new BindGroupManager();\n\n        const terrainRenderPass = new TerrainRenderPass(this.renderedWorld);\n\n        terrainRenderPass.setBindGroupManager(this.bindGroupManager);\n\n        this.passes = [\n            new ClearRenderPass(new Color(0, 0, 0, 1)),\n            terrainRenderPass\n        ];\n    }\n\n    getDepthTexture(): DepthTexture {\n        return this.depthTexture;\n    }\n\n    getMultisampleTexture(): MultisampleTexture {\n        return this.multisampleTexture;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this.device.getCanvas();\n    }\n\n    getRenderer(): Renderer {\n        return this.renderer;\n    }\n\n    setWorld(world: any): void {\n        if (this.world) throw new Error('Cannot set rendered world twice');\n\n        this.world = world;\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    async setupWorldRenderer(): Promise<void> {\n        await this.device.setup();\n\n        this.camera = new Camera();\n        this.camera.setProjector(this.projector);\n        await this.camera.setup(this.device);\n        this.camera.update(this.device);\n        this.bindGroupManager.addBindGroup(this.camera.getCameraBindGroup());\n\n        this.depthTexture = new DepthTexture();\n        await this.depthTexture.setup(this.device);\n\n        this.multisampleTexture = new MultisampleTexture();\n        await this.multisampleTexture.setup(this.device);\n\n        await this.renderedWorld.setup(this.device);\n\n        for (const pass of this.passes) {\n            await pass.setupBindings(this.device);\n        }\n\n        await this.bindGroupManager.setup(this.device);\n\n        for (const pass of this.passes) {\n            await pass.setup(this.device);\n        }\n    }\n\n    async render(): Promise<void> {\n        const canvas = this.device.getCanvas();\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        this.projector.setAspectRatio(canvas.width / canvas.height);\n        this.perspective.updatePerspective();\n        this.camera.update(this.device);\n\n        await this.depthTexture.resize(canvas.width, canvas.height);\n        await this.multisampleTexture.resize(canvas.width, canvas.height);\n\n        this.renderedWorld.updateRenderedWorld();\n\n        for (const renderPass of this.passes) {\n            await renderPass.render();\n        }\n    }\n\n    getPerspective(): Perspective {\n        return this.perspective;\n    }\n\n    setPerspective(perspective: Perspective): void {\n        this.perspective = perspective;\n\n        this.camera.setPerspective(perspective);\n    }\n\n    getProjector(): Projector {\n        return this.projector;\n    }\n\n    setProjector(projector: Projector): void {\n        this.projector = projector;\n\n        this.camera.setProjector(projector);\n    }\n\n    getCamera(): Camera {\n        return this.camera;\n    }\n\n    static async isSupported() {\n        if (!navigator.gpu) return false;\n\n        const adapter = await navigator.gpu.requestAdapter();\n        if (!adapter) return false;\n\n        return true;\n    }\n}","import { World } from \"../world/world.js\";\nimport { WebGPURenderer } from \"./world/implementation/webgpu/webgpu-renderer.js\";\nimport { WorldRenderer } from \"./world/world-renderer.js\";\n\nexport class Renderer {\n    private worldRenderer: WorldRenderer | null;\n\n    constructor(private world: World) {\n    }\n\n    getWorldRenderer(): WorldRenderer {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        return this.worldRenderer;\n    }\n\n    getElement(): HTMLElement {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        return this.worldRenderer.getCanvas();\n    }\n\n    getWorld(): World {\n        return this.world;\n    }\n\n    async setupRenderer() {\n        if (await WebGPURenderer.isSupported()) {\n            this.worldRenderer = new WebGPURenderer(this);\n        } else {\n            throw new Error(\"No supported world renderer found\");\n        }\n\n        this.worldRenderer.setWorld(this.world);\n        await this.worldRenderer.setupWorldRenderer();\n    }\n\n    async render(): Promise<void> {\n        if (!this.worldRenderer) throw new Error('No world renderer set');\n\n        await this.worldRenderer.render();\n    }\n}","import { Matrix4 } from \"../../../utils/matrix/matrix4.js\";\nimport { Vector2D } from \"../../../utils/vector2d/vector2d.js\";\nimport { Entity } from \"../../../world/entity/entity.js\";\nimport { Perspective } from \"./perspective.js\";\n\nexport class EntityPerspective implements Perspective {\n    private matrix: Matrix4;\n\n    constructor(private entity: Entity) {\n    }\n\n    getChunkLocation(): Vector2D {\n        if (!this.entity.getParentChunk()) {\n            throw new Error(\"Cannot get chunk location of unbound entity\");\n        }\n\n        return this.entity.getParentChunk()!.getPosition();\n    }\n\n    getTransformationMatrix(): Matrix4 {\n        return this.matrix;\n    }\n\n    getRenderDistance(): number {\n        return 10;\n    }\n\n    updatePerspective() {\n        this.matrix = this.computeTransformationMatrix();\n    }\n\n    computeTransformationMatrix(): Matrix4 {\n        let matrix = new Matrix4();\n\n        matrix.multiply(Matrix4.createTranslation(this.entity.getPosition()));\n        matrix.multiply(Matrix4.createRotation(this.entity.getRotation()));\n\n        return matrix;\n    }\n}","import { EntityPhysics } from \"../physics/entity/entity-physics.js\";\nimport { ImmutableVector2D } from \"../utils/vector2d/immutable-vector2d.js\";\nimport { Vector3 } from \"../utils/vector3d/vector3.js\";\nimport { Entity } from \"../world/entity/entity.js\";\n\nexport class EntityFlyControls {\n    constructor(private entity: Entity) {\n        document.addEventListener('keydown', this.onKeyDown.bind(this));\n        document.addEventListener('keyup', this.onKeyUp.bind(this));\n\n        document.addEventListener('pointerlockchange', this.onPointerLockChange.bind(this));\n        document.addEventListener('mousemove', this.onMouseMove.bind(this));\n\n        document.addEventListener('click', () => {\n            if (!this.pointerLocked) {\n                document.body.requestPointerLock();\n            }\n        });\n    }\n\n    private keys: Set<string> = new Set();\n    private pointerLocked: boolean = false;\n    private speed = 2;\n\n    private lastPressedForwardKey: \"KeyW\" | \"KeyS\" | null = null;\n    private lastPressedSideKey: \"KeyA\" | \"KeyD\" | null = null;\n    private lastPressedUpKey: \"Space\" | \"ShiftLeft\" | null = null;\n\n    private onKeyDown(event: KeyboardEvent) {\n        this.keys.add(event.code);\n\n        if (event.code === 'KeyW' || event.code === 'KeyS') {\n            this.lastPressedForwardKey = event.code as \"KeyW\" | \"KeyS\";\n        }\n\n        if (event.code === 'KeyA' || event.code === 'KeyD') {\n            this.lastPressedSideKey = event.code as \"KeyA\" | \"KeyD\";\n        }\n\n        if (event.code === 'Space' || event.code === 'ShiftLeft') {\n            this.lastPressedUpKey = event.code as \"Space\" | \"ShiftLeft\";\n        }\n    }\n\n    private onKeyUp(event: KeyboardEvent) {\n        this.keys.delete(event.code);\n\n        if (event.code === this.lastPressedForwardKey) {\n            this.lastPressedForwardKey = null;\n        }\n\n        if (event.code === this.lastPressedSideKey) {\n            this.lastPressedSideKey = null;\n        }\n\n        if (event.code === this.lastPressedUpKey) {\n            this.lastPressedUpKey = null;\n        }\n    }\n\n    private onPointerLockChange() {\n        this.pointerLocked = document.pointerLockElement === document.body;\n    }\n\n    private onMouseMove(event: MouseEvent) {\n        if (this.pointerLocked) {\n            const rotation = this.entity.getRotation();\n\n            rotation.yaw += -event.movementX * 0.01;\n            rotation.pitch += -event.movementY * 0.01;\n        }\n    }\n\n    move(direction: ImmutableVector2D) {\n        const physicalState = this.entity.getPhysicalState();\n\n        if (!physicalState) return;\n        \n        const rotation = this.entity.getRotation();\n\n        const forward = new ImmutableVector2D(-Math.sin(rotation.yaw), -Math.cos(rotation.yaw));\n        const right = new ImmutableVector2D(-forward.y, forward.x);\n\n        forward.scalarMultiply(5);\n        right.scalarMultiply(3);\n\n        physicalState.applyForce(new Vector3(\n            forward.x * direction.y + right.x * direction.x,\n            0,\n            forward.y * direction.y + right.y * direction.x\n        ).times(this.speed));\n    }\n\n    fly(direction: number) {\n        const physicalState = this.entity.getPhysicalState();\n\n        if (!physicalState) return;\n\n        physicalState.applyForce(new Vector3(0, direction * this.speed, 0));\n    }\n\n    update() {\n        if (this.lastPressedForwardKey == 'KeyW' || (!this.lastPressedForwardKey && this.keys.has('KeyW'))) {\n            this.move(new ImmutableVector2D(0, 1));\n        }\n\n        if (this.lastPressedForwardKey == 'KeyS' || (!this.lastPressedForwardKey && this.keys.has('KeyS'))) {\n            this.move(new ImmutableVector2D(0, -1));\n        }\n\n        if (this.lastPressedSideKey == 'KeyA' || (!this.lastPressedSideKey && this.keys.has('KeyA'))) {\n            this.move(new ImmutableVector2D(-1, 0));\n        }\n\n        if (this.lastPressedSideKey == 'KeyD' || (!this.lastPressedSideKey && this.keys.has('KeyD'))) {\n            this.move(new ImmutableVector2D(1, 0));\n        }\n\n        if (this.lastPressedUpKey == 'Space' || (!this.lastPressedUpKey && this.keys.has('Space'))) {\n            this.fly(1);\n        }\n\n        if (this.lastPressedUpKey == 'ShiftLeft' || (!this.lastPressedUpKey && this.keys.has('ShiftLeft'))) {\n            this.fly(-1);\n        }\n    }\n}","import { WorldGenerator } from \"../world/world-generation/world-generator.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\nimport { World } from \"../world/world.js\";\n\nexport class SingleplayerWorldLoader implements WorldLoader {\n    constructor(private worldGenerator: WorldGenerator) {\n    }\n\n    bindWorld(world: World): void {\n        this.worldGenerator.bindWorld(world);\n    }\n}","import { PlayerEntity } from \"../content/entity/player/player-entity.js\";\nimport { SimpleWorldGenerator } from \"../content/worldgen/simple-world-generator.js\";\nimport { EventClockViewer } from \"../game/event-clock-viewer.js\";\nimport { GameRuntimeType } from \"../game/game-runtime-type.js\";\nimport { Game } from \"../game/game.js\";\nimport { Registries } from \"../game/registry/registries.js\";\nimport { Renderer } from \"../render/renderer.js\";\nimport { EntityPerspective } from \"../render/world/pespective/entity-perspective.js\";\nimport { ChunkDataReferencer } from \"../world/chunk-data/chunk-data-referencer.js\";\nimport { EntityPrototype } from \"../world/prototype/entity-prototype.js\";\nimport { WorldLoader } from \"../world/world-loader.js\";\nimport { EntityFlyControls } from \"./entity-fly-controls.js\";\nimport { SingleplayerWorldLoader } from \"./singleplayer-world-loader.js\";\n\nexport class Client extends Game {\n    private renderer: Renderer;\n    private worldGenerator: SimpleWorldGenerator;\n    private worldLoader: WorldLoader;\n    private clockViewer: EventClockViewer;\n\n    constructor() {\n        super();\n\n        this.worldGenerator = new SimpleWorldGenerator();\n        this.worldLoader = new SingleplayerWorldLoader(this.worldGenerator);\n        this.getWorld().setWorldLoader(this.worldLoader);\n\n        this.clockViewer = new EventClockViewer(this.getClock());\n\n        this.renderer = new Renderer(this.getWorld());\n    }\n\n    getRenderer() {\n        return this.renderer;\n    }\n\n    getRuntimeType(): GameRuntimeType {\n        return GameRuntimeType.Singleplayer;\n    }\n\n    async start() {\n        await super.start();\n        await this.renderer.setupRenderer();\n\n        const world = this.getWorld();\n\n        const playerPrototype = Registries.entities.get('player') as EntityPrototype<PlayerEntity>;\n        const playerEntity = playerPrototype.createEntity();\n\n        world.addEntity(playerEntity);\n\n        playerEntity.getPosition().set(8, ChunkDataReferencer.dimensions.y, 8);\n\n        const playerPerspective = new EntityPerspective(playerEntity);\n\n        this.getRenderer().getWorldRenderer().setPerspective(playerPerspective);\n\n        const controls = new EntityFlyControls(playerEntity);\n\n        this.getClock().schedule(\"controls\", () => controls.update());\n\n        for (let x = -4; x <= 4; x++) {\n            for (let z = -4; z <= 4; z++) {\n                world.loadChunk(x, z);\n            }\n        }\n\n        const clock = this.getClock();\n        clock.schedule(\"tickWorld\", async () => await this.getWorld().tick(clock.getDelta()));\n        clock.schedule(\"render\", async () => await this.renderer.render());\n        clock.schedule(\"displayClockInfo\", () => this.clockViewer.update());\n        clock.schedule(\"generateChunks\", async () => await this.worldGenerator.generateChunks(1));\n        clock.start();\n    }\n}","import { Client } from \"./client.js\";\n\nconst client = new Client();\n\nawait client.start();\n\ndocument.body.appendChild(client.getRenderer().getElement());\n\nwindow['client'] = client;"],"names":["require$$0","require$$1","murmurhashJsModule","murmur.murmur3"],"mappings":"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C,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAEzD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACrD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAA,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAEtD,QAAA,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,cAAc,CAAC,MAAe,EAAE,MAAe,EAAE,MAAA,GAAkB,IAAI,OAAO,EAAE,EAAA;AACnF,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;QACtB,MAAM,CAAC,GAAG,MAAM,CAAC;QACjB,MAAM,CAAC,GAAG,MAAM,CAAC;AAEjB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAEhC,QAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7C,QAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7C,QAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAE9C,QAAA,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,OAAO,CAAC,MAAe,EAAE,MAAkB,GAAA,IAAI,OAAO,EAAE,EAAA;AAC3D,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;AACtB,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;QAEtB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACvD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QAEzD,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAElC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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","x_google_ignoreList":[0,1,2,3]}